Gram�tica

    0 $accept: programa $end

    1 programa: definicion_programa
    2         | definicion_paquete

    3 definicion_programa: PROGRAMA nombre ';' bloque_programa

    4 nombre: id_op IDENTIFICADOR

    5 id_op: /* vac�o */
    6      | id_op IDENTIFICADOR CUATRO_PTOS

    7 bloque_programa: declaracion_cargas declaracion_tipos declaracion_constantes declaracion_variables bloque_instrucciones

    8 bloque_instrucciones: '{' instruccion_unoomas '}'

    9 instruccion_unoomas: instruccion_unoomas instruccion
   10                    | instruccion

   11 definicion_paquete: PAQUETE nombre ';' seccion_cabecera seccion_cuerpo

   12 seccion_cabecera: CABECERA declaracion_cargas declaracion_tipos declaracion_constantes declaracion_variables declaracion_interfaces

   13 seccion_cuerpo: CUERPO declaracion_tipos declaracion_constantes declaracion_variables declaracion_subprograma

   14 declaracion_cargas: /* vac�o */
   15                   | CARGA declaracion_carga_unoomas ';'

   16 declaracion_carga_unoomas: nombre en_path_op nombres_op
   17                          | declaracion_carga_unoomas ',' nombre en_path_op nombres_op

   18 en_path_op: /* vac�o */
   19           | EN PATH

   20 nombres_op: /* vac�o */
   21           | '(' nombres_comas ')'

   22 nombres_comas: nombres_comas ',' nombre
   23              | nombre

   24 declaracion_tipos: /* vac�o */
   25                  | TIPO declaracion_tipo_unoomas

   26 declaracion_tipo_unoomas: declaracion_tipo_unoomas declaracion_tipo
   27                         | declaracion_tipo

   28 declaracion_tipo: nombre '=' tipo_no_estructurado_o_nombre_tipo ';'
   29                 | nombre '=' tipo_estructurado

   30 tipo_no_estructurado_o_nombre_tipo: nombre
   31                                   | tipo_escalar
   32                                   | tipo_fichero
   33                                   | tipo_enumerado
   34                                   | tipo_lista
   35                                   | tipo_lista_asociativa
   36                                   | tipo_conjunto

   37 tipo_estructurado: tipo_registro
   38                  | declaracion_clase

   39 tipo_escalar: ENTERO
   40             | REAL
   41             | BOOLEANO
   42             | CARACTER
   43             | CADENA

   44 tipo_fichero: FICHERO

   45 tipo_enumerado: '(' expresion_constante_unoomas ')'

   46 expresion_constante_unoomas: expresion_constante
   47                            | expresion_constante_unoomas ',' expresion_constante

   48 tipo_lista: LISTA rango_lista DE tipo_no_estructurado_o_nombre_tipo

   49 rango_lista: rango_lista ',' rango
   50            | rango

   51 rango: expresion DOS_PTOS expresion expresion_rango_op

   52 expresion_rango_op: /* vac�o */
   53                   | DOS_PTOS expresion

   54 tipo_lista_asociativa: LISTA ASOCIATIVA DE tipo_no_estructurado_o_nombre_tipo

   55 tipo_conjunto: CONJUNTO DE tipo_no_estructurado_o_nombre_tipo

   56 tipo_registro: REGISTRO '{' declaracion_campo '}'

   57 declaracion_campo: declaracion_campo nombres_comas ':' tipo_no_estructurado_o_nombre_tipo ';'
   58                  | nombres_comas ':' tipo_no_estructurado_o_nombre_tipo ';'

   59 declaracion_constantes: /* vac�o */
   60                       | CONSTANTE declaracion_constante_unoomas

   61 declaracion_constante_unoomas: declaracion_constante_unoomas declaracion_constante
   62                              | declaracion_constante

   63 declaracion_constante: nombre ';' tipo_no_estructurado_o_nombre_tipo '=' valor_constante

   64 valor_constante: expresion
   65                | '[' valor_constante_comas ']'
   66                | '[' clave_valor ']'
   67                | '[' campo_valor ']'

   68 valor_constante_comas: valor_constante_comas ',' valor_constante
   69                      | valor_constante

   70 clave_valor: clave_valor ',' CTC_CADENA FLECHA_DOBLE valor_constante
   71            | CTC_CADENA FLECHA_DOBLE valor_constante

   72 campo_valor: campo_valor ',' nombre FLECHA_DOBLE valor_constante
   73            | nombre FLECHA_DOBLE valor_constante

   74 declaracion_variables: /* vac�o */
   75                      | VARIABLE declaracion_variable

   76 declaracion_variable: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo '=' valor_constante ';'
   77                     | nombres_comas ':' tipo_no_estructurado_o_nombre_tipo ';'

   78 declaracion_interfaces: INTERFAZ cabecera_subprograma_unoomas

   79 declaracion_clase: declaracion_clase_mod
   80                  | declaracion_clase_nomod

   81 declaracion_clase_mod: CLASE FINAL '(' ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'
   82                      | CLASE FINAL '(' nombres_comas ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

   83 declaracion_clase_nomod: CLASE '(' nombres_comas ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'
   84                        | CLASE '(' ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

   85 declaraciones_publicas: PUBLICO declaracion_componente_unoomas
   86                       | declaracion_componente_unoomas

   87 declaraciones_semi: /* vac�o */
   88                   | SEMIPUBLICO declaracion_componente_unoomas

   89 declaraciones_privadas: /* vac�o */
   90                       | PRIVADO declaracion_componente_unoomas

   91 declaracion_componente_unoomas: declaracion_componente
   92                               | declaracion_componente_unoomas declaracion_componente

   93 declaracion_componente: declaracion_tipo_anidado
   94                       | declaracion_constante_anidada
   95                       | declaracion_atributos
   96                       | cabecera_subprograma ';' modificadores ';'
   97                       | cabecera_subprograma ';'

   98 declaracion_tipo_anidado: TIPO declaracion_tipo

   99 declaracion_constante_anidada: CONSTANTE declaracion_constante

  100 declaracion_atributos: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo ';'

  101 modificadores: modificador_comas

  102 modificador_comas: modificador_comas ',' modificador
  103                  | modificador

  104 modificador: GENERICO
  105            | ABSTRACTO
  106            | ESPECIFICO
  107            | FINAL

  108 declaracion_subprograma: declaracion_subprograma cabecera_subprograma bloque_subprograma
  109                        | cabecera_subprograma bloque_subprograma

  110 cabecera_subprograma: cabecera_funcion
  111                     | cabecera_procedimiento
  112                     | cabecera_constructor
  113                     | cabecera_destructor

  114 cabecera_subprograma_unoomas: cabecera_subprograma_unoomas cabecera_subprograma
  115                             | cabecera_subprograma

  116 cabecera_funcion: FUNCION nombre declaracion_parametros FLECHA_DOBLE tipo_no_estructurado_o_nombre_tipo

  117 cabecera_procedimiento: PROCEDIMIENTO nombre declaracion_parametros

  118 cabecera_constructor: CONSTRUCTOR nombre declaracion_parametros

  119 cabecera_destructor: DESTRUCTOR nombre

  120 declaracion_parametros: /* vac�o */
  121                       | '(' lista_parametros_formales ')'

  122 lista_parametros_formales: parametros_formales
  123                          | lista_parametros_formales ';' parametros_formales

  124 parametros_formales: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo MODIFICABLE
  125                    | nombres_comas ':' tipo_no_estructurado_o_nombre_tipo

  126 bloque_subprograma: declaracion_tipos declaracion_constantes declaracion_variables bloque_instrucciones

  127 instruccion: ';'
  128            | instruccion_asignacion
  129            | instruccion_salir
  130            | instruccion_devolver
  131            | instruccion_llamada
  132            | instruccion_si
  133            | instruccion_casos
  134            | instruccion_bucle
  135            | instruccion_probar_excepto
  136            | instruccion_lanzar

  137 instruccion_asignacion: objeto '=' expresion ';'

  138 instruccion_salir: SALIR SI expresion ';'
  139                  | SALIR ';'

  140 instruccion_devolver: DEVOLVER expresion ';'
  141                     | DEVOLVER ';'

  142 instruccion_llamada: llamada_subprograma ';'

  143 llamada_subprograma: nombre '(' expresion_comas ')' nombre '(' ')'

  144 expresion_comas: expresion_comas ',' expresion
  145                | expresion

  146 instruccion_si: SI expresion ENTONCES bloque_instrucciones SINO bloque_instrucciones
  147               | SI expresion ENTONCES bloque_instrucciones

  148 instruccion_casos: EN CASO expresion SEA caso ';'

  149 caso: caso entradas FLECHA_DOBLE bloque_instrucciones
  150     | entradas FLECHA_DOBLE bloque_instrucciones

  151 entradas: entradas_op entrada

  152 entradas_op: /* vac�o */
  153            | entradas_op entrada '|'

  154 entrada: expresion
  155        | rango
  156        | OTRO

  157 instruccion_bucle: clausula_iteracion bloque_instrucciones

  158 clausula_iteracion: PARA nombre EN objeto
  159                   | REPITE ELEMENTO nombre EN rango DESCENDENTE
  160                   | REPITE ELEMENTO nombre EN rango
  161                   | MIENTRAS expresion
  162                   | REPITE HASTA expresion

  163 instruccion_probar_excepto: PROBAR bloque_instrucciones EXCEPTO clausula_excepcion FINALMENTE bloque_instrucciones
  164                           | PROBAR bloque_instrucciones EXCEPTO clausula_excepcion

  165 clausula_excepcion: CUANDO nombre EJECUTA bloque_instrucciones

  166 instruccion_lanzar: LANZAR nombre ';'

  167 objeto: nombre
  168       | objeto '[' expresion_comas ']'
  169       | objeto '.' IDENTIFICADOR

  170 expresion_constante: CTC_ENTERA
  171                    | CTC_REAL
  172                    | CTC_CADENA
  173                    | CTC_CARACTER
  174                    | CTC_BOOLEANA

  175 expresion_primaria: expresion_constante
  176                   | objeto
  177                   | llamada_subprograma
  178                   | '(' expresion ')'

  179 expresion_unitaria: '-' expresion_primaria
  180                   | expresion_primaria

  181 expresion_potencia: expresion_unitaria POTENCIA expresion_potencia
  182                   | expresion_unitaria

  183 expresion_prod: expresion_prod '*' expresion_potencia
  184               | expresion_prod '/' expresion_potencia
  185               | expresion_prod '%' expresion_potencia
  186               | expresion_potencia

  187 expresion_sum: expresion_sum '+' expresion_prod
  188              | expresion_sum '-' expresion_prod
  189              | expresion_prod

  190 expresion_desplz: expresion_desplz DESPI expresion_sum
  191                 | expresion_desplz DESPD expresion_sum
  192                 | expresion_sum

  193 expresion_and_bin: expresion_and_bin '&' expresion_desplz
  194                  | expresion_desplz

  195 expresion_or_bin: expresion_or_bin '^' expresion_and_bin
  196                 | expresion_and_bin

  197 expresion_xor_bin: expresion_xor_bin '@' expresion_desplz
  198                  | expresion_or_bin

  199 expresion_comparar: expresion_comparar '<' expresion_xor_bin
  200                   | expresion_comparar '>' expresion_xor_bin
  201                   | expresion_comparar LEQ expresion_xor_bin
  202                   | expresion_comparar GEQ expresion_xor_bin
  203                   | expresion_comparar EQ expresion_xor_bin
  204                   | expresion_comparar NEQ expresion_xor_bin
  205                   | expresion_xor_bin

  206 expresion_negacion: '!' expresion_negacion
  207                   | expresion_comparar

  208 expresion_and_logico: expresion_and_logico AND expresion_negacion
  209                     | expresion_negacion

  210 expresion_or_logico: expresion_or_logico OR expresion_and_logico
  211                    | expresion_and_logico

  212 expresion: expresion_or_logico


Terminales con las reglas donde aparecen

$end (0) 0
'!' (33) 206
'%' (37) 185
'&' (38) 193
'(' (40) 21 45 81 82 83 84 121 143 178
')' (41) 21 45 81 82 83 84 121 143 178
'*' (42) 183
'+' (43) 187
',' (44) 17 22 47 49 68 70 72 102 144
'-' (45) 179 188
'.' (46) 169
'/' (47) 184
':' (58) 57 58 76 77 100 124 125
';' (59) 3 11 15 28 57 58 63 76 77 96 97 100 123 127 137 138 139 140
    141 142 148 166
'<' (60) 199
'=' (61) 28 29 63 76 137
'>' (62) 200
'@' (64) 197
'[' (91) 65 66 67 168
']' (93) 65 66 67 168
'^' (94) 195
'{' (123) 8 56 81 82 83 84
'|' (124) 153
'}' (125) 8 56 81 82 83 84
error (256)
ABSTRACTO (258) 105
AND (259) 208
ASOCIATIVA (260) 54
BOOLEANO (261) 41
CABECERA (262) 12
CADENA (263) 43
CASO (264) 148
CARACTER (265) 42
CARGA (266) 15
CLASE (267) 81 82 83 84
CONJUNTO (268) 55
CONSTANTE (269) 60 99
CUERPO (270) 13
CTC_BOOLEANA (271) 174
CTC_CADENA (272) 70 71 172
CTC_CARACTER (273) 173
CTC_ENTERA (274) 170
CTC_REAL (275) 171
CONSTRUCTOR (276) 118
CUANDO (277) 165
CUATRO_PTOS (278) 6
DESCENDENTE (279) 159
DESPD (280) 191
DESPI (281) 190
DESTRUCTOR (282) 119
DE (283) 48 54 55
DEVOLVER (284) 140 141
DOS_PTOS (285) 51 53
EJECUTA (286) 165
ELEMENTO (287) 159 160
EN (288) 19 148 158 159 160
ENTERO (289) 39
ENTONCES (290) 146 147
EQ (291) 203
ESPECIFICO (292) 106
EXCEPTO (293) 163 164
FICHERO (294) 44
FINAL (295) 81 82 107
FINALMENTE (296) 163
FLECHA_DOBLE (297) 70 71 72 73 116 149 150
FUNCION (298) 116
GEQ (299) 202
GENERICO (300) 104
HASTA (301) 162
IDENTIFICADOR (302) 4 6 169
INTERFAZ (303) 78
LANZAR (304) 166
LEQ (305) 201
LISTA (306) 48 54
MIENTRAS (307) 161
MODIFICABLE (308) 124
NEQ (309) 204
OTRO (310) 156
OR (311) 210
PAQUETE (312) 11
PARA (313) 158
PATH (314) 19
POTENCIA (315) 181
PRIVADO (316) 90
PROBAR (317) 163 164
PROCEDIMIENTO (318) 117
PROGRAMA (319) 3
PUBLICO (320) 85
REAL (321) 40
REGISTRO (322) 56
REPITE (323) 159 160 162
SEA (324) 148
SALIR (325) 138 139
SEMIPUBLICO (326) 88
SI (327) 138 146 147
SINO (328) 146
TIPO (329) 25 98
VARIABLE (330) 75


No terminales con las reglas donde aparecen

$accept (99)
    en la izquierda: 0
programa (100)
    en la izquierda: 1 2, en la derecha: 0
definicion_programa (101)
    en la izquierda: 3, en la derecha: 1
nombre (102)
    en la izquierda: 4, en la derecha: 3 11 16 17 22 23 28 29 30 63
    72 73 116 117 118 119 143 158 159 160 165 166 167
id_op (103)
    en la izquierda: 5 6, en la derecha: 4 6
bloque_programa (104)
    en la izquierda: 7, en la derecha: 3
bloque_instrucciones (105)
    en la izquierda: 8, en la derecha: 7 126 146 147 149 150 157 163
    164 165
instruccion_unoomas (106)
    en la izquierda: 9 10, en la derecha: 8 9
definicion_paquete (107)
    en la izquierda: 11, en la derecha: 2
seccion_cabecera (108)
    en la izquierda: 12, en la derecha: 11
seccion_cuerpo (109)
    en la izquierda: 13, en la derecha: 11
declaracion_cargas (110)
    en la izquierda: 14 15, en la derecha: 7 12
declaracion_carga_unoomas (111)
    en la izquierda: 16 17, en la derecha: 15 17
en_path_op (112)
    en la izquierda: 18 19, en la derecha: 16 17
nombres_op (113)
    en la izquierda: 20 21, en la derecha: 16 17
nombres_comas (114)
    en la izquierda: 22 23, en la derecha: 21 22 57 58 76 77 82 83
    100 124 125
declaracion_tipos (115)
    en la izquierda: 24 25, en la derecha: 7 12 13 126
declaracion_tipo_unoomas (116)
    en la izquierda: 26 27, en la derecha: 25 26
declaracion_tipo (117)
    en la izquierda: 28 29, en la derecha: 26 27 98
tipo_no_estructurado_o_nombre_tipo (118)
    en la izquierda: 30 31 32 33 34 35 36, en la derecha: 28 48 54
    55 57 58 63 76 77 100 116 124 125
tipo_estructurado (119)
    en la izquierda: 37 38, en la derecha: 29
tipo_escalar (120)
    en la izquierda: 39 40 41 42 43, en la derecha: 31
tipo_fichero (121)
    en la izquierda: 44, en la derecha: 32
tipo_enumerado (122)
    en la izquierda: 45, en la derecha: 33
expresion_constante_unoomas (123)
    en la izquierda: 46 47, en la derecha: 45 47
tipo_lista (124)
    en la izquierda: 48, en la derecha: 34
rango_lista (125)
    en la izquierda: 49 50, en la derecha: 48 49
rango (126)
    en la izquierda: 51, en la derecha: 49 50 155 159 160
expresion_rango_op (127)
    en la izquierda: 52 53, en la derecha: 51
tipo_lista_asociativa (128)
    en la izquierda: 54, en la derecha: 35
tipo_conjunto (129)
    en la izquierda: 55, en la derecha: 36
tipo_registro (130)
    en la izquierda: 56, en la derecha: 37
declaracion_campo (131)
    en la izquierda: 57 58, en la derecha: 56 57
declaracion_constantes (132)
    en la izquierda: 59 60, en la derecha: 7 12 13 126
declaracion_constante_unoomas (133)
    en la izquierda: 61 62, en la derecha: 60 61
declaracion_constante (134)
    en la izquierda: 63, en la derecha: 61 62 99
valor_constante (135)
    en la izquierda: 64 65 66 67, en la derecha: 63 68 69 70 71 72
    73 76
valor_constante_comas (136)
    en la izquierda: 68 69, en la derecha: 65 68
clave_valor (137)
    en la izquierda: 70 71, en la derecha: 66 70
campo_valor (138)
    en la izquierda: 72 73, en la derecha: 67 72
declaracion_variables (139)
    en la izquierda: 74 75, en la derecha: 7 12 13 126
declaracion_variable (140)
    en la izquierda: 76 77, en la derecha: 75
declaracion_interfaces (141)
    en la izquierda: 78, en la derecha: 12
declaracion_clase (142)
    en la izquierda: 79 80, en la derecha: 38
declaracion_clase_mod (143)
    en la izquierda: 81 82, en la derecha: 79
declaracion_clase_nomod (144)
    en la izquierda: 83 84, en la derecha: 80
declaraciones_publicas (145)
    en la izquierda: 85 86, en la derecha: 81 82 83 84
declaraciones_semi (146)
    en la izquierda: 87 88, en la derecha: 81 82 83 84
declaraciones_privadas (147)
    en la izquierda: 89 90, en la derecha: 81 82 83 84
declaracion_componente_unoomas (148)
    en la izquierda: 91 92, en la derecha: 85 86 88 90 92
declaracion_componente (149)
    en la izquierda: 93 94 95 96 97, en la derecha: 91 92
declaracion_tipo_anidado (150)
    en la izquierda: 98, en la derecha: 93
declaracion_constante_anidada (151)
    en la izquierda: 99, en la derecha: 94
declaracion_atributos (152)
    en la izquierda: 100, en la derecha: 95
modificadores (153)
    en la izquierda: 101, en la derecha: 96
modificador_comas (154)
    en la izquierda: 102 103, en la derecha: 101 102
modificador (155)
    en la izquierda: 104 105 106 107, en la derecha: 102 103
declaracion_subprograma (156)
    en la izquierda: 108 109, en la derecha: 13 108
cabecera_subprograma (157)
    en la izquierda: 110 111 112 113, en la derecha: 96 97 108 109
    114 115
cabecera_subprograma_unoomas (158)
    en la izquierda: 114 115, en la derecha: 78 114
cabecera_funcion (159)
    en la izquierda: 116, en la derecha: 110
cabecera_procedimiento (160)
    en la izquierda: 117, en la derecha: 111
cabecera_constructor (161)
    en la izquierda: 118, en la derecha: 112
cabecera_destructor (162)
    en la izquierda: 119, en la derecha: 113
declaracion_parametros (163)
    en la izquierda: 120 121, en la derecha: 116 117 118
lista_parametros_formales (164)
    en la izquierda: 122 123, en la derecha: 121 123
parametros_formales (165)
    en la izquierda: 124 125, en la derecha: 122 123
bloque_subprograma (166)
    en la izquierda: 126, en la derecha: 108 109
instruccion (167)
    en la izquierda: 127 128 129 130 131 132 133 134 135 136, en la derecha:
    9 10
instruccion_asignacion (168)
    en la izquierda: 137, en la derecha: 128
instruccion_salir (169)
    en la izquierda: 138 139, en la derecha: 129
instruccion_devolver (170)
    en la izquierda: 140 141, en la derecha: 130
instruccion_llamada (171)
    en la izquierda: 142, en la derecha: 131
llamada_subprograma (172)
    en la izquierda: 143, en la derecha: 142 177
expresion_comas (173)
    en la izquierda: 144 145, en la derecha: 143 144 168
instruccion_si (174)
    en la izquierda: 146 147, en la derecha: 132
instruccion_casos (175)
    en la izquierda: 148, en la derecha: 133
caso (176)
    en la izquierda: 149 150, en la derecha: 148 149
entradas (177)
    en la izquierda: 151, en la derecha: 149 150
entradas_op (178)
    en la izquierda: 152 153, en la derecha: 151 153
entrada (179)
    en la izquierda: 154 155 156, en la derecha: 151 153
instruccion_bucle (180)
    en la izquierda: 157, en la derecha: 134
clausula_iteracion (181)
    en la izquierda: 158 159 160 161 162, en la derecha: 157
instruccion_probar_excepto (182)
    en la izquierda: 163 164, en la derecha: 135
clausula_excepcion (183)
    en la izquierda: 165, en la derecha: 163 164
instruccion_lanzar (184)
    en la izquierda: 166, en la derecha: 136
objeto (185)
    en la izquierda: 167 168 169, en la derecha: 137 158 168 169 176
expresion_constante (186)
    en la izquierda: 170 171 172 173 174, en la derecha: 46 47 175
expresion_primaria (187)
    en la izquierda: 175 176 177 178, en la derecha: 179 180
expresion_unitaria (188)
    en la izquierda: 179 180, en la derecha: 181 182
expresion_potencia (189)
    en la izquierda: 181 182, en la derecha: 181 183 184 185 186
expresion_prod (190)
    en la izquierda: 183 184 185 186, en la derecha: 183 184 185 187
    188 189
expresion_sum (191)
    en la izquierda: 187 188 189, en la derecha: 187 188 190 191 192
expresion_desplz (192)
    en la izquierda: 190 191 192, en la derecha: 190 191 193 194 197
expresion_and_bin (193)
    en la izquierda: 193 194, en la derecha: 193 195 196
expresion_or_bin (194)
    en la izquierda: 195 196, en la derecha: 195 198
expresion_xor_bin (195)
    en la izquierda: 197 198, en la derecha: 197 199 200 201 202 203
    204 205
expresion_comparar (196)
    en la izquierda: 199 200 201 202 203 204 205, en la derecha: 199
    200 201 202 203 204 207
expresion_negacion (197)
    en la izquierda: 206 207, en la derecha: 206 208 209
expresion_and_logico (198)
    en la izquierda: 208 209, en la derecha: 208 210 211
expresion_or_logico (199)
    en la izquierda: 210 211, en la derecha: 210 212
expresion (200)
    en la izquierda: 212, en la derecha: 51 53 64 137 138 140 144 145
    146 147 148 154 161 162 178


estado 0

    0 $accept: . programa $end

    PAQUETE   desplazar e ir al estado 1
    PROGRAMA  desplazar e ir al estado 2

    programa             ir al estado 3
    definicion_programa  ir al estado 4
    definicion_paquete   ir al estado 5


estado 1

   11 definicion_paquete: PAQUETE . nombre ';' seccion_cabecera seccion_cuerpo

    $default  reduce usando la regla 5 (id_op)

    nombre  ir al estado 6
    id_op   ir al estado 7


estado 2

    3 definicion_programa: PROGRAMA . nombre ';' bloque_programa

    $default  reduce usando la regla 5 (id_op)

    nombre  ir al estado 8
    id_op   ir al estado 7


estado 3

    0 $accept: programa . $end

    $end  desplazar e ir al estado 9


estado 4

    1 programa: definicion_programa .

    $default  reduce usando la regla 1 (programa)


estado 5

    2 programa: definicion_paquete .

    $default  reduce usando la regla 2 (programa)


estado 6

   11 definicion_paquete: PAQUETE nombre . ';' seccion_cabecera seccion_cuerpo

    ';'  desplazar e ir al estado 10


estado 7

    4 nombre: id_op . IDENTIFICADOR
    6 id_op: id_op . IDENTIFICADOR CUATRO_PTOS

    IDENTIFICADOR  desplazar e ir al estado 11


estado 8

    3 definicion_programa: PROGRAMA nombre . ';' bloque_programa

    ';'  desplazar e ir al estado 12


estado 9

    0 $accept: programa $end .

    $default  aceptar


estado 10

   11 definicion_paquete: PAQUETE nombre ';' . seccion_cabecera seccion_cuerpo

    CABECERA  desplazar e ir al estado 13

    seccion_cabecera  ir al estado 14


estado 11

    4 nombre: id_op IDENTIFICADOR .
    6 id_op: id_op IDENTIFICADOR . CUATRO_PTOS

    CUATRO_PTOS  desplazar e ir al estado 15

    $default  reduce usando la regla 4 (nombre)


estado 12

    3 definicion_programa: PROGRAMA nombre ';' . bloque_programa

    CARGA  desplazar e ir al estado 16

    $default  reduce usando la regla 14 (declaracion_cargas)

    bloque_programa     ir al estado 17
    declaracion_cargas  ir al estado 18


estado 13

   12 seccion_cabecera: CABECERA . declaracion_cargas declaracion_tipos declaracion_constantes declaracion_variables declaracion_interfaces

    CARGA  desplazar e ir al estado 16

    $default  reduce usando la regla 14 (declaracion_cargas)

    declaracion_cargas  ir al estado 19


estado 14

   11 definicion_paquete: PAQUETE nombre ';' seccion_cabecera . seccion_cuerpo

    CUERPO  desplazar e ir al estado 20

    seccion_cuerpo  ir al estado 21


estado 15

    6 id_op: id_op IDENTIFICADOR CUATRO_PTOS .

    $default  reduce usando la regla 6 (id_op)


estado 16

   15 declaracion_cargas: CARGA . declaracion_carga_unoomas ';'

    $default  reduce usando la regla 5 (id_op)

    nombre                     ir al estado 22
    id_op                      ir al estado 7
    declaracion_carga_unoomas  ir al estado 23


estado 17

    3 definicion_programa: PROGRAMA nombre ';' bloque_programa .

    $default  reduce usando la regla 3 (definicion_programa)


estado 18

    7 bloque_programa: declaracion_cargas . declaracion_tipos declaracion_constantes declaracion_variables bloque_instrucciones

    TIPO  desplazar e ir al estado 24

    $default  reduce usando la regla 24 (declaracion_tipos)

    declaracion_tipos  ir al estado 25


estado 19

   12 seccion_cabecera: CABECERA declaracion_cargas . declaracion_tipos declaracion_constantes declaracion_variables declaracion_interfaces

    TIPO  desplazar e ir al estado 24

    $default  reduce usando la regla 24 (declaracion_tipos)

    declaracion_tipos  ir al estado 26


estado 20

   13 seccion_cuerpo: CUERPO . declaracion_tipos declaracion_constantes declaracion_variables declaracion_subprograma

    TIPO  desplazar e ir al estado 24

    $default  reduce usando la regla 24 (declaracion_tipos)

    declaracion_tipos  ir al estado 27


estado 21

   11 definicion_paquete: PAQUETE nombre ';' seccion_cabecera seccion_cuerpo .

    $default  reduce usando la regla 11 (definicion_paquete)


estado 22

   16 declaracion_carga_unoomas: nombre . en_path_op nombres_op

    EN  desplazar e ir al estado 28

    $default  reduce usando la regla 18 (en_path_op)

    en_path_op  ir al estado 29


estado 23

   15 declaracion_cargas: CARGA declaracion_carga_unoomas . ';'
   17 declaracion_carga_unoomas: declaracion_carga_unoomas . ',' nombre en_path_op nombres_op

    ';'  desplazar e ir al estado 30
    ','  desplazar e ir al estado 31


estado 24

   25 declaracion_tipos: TIPO . declaracion_tipo_unoomas

    $default  reduce usando la regla 5 (id_op)

    nombre                    ir al estado 32
    id_op                     ir al estado 7
    declaracion_tipo_unoomas  ir al estado 33
    declaracion_tipo          ir al estado 34


estado 25

    7 bloque_programa: declaracion_cargas declaracion_tipos . declaracion_constantes declaracion_variables bloque_instrucciones

    CONSTANTE  desplazar e ir al estado 35

    $default  reduce usando la regla 59 (declaracion_constantes)

    declaracion_constantes  ir al estado 36


estado 26

   12 seccion_cabecera: CABECERA declaracion_cargas declaracion_tipos . declaracion_constantes declaracion_variables declaracion_interfaces

    CONSTANTE  desplazar e ir al estado 35

    $default  reduce usando la regla 59 (declaracion_constantes)

    declaracion_constantes  ir al estado 37


estado 27

   13 seccion_cuerpo: CUERPO declaracion_tipos . declaracion_constantes declaracion_variables declaracion_subprograma

    CONSTANTE  desplazar e ir al estado 35

    $default  reduce usando la regla 59 (declaracion_constantes)

    declaracion_constantes  ir al estado 38


estado 28

   19 en_path_op: EN . PATH

    PATH  desplazar e ir al estado 39


estado 29

   16 declaracion_carga_unoomas: nombre en_path_op . nombres_op

    '('  desplazar e ir al estado 40

    $default  reduce usando la regla 20 (nombres_op)

    nombres_op  ir al estado 41


estado 30

   15 declaracion_cargas: CARGA declaracion_carga_unoomas ';' .

    $default  reduce usando la regla 15 (declaracion_cargas)


estado 31

   17 declaracion_carga_unoomas: declaracion_carga_unoomas ',' . nombre en_path_op nombres_op

    $default  reduce usando la regla 5 (id_op)

    nombre  ir al estado 42
    id_op   ir al estado 7


estado 32

   28 declaracion_tipo: nombre . '=' tipo_no_estructurado_o_nombre_tipo ';'
   29                 | nombre . '=' tipo_estructurado

    '='  desplazar e ir al estado 43


estado 33

   25 declaracion_tipos: TIPO declaracion_tipo_unoomas .
   26 declaracion_tipo_unoomas: declaracion_tipo_unoomas . declaracion_tipo

    IDENTIFICADOR  reduce usando la regla 5 (id_op)
    $default       reduce usando la regla 25 (declaracion_tipos)

    nombre            ir al estado 32
    id_op             ir al estado 7
    declaracion_tipo  ir al estado 44


estado 34

   27 declaracion_tipo_unoomas: declaracion_tipo .

    $default  reduce usando la regla 27 (declaracion_tipo_unoomas)


estado 35

   60 declaracion_constantes: CONSTANTE . declaracion_constante_unoomas

    $default  reduce usando la regla 5 (id_op)

    nombre                         ir al estado 45
    id_op                          ir al estado 7
    declaracion_constante_unoomas  ir al estado 46
    declaracion_constante          ir al estado 47


estado 36

    7 bloque_programa: declaracion_cargas declaracion_tipos declaracion_constantes . declaracion_variables bloque_instrucciones

    VARIABLE  desplazar e ir al estado 48

    $default  reduce usando la regla 74 (declaracion_variables)

    declaracion_variables  ir al estado 49


estado 37

   12 seccion_cabecera: CABECERA declaracion_cargas declaracion_tipos declaracion_constantes . declaracion_variables declaracion_interfaces

    VARIABLE  desplazar e ir al estado 48

    $default  reduce usando la regla 74 (declaracion_variables)

    declaracion_variables  ir al estado 50


estado 38

   13 seccion_cuerpo: CUERPO declaracion_tipos declaracion_constantes . declaracion_variables declaracion_subprograma

    VARIABLE  desplazar e ir al estado 48

    $default  reduce usando la regla 74 (declaracion_variables)

    declaracion_variables  ir al estado 51


estado 39

   19 en_path_op: EN PATH .

    $default  reduce usando la regla 19 (en_path_op)


estado 40

   21 nombres_op: '(' . nombres_comas ')'

    $default  reduce usando la regla 5 (id_op)

    nombre         ir al estado 52
    id_op          ir al estado 7
    nombres_comas  ir al estado 53


estado 41

   16 declaracion_carga_unoomas: nombre en_path_op nombres_op .

    $default  reduce usando la regla 16 (declaracion_carga_unoomas)


estado 42

   17 declaracion_carga_unoomas: declaracion_carga_unoomas ',' nombre . en_path_op nombres_op

    EN  desplazar e ir al estado 28

    $default  reduce usando la regla 18 (en_path_op)

    en_path_op  ir al estado 54


estado 43

   28 declaracion_tipo: nombre '=' . tipo_no_estructurado_o_nombre_tipo ';'
   29                 | nombre '=' . tipo_estructurado

    BOOLEANO  desplazar e ir al estado 55
    CADENA    desplazar e ir al estado 56
    CARACTER  desplazar e ir al estado 57
    CLASE     desplazar e ir al estado 58
    CONJUNTO  desplazar e ir al estado 59
    ENTERO    desplazar e ir al estado 60
    FICHERO   desplazar e ir al estado 61
    LISTA     desplazar e ir al estado 62
    REAL      desplazar e ir al estado 63
    REGISTRO  desplazar e ir al estado 64
    '('       desplazar e ir al estado 65

    $default  reduce usando la regla 5 (id_op)

    nombre                              ir al estado 66
    id_op                               ir al estado 7
    tipo_no_estructurado_o_nombre_tipo  ir al estado 67
    tipo_estructurado                   ir al estado 68
    tipo_escalar                        ir al estado 69
    tipo_fichero                        ir al estado 70
    tipo_enumerado                      ir al estado 71
    tipo_lista                          ir al estado 72
    tipo_lista_asociativa               ir al estado 73
    tipo_conjunto                       ir al estado 74
    tipo_registro                       ir al estado 75
    declaracion_clase                   ir al estado 76
    declaracion_clase_mod               ir al estado 77
    declaracion_clase_nomod             ir al estado 78


estado 44

   26 declaracion_tipo_unoomas: declaracion_tipo_unoomas declaracion_tipo .

    $default  reduce usando la regla 26 (declaracion_tipo_unoomas)


estado 45

   63 declaracion_constante: nombre . ';' tipo_no_estructurado_o_nombre_tipo '=' valor_constante

    ';'  desplazar e ir al estado 79


estado 46

   60 declaracion_constantes: CONSTANTE declaracion_constante_unoomas .
   61 declaracion_constante_unoomas: declaracion_constante_unoomas . declaracion_constante

    IDENTIFICADOR  reduce usando la regla 5 (id_op)
    $default       reduce usando la regla 60 (declaracion_constantes)

    nombre                 ir al estado 45
    id_op                  ir al estado 7
    declaracion_constante  ir al estado 80


estado 47

   62 declaracion_constante_unoomas: declaracion_constante .

    $default  reduce usando la regla 62 (declaracion_constante_unoomas)


estado 48

   75 declaracion_variables: VARIABLE . declaracion_variable

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 52
    id_op                 ir al estado 7
    nombres_comas         ir al estado 81
    declaracion_variable  ir al estado 82


estado 49

    7 bloque_programa: declaracion_cargas declaracion_tipos declaracion_constantes declaracion_variables . bloque_instrucciones

    '{'  desplazar e ir al estado 83

    bloque_instrucciones  ir al estado 84


estado 50

   12 seccion_cabecera: CABECERA declaracion_cargas declaracion_tipos declaracion_constantes declaracion_variables . declaracion_interfaces

    INTERFAZ  desplazar e ir al estado 85

    declaracion_interfaces  ir al estado 86


estado 51

   13 seccion_cuerpo: CUERPO declaracion_tipos declaracion_constantes declaracion_variables . declaracion_subprograma

    CONSTRUCTOR    desplazar e ir al estado 87
    DESTRUCTOR     desplazar e ir al estado 88
    FUNCION        desplazar e ir al estado 89
    PROCEDIMIENTO  desplazar e ir al estado 90

    declaracion_subprograma  ir al estado 91
    cabecera_subprograma     ir al estado 92
    cabecera_funcion         ir al estado 93
    cabecera_procedimiento   ir al estado 94
    cabecera_constructor     ir al estado 95
    cabecera_destructor      ir al estado 96


estado 52

   23 nombres_comas: nombre .

    $default  reduce usando la regla 23 (nombres_comas)


estado 53

   21 nombres_op: '(' nombres_comas . ')'
   22 nombres_comas: nombres_comas . ',' nombre

    ','  desplazar e ir al estado 97
    ')'  desplazar e ir al estado 98


estado 54

   17 declaracion_carga_unoomas: declaracion_carga_unoomas ',' nombre en_path_op . nombres_op

    '('  desplazar e ir al estado 40

    $default  reduce usando la regla 20 (nombres_op)

    nombres_op  ir al estado 99


estado 55

   41 tipo_escalar: BOOLEANO .

    $default  reduce usando la regla 41 (tipo_escalar)


estado 56

   43 tipo_escalar: CADENA .

    $default  reduce usando la regla 43 (tipo_escalar)


estado 57

   42 tipo_escalar: CARACTER .

    $default  reduce usando la regla 42 (tipo_escalar)


estado 58

   81 declaracion_clase_mod: CLASE . FINAL '(' ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'
   82                      | CLASE . FINAL '(' nombres_comas ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'
   83 declaracion_clase_nomod: CLASE . '(' nombres_comas ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'
   84                        | CLASE . '(' ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    FINAL  desplazar e ir al estado 100
    '('    desplazar e ir al estado 101


estado 59

   55 tipo_conjunto: CONJUNTO . DE tipo_no_estructurado_o_nombre_tipo

    DE  desplazar e ir al estado 102


estado 60

   39 tipo_escalar: ENTERO .

    $default  reduce usando la regla 39 (tipo_escalar)


estado 61

   44 tipo_fichero: FICHERO .

    $default  reduce usando la regla 44 (tipo_fichero)


estado 62

   48 tipo_lista: LISTA . rango_lista DE tipo_no_estructurado_o_nombre_tipo
   54 tipo_lista_asociativa: LISTA . ASOCIATIVA DE tipo_no_estructurado_o_nombre_tipo

    ASOCIATIVA    desplazar e ir al estado 103
    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    rango_lista           ir al estado 113
    rango                 ir al estado 114
    llamada_subprograma   ir al estado 115
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 129
    expresion_or_logico   ir al estado 130
    expresion             ir al estado 131


estado 63

   40 tipo_escalar: REAL .

    $default  reduce usando la regla 40 (tipo_escalar)


estado 64

   56 tipo_registro: REGISTRO . '{' declaracion_campo '}'

    '{'  desplazar e ir al estado 132


estado 65

   45 tipo_enumerado: '(' . expresion_constante_unoomas ')'

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108

    expresion_constante_unoomas  ir al estado 133
    expresion_constante          ir al estado 134


estado 66

   30 tipo_no_estructurado_o_nombre_tipo: nombre .

    $default  reduce usando la regla 30 (tipo_no_estructurado_o_nombre_tipo)


estado 67

   28 declaracion_tipo: nombre '=' tipo_no_estructurado_o_nombre_tipo . ';'

    ';'  desplazar e ir al estado 135


estado 68

   29 declaracion_tipo: nombre '=' tipo_estructurado .

    $default  reduce usando la regla 29 (declaracion_tipo)


estado 69

   31 tipo_no_estructurado_o_nombre_tipo: tipo_escalar .

    $default  reduce usando la regla 31 (tipo_no_estructurado_o_nombre_tipo)


estado 70

   32 tipo_no_estructurado_o_nombre_tipo: tipo_fichero .

    $default  reduce usando la regla 32 (tipo_no_estructurado_o_nombre_tipo)


estado 71

   33 tipo_no_estructurado_o_nombre_tipo: tipo_enumerado .

    $default  reduce usando la regla 33 (tipo_no_estructurado_o_nombre_tipo)


estado 72

   34 tipo_no_estructurado_o_nombre_tipo: tipo_lista .

    $default  reduce usando la regla 34 (tipo_no_estructurado_o_nombre_tipo)


estado 73

   35 tipo_no_estructurado_o_nombre_tipo: tipo_lista_asociativa .

    $default  reduce usando la regla 35 (tipo_no_estructurado_o_nombre_tipo)


estado 74

   36 tipo_no_estructurado_o_nombre_tipo: tipo_conjunto .

    $default  reduce usando la regla 36 (tipo_no_estructurado_o_nombre_tipo)


estado 75

   37 tipo_estructurado: tipo_registro .

    $default  reduce usando la regla 37 (tipo_estructurado)


estado 76

   38 tipo_estructurado: declaracion_clase .

    $default  reduce usando la regla 38 (tipo_estructurado)


estado 77

   79 declaracion_clase: declaracion_clase_mod .

    $default  reduce usando la regla 79 (declaracion_clase)


estado 78

   80 declaracion_clase: declaracion_clase_nomod .

    $default  reduce usando la regla 80 (declaracion_clase)


estado 79

   63 declaracion_constante: nombre ';' . tipo_no_estructurado_o_nombre_tipo '=' valor_constante

    BOOLEANO  desplazar e ir al estado 55
    CADENA    desplazar e ir al estado 56
    CARACTER  desplazar e ir al estado 57
    CONJUNTO  desplazar e ir al estado 59
    ENTERO    desplazar e ir al estado 60
    FICHERO   desplazar e ir al estado 61
    LISTA     desplazar e ir al estado 62
    REAL      desplazar e ir al estado 63
    '('       desplazar e ir al estado 65

    $default  reduce usando la regla 5 (id_op)

    nombre                              ir al estado 66
    id_op                               ir al estado 7
    tipo_no_estructurado_o_nombre_tipo  ir al estado 136
    tipo_escalar                        ir al estado 69
    tipo_fichero                        ir al estado 70
    tipo_enumerado                      ir al estado 71
    tipo_lista                          ir al estado 72
    tipo_lista_asociativa               ir al estado 73
    tipo_conjunto                       ir al estado 74


estado 80

   61 declaracion_constante_unoomas: declaracion_constante_unoomas declaracion_constante .

    $default  reduce usando la regla 61 (declaracion_constante_unoomas)


estado 81

   22 nombres_comas: nombres_comas . ',' nombre
   76 declaracion_variable: nombres_comas . ':' tipo_no_estructurado_o_nombre_tipo '=' valor_constante ';'
   77                     | nombres_comas . ':' tipo_no_estructurado_o_nombre_tipo ';'

    ','  desplazar e ir al estado 97
    ':'  desplazar e ir al estado 137


estado 82

   75 declaracion_variables: VARIABLE declaracion_variable .

    $default  reduce usando la regla 75 (declaracion_variables)


estado 83

    8 bloque_instrucciones: '{' . instruccion_unoomas '}'

    DEVOLVER  desplazar e ir al estado 138
    EN        desplazar e ir al estado 139
    LANZAR    desplazar e ir al estado 140
    MIENTRAS  desplazar e ir al estado 141
    PARA      desplazar e ir al estado 142
    PROBAR    desplazar e ir al estado 143
    REPITE    desplazar e ir al estado 144
    SALIR     desplazar e ir al estado 145
    SI        desplazar e ir al estado 146
    ';'       desplazar e ir al estado 147

    $default  reduce usando la regla 5 (id_op)

    nombre                      ir al estado 112
    id_op                       ir al estado 7
    instruccion_unoomas         ir al estado 148
    instruccion                 ir al estado 149
    instruccion_asignacion      ir al estado 150
    instruccion_salir           ir al estado 151
    instruccion_devolver        ir al estado 152
    instruccion_llamada         ir al estado 153
    llamada_subprograma         ir al estado 154
    instruccion_si              ir al estado 155
    instruccion_casos           ir al estado 156
    instruccion_bucle           ir al estado 157
    clausula_iteracion          ir al estado 158
    instruccion_probar_excepto  ir al estado 159
    instruccion_lanzar          ir al estado 160
    objeto                      ir al estado 161


estado 84

    7 bloque_programa: declaracion_cargas declaracion_tipos declaracion_constantes declaracion_variables bloque_instrucciones .

    $default  reduce usando la regla 7 (bloque_programa)


estado 85

   78 declaracion_interfaces: INTERFAZ . cabecera_subprograma_unoomas

    CONSTRUCTOR    desplazar e ir al estado 87
    DESTRUCTOR     desplazar e ir al estado 88
    FUNCION        desplazar e ir al estado 89
    PROCEDIMIENTO  desplazar e ir al estado 90

    cabecera_subprograma          ir al estado 162
    cabecera_subprograma_unoomas  ir al estado 163
    cabecera_funcion              ir al estado 93
    cabecera_procedimiento        ir al estado 94
    cabecera_constructor          ir al estado 95
    cabecera_destructor           ir al estado 96


estado 86

   12 seccion_cabecera: CABECERA declaracion_cargas declaracion_tipos declaracion_constantes declaracion_variables declaracion_interfaces .

    $default  reduce usando la regla 12 (seccion_cabecera)


estado 87

  118 cabecera_constructor: CONSTRUCTOR . nombre declaracion_parametros

    $default  reduce usando la regla 5 (id_op)

    nombre  ir al estado 164
    id_op   ir al estado 7


estado 88

  119 cabecera_destructor: DESTRUCTOR . nombre

    $default  reduce usando la regla 5 (id_op)

    nombre  ir al estado 165
    id_op   ir al estado 7


estado 89

  116 cabecera_funcion: FUNCION . nombre declaracion_parametros FLECHA_DOBLE tipo_no_estructurado_o_nombre_tipo

    $default  reduce usando la regla 5 (id_op)

    nombre  ir al estado 166
    id_op   ir al estado 7


estado 90

  117 cabecera_procedimiento: PROCEDIMIENTO . nombre declaracion_parametros

    $default  reduce usando la regla 5 (id_op)

    nombre  ir al estado 167
    id_op   ir al estado 7


estado 91

   13 seccion_cuerpo: CUERPO declaracion_tipos declaracion_constantes declaracion_variables declaracion_subprograma .
  108 declaracion_subprograma: declaracion_subprograma . cabecera_subprograma bloque_subprograma

    CONSTRUCTOR    desplazar e ir al estado 87
    DESTRUCTOR     desplazar e ir al estado 88
    FUNCION        desplazar e ir al estado 89
    PROCEDIMIENTO  desplazar e ir al estado 90

    $default  reduce usando la regla 13 (seccion_cuerpo)

    cabecera_subprograma    ir al estado 168
    cabecera_funcion        ir al estado 93
    cabecera_procedimiento  ir al estado 94
    cabecera_constructor    ir al estado 95
    cabecera_destructor     ir al estado 96


estado 92

  109 declaracion_subprograma: cabecera_subprograma . bloque_subprograma

    TIPO  desplazar e ir al estado 24

    $default  reduce usando la regla 24 (declaracion_tipos)

    declaracion_tipos   ir al estado 169
    bloque_subprograma  ir al estado 170


estado 93

  110 cabecera_subprograma: cabecera_funcion .

    $default  reduce usando la regla 110 (cabecera_subprograma)


estado 94

  111 cabecera_subprograma: cabecera_procedimiento .

    $default  reduce usando la regla 111 (cabecera_subprograma)


estado 95

  112 cabecera_subprograma: cabecera_constructor .

    $default  reduce usando la regla 112 (cabecera_subprograma)


estado 96

  113 cabecera_subprograma: cabecera_destructor .

    $default  reduce usando la regla 113 (cabecera_subprograma)


estado 97

   22 nombres_comas: nombres_comas ',' . nombre

    $default  reduce usando la regla 5 (id_op)

    nombre  ir al estado 171
    id_op   ir al estado 7


estado 98

   21 nombres_op: '(' nombres_comas ')' .

    $default  reduce usando la regla 21 (nombres_op)


estado 99

   17 declaracion_carga_unoomas: declaracion_carga_unoomas ',' nombre en_path_op nombres_op .

    $default  reduce usando la regla 17 (declaracion_carga_unoomas)


estado 100

   81 declaracion_clase_mod: CLASE FINAL . '(' ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'
   82                      | CLASE FINAL . '(' nombres_comas ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    '('  desplazar e ir al estado 172


estado 101

   83 declaracion_clase_nomod: CLASE '(' . nombres_comas ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'
   84                        | CLASE '(' . ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    ')'  desplazar e ir al estado 173

    $default  reduce usando la regla 5 (id_op)

    nombre         ir al estado 52
    id_op          ir al estado 7
    nombres_comas  ir al estado 174


estado 102

   55 tipo_conjunto: CONJUNTO DE . tipo_no_estructurado_o_nombre_tipo

    BOOLEANO  desplazar e ir al estado 55
    CADENA    desplazar e ir al estado 56
    CARACTER  desplazar e ir al estado 57
    CONJUNTO  desplazar e ir al estado 59
    ENTERO    desplazar e ir al estado 60
    FICHERO   desplazar e ir al estado 61
    LISTA     desplazar e ir al estado 62
    REAL      desplazar e ir al estado 63
    '('       desplazar e ir al estado 65

    $default  reduce usando la regla 5 (id_op)

    nombre                              ir al estado 66
    id_op                               ir al estado 7
    tipo_no_estructurado_o_nombre_tipo  ir al estado 175
    tipo_escalar                        ir al estado 69
    tipo_fichero                        ir al estado 70
    tipo_enumerado                      ir al estado 71
    tipo_lista                          ir al estado 72
    tipo_lista_asociativa               ir al estado 73
    tipo_conjunto                       ir al estado 74


estado 103

   54 tipo_lista_asociativa: LISTA ASOCIATIVA . DE tipo_no_estructurado_o_nombre_tipo

    DE  desplazar e ir al estado 176


estado 104

  174 expresion_constante: CTC_BOOLEANA .

    $default  reduce usando la regla 174 (expresion_constante)


estado 105

  172 expresion_constante: CTC_CADENA .

    $default  reduce usando la regla 172 (expresion_constante)


estado 106

  173 expresion_constante: CTC_CARACTER .

    $default  reduce usando la regla 173 (expresion_constante)


estado 107

  170 expresion_constante: CTC_ENTERA .

    $default  reduce usando la regla 170 (expresion_constante)


estado 108

  171 expresion_constante: CTC_REAL .

    $default  reduce usando la regla 171 (expresion_constante)


estado 109

  178 expresion_primaria: '(' . expresion ')'

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    llamada_subprograma   ir al estado 115
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 129
    expresion_or_logico   ir al estado 130
    expresion             ir al estado 177


estado 110

  179 expresion_unitaria: '-' . expresion_primaria

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109

    $default  reduce usando la regla 5 (id_op)

    nombre               ir al estado 112
    id_op                ir al estado 7
    llamada_subprograma  ir al estado 115
    objeto               ir al estado 116
    expresion_constante  ir al estado 117
    expresion_primaria   ir al estado 178


estado 111

  206 expresion_negacion: '!' . expresion_negacion

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre               ir al estado 112
    id_op                ir al estado 7
    llamada_subprograma  ir al estado 115
    objeto               ir al estado 116
    expresion_constante  ir al estado 117
    expresion_primaria   ir al estado 118
    expresion_unitaria   ir al estado 119
    expresion_potencia   ir al estado 120
    expresion_prod       ir al estado 121
    expresion_sum        ir al estado 122
    expresion_desplz     ir al estado 123
    expresion_and_bin    ir al estado 124
    expresion_or_bin     ir al estado 125
    expresion_xor_bin    ir al estado 126
    expresion_comparar   ir al estado 127
    expresion_negacion   ir al estado 179


estado 112

  143 llamada_subprograma: nombre . '(' expresion_comas ')' nombre '(' ')'
  167 objeto: nombre .

    '('  desplazar e ir al estado 180

    $default  reduce usando la regla 167 (objeto)


estado 113

   48 tipo_lista: LISTA rango_lista . DE tipo_no_estructurado_o_nombre_tipo
   49 rango_lista: rango_lista . ',' rango

    DE   desplazar e ir al estado 181
    ','  desplazar e ir al estado 182


estado 114

   50 rango_lista: rango .

    $default  reduce usando la regla 50 (rango_lista)


estado 115

  177 expresion_primaria: llamada_subprograma .

    $default  reduce usando la regla 177 (expresion_primaria)


estado 116

  168 objeto: objeto . '[' expresion_comas ']'
  169       | objeto . '.' IDENTIFICADOR
  176 expresion_primaria: objeto .

    '['  desplazar e ir al estado 183
    '.'  desplazar e ir al estado 184

    $default  reduce usando la regla 176 (expresion_primaria)


estado 117

  175 expresion_primaria: expresion_constante .

    $default  reduce usando la regla 175 (expresion_primaria)


estado 118

  180 expresion_unitaria: expresion_primaria .

    $default  reduce usando la regla 180 (expresion_unitaria)


estado 119

  181 expresion_potencia: expresion_unitaria . POTENCIA expresion_potencia
  182                   | expresion_unitaria .

    POTENCIA  desplazar e ir al estado 185

    $default  reduce usando la regla 182 (expresion_potencia)


estado 120

  186 expresion_prod: expresion_potencia .

    $default  reduce usando la regla 186 (expresion_prod)


estado 121

  183 expresion_prod: expresion_prod . '*' expresion_potencia
  184               | expresion_prod . '/' expresion_potencia
  185               | expresion_prod . '%' expresion_potencia
  189 expresion_sum: expresion_prod .

    '*'  desplazar e ir al estado 186
    '/'  desplazar e ir al estado 187
    '%'  desplazar e ir al estado 188

    $default  reduce usando la regla 189 (expresion_sum)


estado 122

  187 expresion_sum: expresion_sum . '+' expresion_prod
  188              | expresion_sum . '-' expresion_prod
  192 expresion_desplz: expresion_sum .

    '-'  desplazar e ir al estado 189
    '+'  desplazar e ir al estado 190

    $default  reduce usando la regla 192 (expresion_desplz)


estado 123

  190 expresion_desplz: expresion_desplz . DESPI expresion_sum
  191                 | expresion_desplz . DESPD expresion_sum
  194 expresion_and_bin: expresion_desplz .

    DESPD  desplazar e ir al estado 191
    DESPI  desplazar e ir al estado 192

    $default  reduce usando la regla 194 (expresion_and_bin)


estado 124

  193 expresion_and_bin: expresion_and_bin . '&' expresion_desplz
  196 expresion_or_bin: expresion_and_bin .

    '&'  desplazar e ir al estado 193

    $default  reduce usando la regla 196 (expresion_or_bin)


estado 125

  195 expresion_or_bin: expresion_or_bin . '^' expresion_and_bin
  198 expresion_xor_bin: expresion_or_bin .

    '^'  desplazar e ir al estado 194

    $default  reduce usando la regla 198 (expresion_xor_bin)


estado 126

  197 expresion_xor_bin: expresion_xor_bin . '@' expresion_desplz
  205 expresion_comparar: expresion_xor_bin .

    '@'  desplazar e ir al estado 195

    $default  reduce usando la regla 205 (expresion_comparar)


estado 127

  199 expresion_comparar: expresion_comparar . '<' expresion_xor_bin
  200                   | expresion_comparar . '>' expresion_xor_bin
  201                   | expresion_comparar . LEQ expresion_xor_bin
  202                   | expresion_comparar . GEQ expresion_xor_bin
  203                   | expresion_comparar . EQ expresion_xor_bin
  204                   | expresion_comparar . NEQ expresion_xor_bin
  207 expresion_negacion: expresion_comparar .

    EQ   desplazar e ir al estado 196
    GEQ  desplazar e ir al estado 197
    LEQ  desplazar e ir al estado 198
    NEQ  desplazar e ir al estado 199
    '<'  desplazar e ir al estado 200
    '>'  desplazar e ir al estado 201

    $default  reduce usando la regla 207 (expresion_negacion)


estado 128

  209 expresion_and_logico: expresion_negacion .

    $default  reduce usando la regla 209 (expresion_and_logico)


estado 129

  208 expresion_and_logico: expresion_and_logico . AND expresion_negacion
  211 expresion_or_logico: expresion_and_logico .

    AND  desplazar e ir al estado 202

    $default  reduce usando la regla 211 (expresion_or_logico)


estado 130

  210 expresion_or_logico: expresion_or_logico . OR expresion_and_logico
  212 expresion: expresion_or_logico .

    OR  desplazar e ir al estado 203

    $default  reduce usando la regla 212 (expresion)


estado 131

   51 rango: expresion . DOS_PTOS expresion expresion_rango_op

    DOS_PTOS  desplazar e ir al estado 204


estado 132

   56 tipo_registro: REGISTRO '{' . declaracion_campo '}'

    $default  reduce usando la regla 5 (id_op)

    nombre             ir al estado 52
    id_op              ir al estado 7
    nombres_comas      ir al estado 205
    declaracion_campo  ir al estado 206


estado 133

   45 tipo_enumerado: '(' expresion_constante_unoomas . ')'
   47 expresion_constante_unoomas: expresion_constante_unoomas . ',' expresion_constante

    ','  desplazar e ir al estado 207
    ')'  desplazar e ir al estado 208


estado 134

   46 expresion_constante_unoomas: expresion_constante .

    $default  reduce usando la regla 46 (expresion_constante_unoomas)


estado 135

   28 declaracion_tipo: nombre '=' tipo_no_estructurado_o_nombre_tipo ';' .

    $default  reduce usando la regla 28 (declaracion_tipo)


estado 136

   63 declaracion_constante: nombre ';' tipo_no_estructurado_o_nombre_tipo . '=' valor_constante

    '='  desplazar e ir al estado 209


estado 137

   76 declaracion_variable: nombres_comas ':' . tipo_no_estructurado_o_nombre_tipo '=' valor_constante ';'
   77                     | nombres_comas ':' . tipo_no_estructurado_o_nombre_tipo ';'

    BOOLEANO  desplazar e ir al estado 55
    CADENA    desplazar e ir al estado 56
    CARACTER  desplazar e ir al estado 57
    CONJUNTO  desplazar e ir al estado 59
    ENTERO    desplazar e ir al estado 60
    FICHERO   desplazar e ir al estado 61
    LISTA     desplazar e ir al estado 62
    REAL      desplazar e ir al estado 63
    '('       desplazar e ir al estado 65

    $default  reduce usando la regla 5 (id_op)

    nombre                              ir al estado 66
    id_op                               ir al estado 7
    tipo_no_estructurado_o_nombre_tipo  ir al estado 210
    tipo_escalar                        ir al estado 69
    tipo_fichero                        ir al estado 70
    tipo_enumerado                      ir al estado 71
    tipo_lista                          ir al estado 72
    tipo_lista_asociativa               ir al estado 73
    tipo_conjunto                       ir al estado 74


estado 138

  140 instruccion_devolver: DEVOLVER . expresion ';'
  141                     | DEVOLVER . ';'

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    ';'           desplazar e ir al estado 211
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    llamada_subprograma   ir al estado 115
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 129
    expresion_or_logico   ir al estado 130
    expresion             ir al estado 212


estado 139

  148 instruccion_casos: EN . CASO expresion SEA caso ';'

    CASO  desplazar e ir al estado 213


estado 140

  166 instruccion_lanzar: LANZAR . nombre ';'

    $default  reduce usando la regla 5 (id_op)

    nombre  ir al estado 214
    id_op   ir al estado 7


estado 141

  161 clausula_iteracion: MIENTRAS . expresion

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    llamada_subprograma   ir al estado 115
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 129
    expresion_or_logico   ir al estado 130
    expresion             ir al estado 215


estado 142

  158 clausula_iteracion: PARA . nombre EN objeto

    $default  reduce usando la regla 5 (id_op)

    nombre  ir al estado 216
    id_op   ir al estado 7


estado 143

  163 instruccion_probar_excepto: PROBAR . bloque_instrucciones EXCEPTO clausula_excepcion FINALMENTE bloque_instrucciones
  164                           | PROBAR . bloque_instrucciones EXCEPTO clausula_excepcion

    '{'  desplazar e ir al estado 83

    bloque_instrucciones  ir al estado 217


estado 144

  159 clausula_iteracion: REPITE . ELEMENTO nombre EN rango DESCENDENTE
  160                   | REPITE . ELEMENTO nombre EN rango
  162                   | REPITE . HASTA expresion

    ELEMENTO  desplazar e ir al estado 218
    HASTA     desplazar e ir al estado 219


estado 145

  138 instruccion_salir: SALIR . SI expresion ';'
  139                  | SALIR . ';'

    SI   desplazar e ir al estado 220
    ';'  desplazar e ir al estado 221


estado 146

  146 instruccion_si: SI . expresion ENTONCES bloque_instrucciones SINO bloque_instrucciones
  147               | SI . expresion ENTONCES bloque_instrucciones

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    llamada_subprograma   ir al estado 115
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 129
    expresion_or_logico   ir al estado 130
    expresion             ir al estado 222


estado 147

  127 instruccion: ';' .

    $default  reduce usando la regla 127 (instruccion)


estado 148

    8 bloque_instrucciones: '{' instruccion_unoomas . '}'
    9 instruccion_unoomas: instruccion_unoomas . instruccion

    DEVOLVER  desplazar e ir al estado 138
    EN        desplazar e ir al estado 139
    LANZAR    desplazar e ir al estado 140
    MIENTRAS  desplazar e ir al estado 141
    PARA      desplazar e ir al estado 142
    PROBAR    desplazar e ir al estado 143
    REPITE    desplazar e ir al estado 144
    SALIR     desplazar e ir al estado 145
    SI        desplazar e ir al estado 146
    ';'       desplazar e ir al estado 147
    '}'       desplazar e ir al estado 223

    $default  reduce usando la regla 5 (id_op)

    nombre                      ir al estado 112
    id_op                       ir al estado 7
    instruccion                 ir al estado 224
    instruccion_asignacion      ir al estado 150
    instruccion_salir           ir al estado 151
    instruccion_devolver        ir al estado 152
    instruccion_llamada         ir al estado 153
    llamada_subprograma         ir al estado 154
    instruccion_si              ir al estado 155
    instruccion_casos           ir al estado 156
    instruccion_bucle           ir al estado 157
    clausula_iteracion          ir al estado 158
    instruccion_probar_excepto  ir al estado 159
    instruccion_lanzar          ir al estado 160
    objeto                      ir al estado 161


estado 149

   10 instruccion_unoomas: instruccion .

    $default  reduce usando la regla 10 (instruccion_unoomas)


estado 150

  128 instruccion: instruccion_asignacion .

    $default  reduce usando la regla 128 (instruccion)


estado 151

  129 instruccion: instruccion_salir .

    $default  reduce usando la regla 129 (instruccion)


estado 152

  130 instruccion: instruccion_devolver .

    $default  reduce usando la regla 130 (instruccion)


estado 153

  131 instruccion: instruccion_llamada .

    $default  reduce usando la regla 131 (instruccion)


estado 154

  142 instruccion_llamada: llamada_subprograma . ';'

    ';'  desplazar e ir al estado 225


estado 155

  132 instruccion: instruccion_si .

    $default  reduce usando la regla 132 (instruccion)


estado 156

  133 instruccion: instruccion_casos .

    $default  reduce usando la regla 133 (instruccion)


estado 157

  134 instruccion: instruccion_bucle .

    $default  reduce usando la regla 134 (instruccion)


estado 158

  157 instruccion_bucle: clausula_iteracion . bloque_instrucciones

    '{'  desplazar e ir al estado 83

    bloque_instrucciones  ir al estado 226


estado 159

  135 instruccion: instruccion_probar_excepto .

    $default  reduce usando la regla 135 (instruccion)


estado 160

  136 instruccion: instruccion_lanzar .

    $default  reduce usando la regla 136 (instruccion)


estado 161

  137 instruccion_asignacion: objeto . '=' expresion ';'
  168 objeto: objeto . '[' expresion_comas ']'
  169       | objeto . '.' IDENTIFICADOR

    '='  desplazar e ir al estado 227
    '['  desplazar e ir al estado 183
    '.'  desplazar e ir al estado 184


estado 162

  115 cabecera_subprograma_unoomas: cabecera_subprograma .

    $default  reduce usando la regla 115 (cabecera_subprograma_unoomas)


estado 163

   78 declaracion_interfaces: INTERFAZ cabecera_subprograma_unoomas .
  114 cabecera_subprograma_unoomas: cabecera_subprograma_unoomas . cabecera_subprograma

    CONSTRUCTOR    desplazar e ir al estado 87
    DESTRUCTOR     desplazar e ir al estado 88
    FUNCION        desplazar e ir al estado 89
    PROCEDIMIENTO  desplazar e ir al estado 90

    $default  reduce usando la regla 78 (declaracion_interfaces)

    cabecera_subprograma    ir al estado 228
    cabecera_funcion        ir al estado 93
    cabecera_procedimiento  ir al estado 94
    cabecera_constructor    ir al estado 95
    cabecera_destructor     ir al estado 96


estado 164

  118 cabecera_constructor: CONSTRUCTOR nombre . declaracion_parametros

    '('  desplazar e ir al estado 229

    $default  reduce usando la regla 120 (declaracion_parametros)

    declaracion_parametros  ir al estado 230


estado 165

  119 cabecera_destructor: DESTRUCTOR nombre .

    $default  reduce usando la regla 119 (cabecera_destructor)


estado 166

  116 cabecera_funcion: FUNCION nombre . declaracion_parametros FLECHA_DOBLE tipo_no_estructurado_o_nombre_tipo

    '('  desplazar e ir al estado 229

    $default  reduce usando la regla 120 (declaracion_parametros)

    declaracion_parametros  ir al estado 231


estado 167

  117 cabecera_procedimiento: PROCEDIMIENTO nombre . declaracion_parametros

    '('  desplazar e ir al estado 229

    $default  reduce usando la regla 120 (declaracion_parametros)

    declaracion_parametros  ir al estado 232


estado 168

  108 declaracion_subprograma: declaracion_subprograma cabecera_subprograma . bloque_subprograma

    TIPO  desplazar e ir al estado 24

    $default  reduce usando la regla 24 (declaracion_tipos)

    declaracion_tipos   ir al estado 169
    bloque_subprograma  ir al estado 233


estado 169

  126 bloque_subprograma: declaracion_tipos . declaracion_constantes declaracion_variables bloque_instrucciones

    CONSTANTE  desplazar e ir al estado 35

    $default  reduce usando la regla 59 (declaracion_constantes)

    declaracion_constantes  ir al estado 234


estado 170

  109 declaracion_subprograma: cabecera_subprograma bloque_subprograma .

    $default  reduce usando la regla 109 (declaracion_subprograma)


estado 171

   22 nombres_comas: nombres_comas ',' nombre .

    $default  reduce usando la regla 22 (nombres_comas)


estado 172

   81 declaracion_clase_mod: CLASE FINAL '(' . ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'
   82                      | CLASE FINAL '(' . nombres_comas ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    ')'  desplazar e ir al estado 235

    $default  reduce usando la regla 5 (id_op)

    nombre         ir al estado 52
    id_op          ir al estado 7
    nombres_comas  ir al estado 236


estado 173

   84 declaracion_clase_nomod: CLASE '(' ')' . '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    '{'  desplazar e ir al estado 237


estado 174

   22 nombres_comas: nombres_comas . ',' nombre
   83 declaracion_clase_nomod: CLASE '(' nombres_comas . ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    ','  desplazar e ir al estado 97
    ')'  desplazar e ir al estado 238


estado 175

   55 tipo_conjunto: CONJUNTO DE tipo_no_estructurado_o_nombre_tipo .

    $default  reduce usando la regla 55 (tipo_conjunto)


estado 176

   54 tipo_lista_asociativa: LISTA ASOCIATIVA DE . tipo_no_estructurado_o_nombre_tipo

    BOOLEANO  desplazar e ir al estado 55
    CADENA    desplazar e ir al estado 56
    CARACTER  desplazar e ir al estado 57
    CONJUNTO  desplazar e ir al estado 59
    ENTERO    desplazar e ir al estado 60
    FICHERO   desplazar e ir al estado 61
    LISTA     desplazar e ir al estado 62
    REAL      desplazar e ir al estado 63
    '('       desplazar e ir al estado 65

    $default  reduce usando la regla 5 (id_op)

    nombre                              ir al estado 66
    id_op                               ir al estado 7
    tipo_no_estructurado_o_nombre_tipo  ir al estado 239
    tipo_escalar                        ir al estado 69
    tipo_fichero                        ir al estado 70
    tipo_enumerado                      ir al estado 71
    tipo_lista                          ir al estado 72
    tipo_lista_asociativa               ir al estado 73
    tipo_conjunto                       ir al estado 74


estado 177

  178 expresion_primaria: '(' expresion . ')'

    ')'  desplazar e ir al estado 240


estado 178

  179 expresion_unitaria: '-' expresion_primaria .

    $default  reduce usando la regla 179 (expresion_unitaria)


estado 179

  206 expresion_negacion: '!' expresion_negacion .

    $default  reduce usando la regla 206 (expresion_negacion)


estado 180

  143 llamada_subprograma: nombre '(' . expresion_comas ')' nombre '(' ')'

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    llamada_subprograma   ir al estado 115
    expresion_comas       ir al estado 241
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 129
    expresion_or_logico   ir al estado 130
    expresion             ir al estado 242


estado 181

   48 tipo_lista: LISTA rango_lista DE . tipo_no_estructurado_o_nombre_tipo

    BOOLEANO  desplazar e ir al estado 55
    CADENA    desplazar e ir al estado 56
    CARACTER  desplazar e ir al estado 57
    CONJUNTO  desplazar e ir al estado 59
    ENTERO    desplazar e ir al estado 60
    FICHERO   desplazar e ir al estado 61
    LISTA     desplazar e ir al estado 62
    REAL      desplazar e ir al estado 63
    '('       desplazar e ir al estado 65

    $default  reduce usando la regla 5 (id_op)

    nombre                              ir al estado 66
    id_op                               ir al estado 7
    tipo_no_estructurado_o_nombre_tipo  ir al estado 243
    tipo_escalar                        ir al estado 69
    tipo_fichero                        ir al estado 70
    tipo_enumerado                      ir al estado 71
    tipo_lista                          ir al estado 72
    tipo_lista_asociativa               ir al estado 73
    tipo_conjunto                       ir al estado 74


estado 182

   49 rango_lista: rango_lista ',' . rango

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    rango                 ir al estado 244
    llamada_subprograma   ir al estado 115
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 129
    expresion_or_logico   ir al estado 130
    expresion             ir al estado 131


estado 183

  168 objeto: objeto '[' . expresion_comas ']'

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    llamada_subprograma   ir al estado 115
    expresion_comas       ir al estado 245
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 129
    expresion_or_logico   ir al estado 130
    expresion             ir al estado 242


estado 184

  169 objeto: objeto '.' . IDENTIFICADOR

    IDENTIFICADOR  desplazar e ir al estado 246


estado 185

  181 expresion_potencia: expresion_unitaria POTENCIA . expresion_potencia

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110

    $default  reduce usando la regla 5 (id_op)

    nombre               ir al estado 112
    id_op                ir al estado 7
    llamada_subprograma  ir al estado 115
    objeto               ir al estado 116
    expresion_constante  ir al estado 117
    expresion_primaria   ir al estado 118
    expresion_unitaria   ir al estado 119
    expresion_potencia   ir al estado 247


estado 186

  183 expresion_prod: expresion_prod '*' . expresion_potencia

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110

    $default  reduce usando la regla 5 (id_op)

    nombre               ir al estado 112
    id_op                ir al estado 7
    llamada_subprograma  ir al estado 115
    objeto               ir al estado 116
    expresion_constante  ir al estado 117
    expresion_primaria   ir al estado 118
    expresion_unitaria   ir al estado 119
    expresion_potencia   ir al estado 248


estado 187

  184 expresion_prod: expresion_prod '/' . expresion_potencia

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110

    $default  reduce usando la regla 5 (id_op)

    nombre               ir al estado 112
    id_op                ir al estado 7
    llamada_subprograma  ir al estado 115
    objeto               ir al estado 116
    expresion_constante  ir al estado 117
    expresion_primaria   ir al estado 118
    expresion_unitaria   ir al estado 119
    expresion_potencia   ir al estado 249


estado 188

  185 expresion_prod: expresion_prod '%' . expresion_potencia

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110

    $default  reduce usando la regla 5 (id_op)

    nombre               ir al estado 112
    id_op                ir al estado 7
    llamada_subprograma  ir al estado 115
    objeto               ir al estado 116
    expresion_constante  ir al estado 117
    expresion_primaria   ir al estado 118
    expresion_unitaria   ir al estado 119
    expresion_potencia   ir al estado 250


estado 189

  188 expresion_sum: expresion_sum '-' . expresion_prod

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110

    $default  reduce usando la regla 5 (id_op)

    nombre               ir al estado 112
    id_op                ir al estado 7
    llamada_subprograma  ir al estado 115
    objeto               ir al estado 116
    expresion_constante  ir al estado 117
    expresion_primaria   ir al estado 118
    expresion_unitaria   ir al estado 119
    expresion_potencia   ir al estado 120
    expresion_prod       ir al estado 251


estado 190

  187 expresion_sum: expresion_sum '+' . expresion_prod

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110

    $default  reduce usando la regla 5 (id_op)

    nombre               ir al estado 112
    id_op                ir al estado 7
    llamada_subprograma  ir al estado 115
    objeto               ir al estado 116
    expresion_constante  ir al estado 117
    expresion_primaria   ir al estado 118
    expresion_unitaria   ir al estado 119
    expresion_potencia   ir al estado 120
    expresion_prod       ir al estado 252


estado 191

  191 expresion_desplz: expresion_desplz DESPD . expresion_sum

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110

    $default  reduce usando la regla 5 (id_op)

    nombre               ir al estado 112
    id_op                ir al estado 7
    llamada_subprograma  ir al estado 115
    objeto               ir al estado 116
    expresion_constante  ir al estado 117
    expresion_primaria   ir al estado 118
    expresion_unitaria   ir al estado 119
    expresion_potencia   ir al estado 120
    expresion_prod       ir al estado 121
    expresion_sum        ir al estado 253


estado 192

  190 expresion_desplz: expresion_desplz DESPI . expresion_sum

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110

    $default  reduce usando la regla 5 (id_op)

    nombre               ir al estado 112
    id_op                ir al estado 7
    llamada_subprograma  ir al estado 115
    objeto               ir al estado 116
    expresion_constante  ir al estado 117
    expresion_primaria   ir al estado 118
    expresion_unitaria   ir al estado 119
    expresion_potencia   ir al estado 120
    expresion_prod       ir al estado 121
    expresion_sum        ir al estado 254


estado 193

  193 expresion_and_bin: expresion_and_bin '&' . expresion_desplz

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110

    $default  reduce usando la regla 5 (id_op)

    nombre               ir al estado 112
    id_op                ir al estado 7
    llamada_subprograma  ir al estado 115
    objeto               ir al estado 116
    expresion_constante  ir al estado 117
    expresion_primaria   ir al estado 118
    expresion_unitaria   ir al estado 119
    expresion_potencia   ir al estado 120
    expresion_prod       ir al estado 121
    expresion_sum        ir al estado 122
    expresion_desplz     ir al estado 255


estado 194

  195 expresion_or_bin: expresion_or_bin '^' . expresion_and_bin

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110

    $default  reduce usando la regla 5 (id_op)

    nombre               ir al estado 112
    id_op                ir al estado 7
    llamada_subprograma  ir al estado 115
    objeto               ir al estado 116
    expresion_constante  ir al estado 117
    expresion_primaria   ir al estado 118
    expresion_unitaria   ir al estado 119
    expresion_potencia   ir al estado 120
    expresion_prod       ir al estado 121
    expresion_sum        ir al estado 122
    expresion_desplz     ir al estado 123
    expresion_and_bin    ir al estado 256


estado 195

  197 expresion_xor_bin: expresion_xor_bin '@' . expresion_desplz

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110

    $default  reduce usando la regla 5 (id_op)

    nombre               ir al estado 112
    id_op                ir al estado 7
    llamada_subprograma  ir al estado 115
    objeto               ir al estado 116
    expresion_constante  ir al estado 117
    expresion_primaria   ir al estado 118
    expresion_unitaria   ir al estado 119
    expresion_potencia   ir al estado 120
    expresion_prod       ir al estado 121
    expresion_sum        ir al estado 122
    expresion_desplz     ir al estado 257


estado 196

  203 expresion_comparar: expresion_comparar EQ . expresion_xor_bin

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110

    $default  reduce usando la regla 5 (id_op)

    nombre               ir al estado 112
    id_op                ir al estado 7
    llamada_subprograma  ir al estado 115
    objeto               ir al estado 116
    expresion_constante  ir al estado 117
    expresion_primaria   ir al estado 118
    expresion_unitaria   ir al estado 119
    expresion_potencia   ir al estado 120
    expresion_prod       ir al estado 121
    expresion_sum        ir al estado 122
    expresion_desplz     ir al estado 123
    expresion_and_bin    ir al estado 124
    expresion_or_bin     ir al estado 125
    expresion_xor_bin    ir al estado 258


estado 197

  202 expresion_comparar: expresion_comparar GEQ . expresion_xor_bin

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110

    $default  reduce usando la regla 5 (id_op)

    nombre               ir al estado 112
    id_op                ir al estado 7
    llamada_subprograma  ir al estado 115
    objeto               ir al estado 116
    expresion_constante  ir al estado 117
    expresion_primaria   ir al estado 118
    expresion_unitaria   ir al estado 119
    expresion_potencia   ir al estado 120
    expresion_prod       ir al estado 121
    expresion_sum        ir al estado 122
    expresion_desplz     ir al estado 123
    expresion_and_bin    ir al estado 124
    expresion_or_bin     ir al estado 125
    expresion_xor_bin    ir al estado 259


estado 198

  201 expresion_comparar: expresion_comparar LEQ . expresion_xor_bin

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110

    $default  reduce usando la regla 5 (id_op)

    nombre               ir al estado 112
    id_op                ir al estado 7
    llamada_subprograma  ir al estado 115
    objeto               ir al estado 116
    expresion_constante  ir al estado 117
    expresion_primaria   ir al estado 118
    expresion_unitaria   ir al estado 119
    expresion_potencia   ir al estado 120
    expresion_prod       ir al estado 121
    expresion_sum        ir al estado 122
    expresion_desplz     ir al estado 123
    expresion_and_bin    ir al estado 124
    expresion_or_bin     ir al estado 125
    expresion_xor_bin    ir al estado 260


estado 199

  204 expresion_comparar: expresion_comparar NEQ . expresion_xor_bin

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110

    $default  reduce usando la regla 5 (id_op)

    nombre               ir al estado 112
    id_op                ir al estado 7
    llamada_subprograma  ir al estado 115
    objeto               ir al estado 116
    expresion_constante  ir al estado 117
    expresion_primaria   ir al estado 118
    expresion_unitaria   ir al estado 119
    expresion_potencia   ir al estado 120
    expresion_prod       ir al estado 121
    expresion_sum        ir al estado 122
    expresion_desplz     ir al estado 123
    expresion_and_bin    ir al estado 124
    expresion_or_bin     ir al estado 125
    expresion_xor_bin    ir al estado 261


estado 200

  199 expresion_comparar: expresion_comparar '<' . expresion_xor_bin

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110

    $default  reduce usando la regla 5 (id_op)

    nombre               ir al estado 112
    id_op                ir al estado 7
    llamada_subprograma  ir al estado 115
    objeto               ir al estado 116
    expresion_constante  ir al estado 117
    expresion_primaria   ir al estado 118
    expresion_unitaria   ir al estado 119
    expresion_potencia   ir al estado 120
    expresion_prod       ir al estado 121
    expresion_sum        ir al estado 122
    expresion_desplz     ir al estado 123
    expresion_and_bin    ir al estado 124
    expresion_or_bin     ir al estado 125
    expresion_xor_bin    ir al estado 262


estado 201

  200 expresion_comparar: expresion_comparar '>' . expresion_xor_bin

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110

    $default  reduce usando la regla 5 (id_op)

    nombre               ir al estado 112
    id_op                ir al estado 7
    llamada_subprograma  ir al estado 115
    objeto               ir al estado 116
    expresion_constante  ir al estado 117
    expresion_primaria   ir al estado 118
    expresion_unitaria   ir al estado 119
    expresion_potencia   ir al estado 120
    expresion_prod       ir al estado 121
    expresion_sum        ir al estado 122
    expresion_desplz     ir al estado 123
    expresion_and_bin    ir al estado 124
    expresion_or_bin     ir al estado 125
    expresion_xor_bin    ir al estado 263


estado 202

  208 expresion_and_logico: expresion_and_logico AND . expresion_negacion

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre               ir al estado 112
    id_op                ir al estado 7
    llamada_subprograma  ir al estado 115
    objeto               ir al estado 116
    expresion_constante  ir al estado 117
    expresion_primaria   ir al estado 118
    expresion_unitaria   ir al estado 119
    expresion_potencia   ir al estado 120
    expresion_prod       ir al estado 121
    expresion_sum        ir al estado 122
    expresion_desplz     ir al estado 123
    expresion_and_bin    ir al estado 124
    expresion_or_bin     ir al estado 125
    expresion_xor_bin    ir al estado 126
    expresion_comparar   ir al estado 127
    expresion_negacion   ir al estado 264


estado 203

  210 expresion_or_logico: expresion_or_logico OR . expresion_and_logico

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    llamada_subprograma   ir al estado 115
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 265


estado 204

   51 rango: expresion DOS_PTOS . expresion expresion_rango_op

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    llamada_subprograma   ir al estado 115
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 129
    expresion_or_logico   ir al estado 130
    expresion             ir al estado 266


estado 205

   22 nombres_comas: nombres_comas . ',' nombre
   58 declaracion_campo: nombres_comas . ':' tipo_no_estructurado_o_nombre_tipo ';'

    ','  desplazar e ir al estado 97
    ':'  desplazar e ir al estado 267


estado 206

   56 tipo_registro: REGISTRO '{' declaracion_campo . '}'
   57 declaracion_campo: declaracion_campo . nombres_comas ':' tipo_no_estructurado_o_nombre_tipo ';'

    '}'  desplazar e ir al estado 268

    $default  reduce usando la regla 5 (id_op)

    nombre         ir al estado 52
    id_op          ir al estado 7
    nombres_comas  ir al estado 269


estado 207

   47 expresion_constante_unoomas: expresion_constante_unoomas ',' . expresion_constante

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108

    expresion_constante  ir al estado 270


estado 208

   45 tipo_enumerado: '(' expresion_constante_unoomas ')' .

    $default  reduce usando la regla 45 (tipo_enumerado)


estado 209

   63 declaracion_constante: nombre ';' tipo_no_estructurado_o_nombre_tipo '=' . valor_constante

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '['           desplazar e ir al estado 271
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    valor_constante       ir al estado 272
    llamada_subprograma   ir al estado 115
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 129
    expresion_or_logico   ir al estado 130
    expresion             ir al estado 273


estado 210

   76 declaracion_variable: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo . '=' valor_constante ';'
   77                     | nombres_comas ':' tipo_no_estructurado_o_nombre_tipo . ';'

    ';'  desplazar e ir al estado 274
    '='  desplazar e ir al estado 275


estado 211

  141 instruccion_devolver: DEVOLVER ';' .

    $default  reduce usando la regla 141 (instruccion_devolver)


estado 212

  140 instruccion_devolver: DEVOLVER expresion . ';'

    ';'  desplazar e ir al estado 276


estado 213

  148 instruccion_casos: EN CASO . expresion SEA caso ';'

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    llamada_subprograma   ir al estado 115
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 129
    expresion_or_logico   ir al estado 130
    expresion             ir al estado 277


estado 214

  166 instruccion_lanzar: LANZAR nombre . ';'

    ';'  desplazar e ir al estado 278


estado 215

  161 clausula_iteracion: MIENTRAS expresion .

    $default  reduce usando la regla 161 (clausula_iteracion)


estado 216

  158 clausula_iteracion: PARA nombre . EN objeto

    EN  desplazar e ir al estado 279


estado 217

  163 instruccion_probar_excepto: PROBAR bloque_instrucciones . EXCEPTO clausula_excepcion FINALMENTE bloque_instrucciones
  164                           | PROBAR bloque_instrucciones . EXCEPTO clausula_excepcion

    EXCEPTO  desplazar e ir al estado 280


estado 218

  159 clausula_iteracion: REPITE ELEMENTO . nombre EN rango DESCENDENTE
  160                   | REPITE ELEMENTO . nombre EN rango

    $default  reduce usando la regla 5 (id_op)

    nombre  ir al estado 281
    id_op   ir al estado 7


estado 219

  162 clausula_iteracion: REPITE HASTA . expresion

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    llamada_subprograma   ir al estado 115
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 129
    expresion_or_logico   ir al estado 130
    expresion             ir al estado 282


estado 220

  138 instruccion_salir: SALIR SI . expresion ';'

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    llamada_subprograma   ir al estado 115
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 129
    expresion_or_logico   ir al estado 130
    expresion             ir al estado 283


estado 221

  139 instruccion_salir: SALIR ';' .

    $default  reduce usando la regla 139 (instruccion_salir)


estado 222

  146 instruccion_si: SI expresion . ENTONCES bloque_instrucciones SINO bloque_instrucciones
  147               | SI expresion . ENTONCES bloque_instrucciones

    ENTONCES  desplazar e ir al estado 284


estado 223

    8 bloque_instrucciones: '{' instruccion_unoomas '}' .

    $default  reduce usando la regla 8 (bloque_instrucciones)


estado 224

    9 instruccion_unoomas: instruccion_unoomas instruccion .

    $default  reduce usando la regla 9 (instruccion_unoomas)


estado 225

  142 instruccion_llamada: llamada_subprograma ';' .

    $default  reduce usando la regla 142 (instruccion_llamada)


estado 226

  157 instruccion_bucle: clausula_iteracion bloque_instrucciones .

    $default  reduce usando la regla 157 (instruccion_bucle)


estado 227

  137 instruccion_asignacion: objeto '=' . expresion ';'

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    llamada_subprograma   ir al estado 115
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 129
    expresion_or_logico   ir al estado 130
    expresion             ir al estado 285


estado 228

  114 cabecera_subprograma_unoomas: cabecera_subprograma_unoomas cabecera_subprograma .

    $default  reduce usando la regla 114 (cabecera_subprograma_unoomas)


estado 229

  121 declaracion_parametros: '(' . lista_parametros_formales ')'

    $default  reduce usando la regla 5 (id_op)

    nombre                     ir al estado 52
    id_op                      ir al estado 7
    nombres_comas              ir al estado 286
    lista_parametros_formales  ir al estado 287
    parametros_formales        ir al estado 288


estado 230

  118 cabecera_constructor: CONSTRUCTOR nombre declaracion_parametros .

    $default  reduce usando la regla 118 (cabecera_constructor)


estado 231

  116 cabecera_funcion: FUNCION nombre declaracion_parametros . FLECHA_DOBLE tipo_no_estructurado_o_nombre_tipo

    FLECHA_DOBLE  desplazar e ir al estado 289


estado 232

  117 cabecera_procedimiento: PROCEDIMIENTO nombre declaracion_parametros .

    $default  reduce usando la regla 117 (cabecera_procedimiento)


estado 233

  108 declaracion_subprograma: declaracion_subprograma cabecera_subprograma bloque_subprograma .

    $default  reduce usando la regla 108 (declaracion_subprograma)


estado 234

  126 bloque_subprograma: declaracion_tipos declaracion_constantes . declaracion_variables bloque_instrucciones

    VARIABLE  desplazar e ir al estado 48

    $default  reduce usando la regla 74 (declaracion_variables)

    declaracion_variables  ir al estado 290


estado 235

   81 declaracion_clase_mod: CLASE FINAL '(' ')' . '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    '{'  desplazar e ir al estado 291


estado 236

   22 nombres_comas: nombres_comas . ',' nombre
   82 declaracion_clase_mod: CLASE FINAL '(' nombres_comas . ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    ','  desplazar e ir al estado 97
    ')'  desplazar e ir al estado 292


estado 237

   84 declaracion_clase_nomod: CLASE '(' ')' '{' . declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    CONSTANTE      desplazar e ir al estado 293
    CONSTRUCTOR    desplazar e ir al estado 87
    DESTRUCTOR     desplazar e ir al estado 88
    FUNCION        desplazar e ir al estado 89
    PROCEDIMIENTO  desplazar e ir al estado 90
    PUBLICO        desplazar e ir al estado 294
    TIPO           desplazar e ir al estado 295

    $default  reduce usando la regla 5 (id_op)

    nombre                          ir al estado 52
    id_op                           ir al estado 7
    nombres_comas                   ir al estado 296
    declaraciones_publicas          ir al estado 297
    declaracion_componente_unoomas  ir al estado 298
    declaracion_componente          ir al estado 299
    declaracion_tipo_anidado        ir al estado 300
    declaracion_constante_anidada   ir al estado 301
    declaracion_atributos           ir al estado 302
    cabecera_subprograma            ir al estado 303
    cabecera_funcion                ir al estado 93
    cabecera_procedimiento          ir al estado 94
    cabecera_constructor            ir al estado 95
    cabecera_destructor             ir al estado 96


estado 238

   83 declaracion_clase_nomod: CLASE '(' nombres_comas ')' . '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    '{'  desplazar e ir al estado 304


estado 239

   54 tipo_lista_asociativa: LISTA ASOCIATIVA DE tipo_no_estructurado_o_nombre_tipo .

    $default  reduce usando la regla 54 (tipo_lista_asociativa)


estado 240

  178 expresion_primaria: '(' expresion ')' .

    $default  reduce usando la regla 178 (expresion_primaria)


estado 241

  143 llamada_subprograma: nombre '(' expresion_comas . ')' nombre '(' ')'
  144 expresion_comas: expresion_comas . ',' expresion

    ','  desplazar e ir al estado 305
    ')'  desplazar e ir al estado 306


estado 242

  145 expresion_comas: expresion .

    $default  reduce usando la regla 145 (expresion_comas)


estado 243

   48 tipo_lista: LISTA rango_lista DE tipo_no_estructurado_o_nombre_tipo .

    $default  reduce usando la regla 48 (tipo_lista)


estado 244

   49 rango_lista: rango_lista ',' rango .

    $default  reduce usando la regla 49 (rango_lista)


estado 245

  144 expresion_comas: expresion_comas . ',' expresion
  168 objeto: objeto '[' expresion_comas . ']'

    ','  desplazar e ir al estado 305
    ']'  desplazar e ir al estado 307


estado 246

  169 objeto: objeto '.' IDENTIFICADOR .

    $default  reduce usando la regla 169 (objeto)


estado 247

  181 expresion_potencia: expresion_unitaria POTENCIA expresion_potencia .

    $default  reduce usando la regla 181 (expresion_potencia)


estado 248

  183 expresion_prod: expresion_prod '*' expresion_potencia .

    $default  reduce usando la regla 183 (expresion_prod)


estado 249

  184 expresion_prod: expresion_prod '/' expresion_potencia .

    $default  reduce usando la regla 184 (expresion_prod)


estado 250

  185 expresion_prod: expresion_prod '%' expresion_potencia .

    $default  reduce usando la regla 185 (expresion_prod)


estado 251

  183 expresion_prod: expresion_prod . '*' expresion_potencia
  184               | expresion_prod . '/' expresion_potencia
  185               | expresion_prod . '%' expresion_potencia
  188 expresion_sum: expresion_sum '-' expresion_prod .

    '*'  desplazar e ir al estado 186
    '/'  desplazar e ir al estado 187
    '%'  desplazar e ir al estado 188

    $default  reduce usando la regla 188 (expresion_sum)


estado 252

  183 expresion_prod: expresion_prod . '*' expresion_potencia
  184               | expresion_prod . '/' expresion_potencia
  185               | expresion_prod . '%' expresion_potencia
  187 expresion_sum: expresion_sum '+' expresion_prod .

    '*'  desplazar e ir al estado 186
    '/'  desplazar e ir al estado 187
    '%'  desplazar e ir al estado 188

    $default  reduce usando la regla 187 (expresion_sum)


estado 253

  187 expresion_sum: expresion_sum . '+' expresion_prod
  188              | expresion_sum . '-' expresion_prod
  191 expresion_desplz: expresion_desplz DESPD expresion_sum .

    '-'  desplazar e ir al estado 189
    '+'  desplazar e ir al estado 190

    $default  reduce usando la regla 191 (expresion_desplz)


estado 254

  187 expresion_sum: expresion_sum . '+' expresion_prod
  188              | expresion_sum . '-' expresion_prod
  190 expresion_desplz: expresion_desplz DESPI expresion_sum .

    '-'  desplazar e ir al estado 189
    '+'  desplazar e ir al estado 190

    $default  reduce usando la regla 190 (expresion_desplz)


estado 255

  190 expresion_desplz: expresion_desplz . DESPI expresion_sum
  191                 | expresion_desplz . DESPD expresion_sum
  193 expresion_and_bin: expresion_and_bin '&' expresion_desplz .

    DESPD  desplazar e ir al estado 191
    DESPI  desplazar e ir al estado 192

    $default  reduce usando la regla 193 (expresion_and_bin)


estado 256

  193 expresion_and_bin: expresion_and_bin . '&' expresion_desplz
  195 expresion_or_bin: expresion_or_bin '^' expresion_and_bin .

    '&'  desplazar e ir al estado 193

    $default  reduce usando la regla 195 (expresion_or_bin)


estado 257

  190 expresion_desplz: expresion_desplz . DESPI expresion_sum
  191                 | expresion_desplz . DESPD expresion_sum
  197 expresion_xor_bin: expresion_xor_bin '@' expresion_desplz .

    DESPD  desplazar e ir al estado 191
    DESPI  desplazar e ir al estado 192

    $default  reduce usando la regla 197 (expresion_xor_bin)


estado 258

  197 expresion_xor_bin: expresion_xor_bin . '@' expresion_desplz
  203 expresion_comparar: expresion_comparar EQ expresion_xor_bin .

    '@'  desplazar e ir al estado 195

    $default  reduce usando la regla 203 (expresion_comparar)


estado 259

  197 expresion_xor_bin: expresion_xor_bin . '@' expresion_desplz
  202 expresion_comparar: expresion_comparar GEQ expresion_xor_bin .

    '@'  desplazar e ir al estado 195

    $default  reduce usando la regla 202 (expresion_comparar)


estado 260

  197 expresion_xor_bin: expresion_xor_bin . '@' expresion_desplz
  201 expresion_comparar: expresion_comparar LEQ expresion_xor_bin .

    '@'  desplazar e ir al estado 195

    $default  reduce usando la regla 201 (expresion_comparar)


estado 261

  197 expresion_xor_bin: expresion_xor_bin . '@' expresion_desplz
  204 expresion_comparar: expresion_comparar NEQ expresion_xor_bin .

    '@'  desplazar e ir al estado 195

    $default  reduce usando la regla 204 (expresion_comparar)


estado 262

  197 expresion_xor_bin: expresion_xor_bin . '@' expresion_desplz
  199 expresion_comparar: expresion_comparar '<' expresion_xor_bin .

    '@'  desplazar e ir al estado 195

    $default  reduce usando la regla 199 (expresion_comparar)


estado 263

  197 expresion_xor_bin: expresion_xor_bin . '@' expresion_desplz
  200 expresion_comparar: expresion_comparar '>' expresion_xor_bin .

    '@'  desplazar e ir al estado 195

    $default  reduce usando la regla 200 (expresion_comparar)


estado 264

  208 expresion_and_logico: expresion_and_logico AND expresion_negacion .

    $default  reduce usando la regla 208 (expresion_and_logico)


estado 265

  208 expresion_and_logico: expresion_and_logico . AND expresion_negacion
  210 expresion_or_logico: expresion_or_logico OR expresion_and_logico .

    AND  desplazar e ir al estado 202

    $default  reduce usando la regla 210 (expresion_or_logico)


estado 266

   51 rango: expresion DOS_PTOS expresion . expresion_rango_op

    DOS_PTOS  desplazar e ir al estado 308

    $default  reduce usando la regla 52 (expresion_rango_op)

    expresion_rango_op  ir al estado 309


estado 267

   58 declaracion_campo: nombres_comas ':' . tipo_no_estructurado_o_nombre_tipo ';'

    BOOLEANO  desplazar e ir al estado 55
    CADENA    desplazar e ir al estado 56
    CARACTER  desplazar e ir al estado 57
    CONJUNTO  desplazar e ir al estado 59
    ENTERO    desplazar e ir al estado 60
    FICHERO   desplazar e ir al estado 61
    LISTA     desplazar e ir al estado 62
    REAL      desplazar e ir al estado 63
    '('       desplazar e ir al estado 65

    $default  reduce usando la regla 5 (id_op)

    nombre                              ir al estado 66
    id_op                               ir al estado 7
    tipo_no_estructurado_o_nombre_tipo  ir al estado 310
    tipo_escalar                        ir al estado 69
    tipo_fichero                        ir al estado 70
    tipo_enumerado                      ir al estado 71
    tipo_lista                          ir al estado 72
    tipo_lista_asociativa               ir al estado 73
    tipo_conjunto                       ir al estado 74


estado 268

   56 tipo_registro: REGISTRO '{' declaracion_campo '}' .

    $default  reduce usando la regla 56 (tipo_registro)


estado 269

   22 nombres_comas: nombres_comas . ',' nombre
   57 declaracion_campo: declaracion_campo nombres_comas . ':' tipo_no_estructurado_o_nombre_tipo ';'

    ','  desplazar e ir al estado 97
    ':'  desplazar e ir al estado 311


estado 270

   47 expresion_constante_unoomas: expresion_constante_unoomas ',' expresion_constante .

    $default  reduce usando la regla 47 (expresion_constante_unoomas)


estado 271

   65 valor_constante: '[' . valor_constante_comas ']'
   66                | '[' . clave_valor ']'
   67                | '[' . campo_valor ']'

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 312
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '['           desplazar e ir al estado 271
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                 ir al estado 313
    id_op                  ir al estado 7
    valor_constante        ir al estado 314
    valor_constante_comas  ir al estado 315
    clave_valor            ir al estado 316
    campo_valor            ir al estado 317
    llamada_subprograma    ir al estado 115
    objeto                 ir al estado 116
    expresion_constante    ir al estado 117
    expresion_primaria     ir al estado 118
    expresion_unitaria     ir al estado 119
    expresion_potencia     ir al estado 120
    expresion_prod         ir al estado 121
    expresion_sum          ir al estado 122
    expresion_desplz       ir al estado 123
    expresion_and_bin      ir al estado 124
    expresion_or_bin       ir al estado 125
    expresion_xor_bin      ir al estado 126
    expresion_comparar     ir al estado 127
    expresion_negacion     ir al estado 128
    expresion_and_logico   ir al estado 129
    expresion_or_logico    ir al estado 130
    expresion              ir al estado 273


estado 272

   63 declaracion_constante: nombre ';' tipo_no_estructurado_o_nombre_tipo '=' valor_constante .

    $default  reduce usando la regla 63 (declaracion_constante)


estado 273

   64 valor_constante: expresion .

    $default  reduce usando la regla 64 (valor_constante)


estado 274

   77 declaracion_variable: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo ';' .

    $default  reduce usando la regla 77 (declaracion_variable)


estado 275

   76 declaracion_variable: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo '=' . valor_constante ';'

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '['           desplazar e ir al estado 271
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    valor_constante       ir al estado 318
    llamada_subprograma   ir al estado 115
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 129
    expresion_or_logico   ir al estado 130
    expresion             ir al estado 273


estado 276

  140 instruccion_devolver: DEVOLVER expresion ';' .

    $default  reduce usando la regla 140 (instruccion_devolver)


estado 277

  148 instruccion_casos: EN CASO expresion . SEA caso ';'

    SEA  desplazar e ir al estado 319


estado 278

  166 instruccion_lanzar: LANZAR nombre ';' .

    $default  reduce usando la regla 166 (instruccion_lanzar)


estado 279

  158 clausula_iteracion: PARA nombre EN . objeto

    $default  reduce usando la regla 5 (id_op)

    nombre  ir al estado 320
    id_op   ir al estado 7
    objeto  ir al estado 321


estado 280

  163 instruccion_probar_excepto: PROBAR bloque_instrucciones EXCEPTO . clausula_excepcion FINALMENTE bloque_instrucciones
  164                           | PROBAR bloque_instrucciones EXCEPTO . clausula_excepcion

    CUANDO  desplazar e ir al estado 322

    clausula_excepcion  ir al estado 323


estado 281

  159 clausula_iteracion: REPITE ELEMENTO nombre . EN rango DESCENDENTE
  160                   | REPITE ELEMENTO nombre . EN rango

    EN  desplazar e ir al estado 324


estado 282

  162 clausula_iteracion: REPITE HASTA expresion .

    $default  reduce usando la regla 162 (clausula_iteracion)


estado 283

  138 instruccion_salir: SALIR SI expresion . ';'

    ';'  desplazar e ir al estado 325


estado 284

  146 instruccion_si: SI expresion ENTONCES . bloque_instrucciones SINO bloque_instrucciones
  147               | SI expresion ENTONCES . bloque_instrucciones

    '{'  desplazar e ir al estado 83

    bloque_instrucciones  ir al estado 326


estado 285

  137 instruccion_asignacion: objeto '=' expresion . ';'

    ';'  desplazar e ir al estado 327


estado 286

   22 nombres_comas: nombres_comas . ',' nombre
  124 parametros_formales: nombres_comas . ':' tipo_no_estructurado_o_nombre_tipo MODIFICABLE
  125                    | nombres_comas . ':' tipo_no_estructurado_o_nombre_tipo

    ','  desplazar e ir al estado 97
    ':'  desplazar e ir al estado 328


estado 287

  121 declaracion_parametros: '(' lista_parametros_formales . ')'
  123 lista_parametros_formales: lista_parametros_formales . ';' parametros_formales

    ';'  desplazar e ir al estado 329
    ')'  desplazar e ir al estado 330


estado 288

  122 lista_parametros_formales: parametros_formales .

    $default  reduce usando la regla 122 (lista_parametros_formales)


estado 289

  116 cabecera_funcion: FUNCION nombre declaracion_parametros FLECHA_DOBLE . tipo_no_estructurado_o_nombre_tipo

    BOOLEANO  desplazar e ir al estado 55
    CADENA    desplazar e ir al estado 56
    CARACTER  desplazar e ir al estado 57
    CONJUNTO  desplazar e ir al estado 59
    ENTERO    desplazar e ir al estado 60
    FICHERO   desplazar e ir al estado 61
    LISTA     desplazar e ir al estado 62
    REAL      desplazar e ir al estado 63
    '('       desplazar e ir al estado 65

    $default  reduce usando la regla 5 (id_op)

    nombre                              ir al estado 66
    id_op                               ir al estado 7
    tipo_no_estructurado_o_nombre_tipo  ir al estado 331
    tipo_escalar                        ir al estado 69
    tipo_fichero                        ir al estado 70
    tipo_enumerado                      ir al estado 71
    tipo_lista                          ir al estado 72
    tipo_lista_asociativa               ir al estado 73
    tipo_conjunto                       ir al estado 74


estado 290

  126 bloque_subprograma: declaracion_tipos declaracion_constantes declaracion_variables . bloque_instrucciones

    '{'  desplazar e ir al estado 83

    bloque_instrucciones  ir al estado 332


estado 291

   81 declaracion_clase_mod: CLASE FINAL '(' ')' '{' . declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    CONSTANTE      desplazar e ir al estado 293
    CONSTRUCTOR    desplazar e ir al estado 87
    DESTRUCTOR     desplazar e ir al estado 88
    FUNCION        desplazar e ir al estado 89
    PROCEDIMIENTO  desplazar e ir al estado 90
    PUBLICO        desplazar e ir al estado 294
    TIPO           desplazar e ir al estado 295

    $default  reduce usando la regla 5 (id_op)

    nombre                          ir al estado 52
    id_op                           ir al estado 7
    nombres_comas                   ir al estado 296
    declaraciones_publicas          ir al estado 333
    declaracion_componente_unoomas  ir al estado 298
    declaracion_componente          ir al estado 299
    declaracion_tipo_anidado        ir al estado 300
    declaracion_constante_anidada   ir al estado 301
    declaracion_atributos           ir al estado 302
    cabecera_subprograma            ir al estado 303
    cabecera_funcion                ir al estado 93
    cabecera_procedimiento          ir al estado 94
    cabecera_constructor            ir al estado 95
    cabecera_destructor             ir al estado 96


estado 292

   82 declaracion_clase_mod: CLASE FINAL '(' nombres_comas ')' . '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    '{'  desplazar e ir al estado 334


estado 293

   99 declaracion_constante_anidada: CONSTANTE . declaracion_constante

    $default  reduce usando la regla 5 (id_op)

    nombre                 ir al estado 45
    id_op                  ir al estado 7
    declaracion_constante  ir al estado 335


estado 294

   85 declaraciones_publicas: PUBLICO . declaracion_componente_unoomas

    CONSTANTE      desplazar e ir al estado 293
    CONSTRUCTOR    desplazar e ir al estado 87
    DESTRUCTOR     desplazar e ir al estado 88
    FUNCION        desplazar e ir al estado 89
    PROCEDIMIENTO  desplazar e ir al estado 90
    TIPO           desplazar e ir al estado 295

    $default  reduce usando la regla 5 (id_op)

    nombre                          ir al estado 52
    id_op                           ir al estado 7
    nombres_comas                   ir al estado 296
    declaracion_componente_unoomas  ir al estado 336
    declaracion_componente          ir al estado 299
    declaracion_tipo_anidado        ir al estado 300
    declaracion_constante_anidada   ir al estado 301
    declaracion_atributos           ir al estado 302
    cabecera_subprograma            ir al estado 303
    cabecera_funcion                ir al estado 93
    cabecera_procedimiento          ir al estado 94
    cabecera_constructor            ir al estado 95
    cabecera_destructor             ir al estado 96


estado 295

   98 declaracion_tipo_anidado: TIPO . declaracion_tipo

    $default  reduce usando la regla 5 (id_op)

    nombre            ir al estado 32
    id_op             ir al estado 7
    declaracion_tipo  ir al estado 337


estado 296

   22 nombres_comas: nombres_comas . ',' nombre
  100 declaracion_atributos: nombres_comas . ':' tipo_no_estructurado_o_nombre_tipo ';'

    ','  desplazar e ir al estado 97
    ':'  desplazar e ir al estado 338


estado 297

   84 declaracion_clase_nomod: CLASE '(' ')' '{' declaraciones_publicas . declaraciones_semi declaraciones_privadas '}'

    SEMIPUBLICO  desplazar e ir al estado 339

    $default  reduce usando la regla 87 (declaraciones_semi)

    declaraciones_semi  ir al estado 340


estado 298

   86 declaraciones_publicas: declaracion_componente_unoomas .
   92 declaracion_componente_unoomas: declaracion_componente_unoomas . declaracion_componente

    CONSTANTE      desplazar e ir al estado 293
    CONSTRUCTOR    desplazar e ir al estado 87
    DESTRUCTOR     desplazar e ir al estado 88
    FUNCION        desplazar e ir al estado 89
    PROCEDIMIENTO  desplazar e ir al estado 90
    TIPO           desplazar e ir al estado 295

    IDENTIFICADOR  reduce usando la regla 5 (id_op)
    $default       reduce usando la regla 86 (declaraciones_publicas)

    nombre                         ir al estado 52
    id_op                          ir al estado 7
    nombres_comas                  ir al estado 296
    declaracion_componente         ir al estado 341
    declaracion_tipo_anidado       ir al estado 300
    declaracion_constante_anidada  ir al estado 301
    declaracion_atributos          ir al estado 302
    cabecera_subprograma           ir al estado 303
    cabecera_funcion               ir al estado 93
    cabecera_procedimiento         ir al estado 94
    cabecera_constructor           ir al estado 95
    cabecera_destructor            ir al estado 96


estado 299

   91 declaracion_componente_unoomas: declaracion_componente .

    $default  reduce usando la regla 91 (declaracion_componente_unoomas)


estado 300

   93 declaracion_componente: declaracion_tipo_anidado .

    $default  reduce usando la regla 93 (declaracion_componente)


estado 301

   94 declaracion_componente: declaracion_constante_anidada .

    $default  reduce usando la regla 94 (declaracion_componente)


estado 302

   95 declaracion_componente: declaracion_atributos .

    $default  reduce usando la regla 95 (declaracion_componente)


estado 303

   96 declaracion_componente: cabecera_subprograma . ';' modificadores ';'
   97                       | cabecera_subprograma . ';'

    ';'  desplazar e ir al estado 342


estado 304

   83 declaracion_clase_nomod: CLASE '(' nombres_comas ')' '{' . declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    CONSTANTE      desplazar e ir al estado 293
    CONSTRUCTOR    desplazar e ir al estado 87
    DESTRUCTOR     desplazar e ir al estado 88
    FUNCION        desplazar e ir al estado 89
    PROCEDIMIENTO  desplazar e ir al estado 90
    PUBLICO        desplazar e ir al estado 294
    TIPO           desplazar e ir al estado 295

    $default  reduce usando la regla 5 (id_op)

    nombre                          ir al estado 52
    id_op                           ir al estado 7
    nombres_comas                   ir al estado 296
    declaraciones_publicas          ir al estado 343
    declaracion_componente_unoomas  ir al estado 298
    declaracion_componente          ir al estado 299
    declaracion_tipo_anidado        ir al estado 300
    declaracion_constante_anidada   ir al estado 301
    declaracion_atributos           ir al estado 302
    cabecera_subprograma            ir al estado 303
    cabecera_funcion                ir al estado 93
    cabecera_procedimiento          ir al estado 94
    cabecera_constructor            ir al estado 95
    cabecera_destructor             ir al estado 96


estado 305

  144 expresion_comas: expresion_comas ',' . expresion

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    llamada_subprograma   ir al estado 115
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 129
    expresion_or_logico   ir al estado 130
    expresion             ir al estado 344


estado 306

  143 llamada_subprograma: nombre '(' expresion_comas ')' . nombre '(' ')'

    $default  reduce usando la regla 5 (id_op)

    nombre  ir al estado 345
    id_op   ir al estado 7


estado 307

  168 objeto: objeto '[' expresion_comas ']' .

    $default  reduce usando la regla 168 (objeto)


estado 308

   53 expresion_rango_op: DOS_PTOS . expresion

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    llamada_subprograma   ir al estado 115
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 129
    expresion_or_logico   ir al estado 130
    expresion             ir al estado 346


estado 309

   51 rango: expresion DOS_PTOS expresion expresion_rango_op .

    $default  reduce usando la regla 51 (rango)


estado 310

   58 declaracion_campo: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo . ';'

    ';'  desplazar e ir al estado 347


estado 311

   57 declaracion_campo: declaracion_campo nombres_comas ':' . tipo_no_estructurado_o_nombre_tipo ';'

    BOOLEANO  desplazar e ir al estado 55
    CADENA    desplazar e ir al estado 56
    CARACTER  desplazar e ir al estado 57
    CONJUNTO  desplazar e ir al estado 59
    ENTERO    desplazar e ir al estado 60
    FICHERO   desplazar e ir al estado 61
    LISTA     desplazar e ir al estado 62
    REAL      desplazar e ir al estado 63
    '('       desplazar e ir al estado 65

    $default  reduce usando la regla 5 (id_op)

    nombre                              ir al estado 66
    id_op                               ir al estado 7
    tipo_no_estructurado_o_nombre_tipo  ir al estado 348
    tipo_escalar                        ir al estado 69
    tipo_fichero                        ir al estado 70
    tipo_enumerado                      ir al estado 71
    tipo_lista                          ir al estado 72
    tipo_lista_asociativa               ir al estado 73
    tipo_conjunto                       ir al estado 74


estado 312

   71 clave_valor: CTC_CADENA . FLECHA_DOBLE valor_constante
  172 expresion_constante: CTC_CADENA .

    FLECHA_DOBLE  desplazar e ir al estado 349

    $default  reduce usando la regla 172 (expresion_constante)


estado 313

   73 campo_valor: nombre . FLECHA_DOBLE valor_constante
  143 llamada_subprograma: nombre . '(' expresion_comas ')' nombre '(' ')'
  167 objeto: nombre .

    FLECHA_DOBLE  desplazar e ir al estado 350
    '('           desplazar e ir al estado 180

    $default  reduce usando la regla 167 (objeto)


estado 314

   69 valor_constante_comas: valor_constante .

    $default  reduce usando la regla 69 (valor_constante_comas)


estado 315

   65 valor_constante: '[' valor_constante_comas . ']'
   68 valor_constante_comas: valor_constante_comas . ',' valor_constante

    ','  desplazar e ir al estado 351
    ']'  desplazar e ir al estado 352


estado 316

   66 valor_constante: '[' clave_valor . ']'
   70 clave_valor: clave_valor . ',' CTC_CADENA FLECHA_DOBLE valor_constante

    ','  desplazar e ir al estado 353
    ']'  desplazar e ir al estado 354


estado 317

   67 valor_constante: '[' campo_valor . ']'
   72 campo_valor: campo_valor . ',' nombre FLECHA_DOBLE valor_constante

    ','  desplazar e ir al estado 355
    ']'  desplazar e ir al estado 356


estado 318

   76 declaracion_variable: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo '=' valor_constante . ';'

    ';'  desplazar e ir al estado 357


estado 319

  148 instruccion_casos: EN CASO expresion SEA . caso ';'

    $default  reduce usando la regla 152 (entradas_op)

    caso         ir al estado 358
    entradas     ir al estado 359
    entradas_op  ir al estado 360


estado 320

  167 objeto: nombre .

    $default  reduce usando la regla 167 (objeto)


estado 321

  158 clausula_iteracion: PARA nombre EN objeto .
  168 objeto: objeto . '[' expresion_comas ']'
  169       | objeto . '.' IDENTIFICADOR

    '['  desplazar e ir al estado 183
    '.'  desplazar e ir al estado 184

    $default  reduce usando la regla 158 (clausula_iteracion)


estado 322

  165 clausula_excepcion: CUANDO . nombre EJECUTA bloque_instrucciones

    $default  reduce usando la regla 5 (id_op)

    nombre  ir al estado 361
    id_op   ir al estado 7


estado 323

  163 instruccion_probar_excepto: PROBAR bloque_instrucciones EXCEPTO clausula_excepcion . FINALMENTE bloque_instrucciones
  164                           | PROBAR bloque_instrucciones EXCEPTO clausula_excepcion .

    FINALMENTE  desplazar e ir al estado 362

    $default  reduce usando la regla 164 (instruccion_probar_excepto)


estado 324

  159 clausula_iteracion: REPITE ELEMENTO nombre EN . rango DESCENDENTE
  160                   | REPITE ELEMENTO nombre EN . rango

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    rango                 ir al estado 363
    llamada_subprograma   ir al estado 115
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 129
    expresion_or_logico   ir al estado 130
    expresion             ir al estado 131


estado 325

  138 instruccion_salir: SALIR SI expresion ';' .

    $default  reduce usando la regla 138 (instruccion_salir)


estado 326

  146 instruccion_si: SI expresion ENTONCES bloque_instrucciones . SINO bloque_instrucciones
  147               | SI expresion ENTONCES bloque_instrucciones .

    SINO  desplazar e ir al estado 364

    $default  reduce usando la regla 147 (instruccion_si)


estado 327

  137 instruccion_asignacion: objeto '=' expresion ';' .

    $default  reduce usando la regla 137 (instruccion_asignacion)


estado 328

  124 parametros_formales: nombres_comas ':' . tipo_no_estructurado_o_nombre_tipo MODIFICABLE
  125                    | nombres_comas ':' . tipo_no_estructurado_o_nombre_tipo

    BOOLEANO  desplazar e ir al estado 55
    CADENA    desplazar e ir al estado 56
    CARACTER  desplazar e ir al estado 57
    CONJUNTO  desplazar e ir al estado 59
    ENTERO    desplazar e ir al estado 60
    FICHERO   desplazar e ir al estado 61
    LISTA     desplazar e ir al estado 62
    REAL      desplazar e ir al estado 63
    '('       desplazar e ir al estado 65

    $default  reduce usando la regla 5 (id_op)

    nombre                              ir al estado 66
    id_op                               ir al estado 7
    tipo_no_estructurado_o_nombre_tipo  ir al estado 365
    tipo_escalar                        ir al estado 69
    tipo_fichero                        ir al estado 70
    tipo_enumerado                      ir al estado 71
    tipo_lista                          ir al estado 72
    tipo_lista_asociativa               ir al estado 73
    tipo_conjunto                       ir al estado 74


estado 329

  123 lista_parametros_formales: lista_parametros_formales ';' . parametros_formales

    $default  reduce usando la regla 5 (id_op)

    nombre               ir al estado 52
    id_op                ir al estado 7
    nombres_comas        ir al estado 286
    parametros_formales  ir al estado 366


estado 330

  121 declaracion_parametros: '(' lista_parametros_formales ')' .

    $default  reduce usando la regla 121 (declaracion_parametros)


estado 331

  116 cabecera_funcion: FUNCION nombre declaracion_parametros FLECHA_DOBLE tipo_no_estructurado_o_nombre_tipo .

    $default  reduce usando la regla 116 (cabecera_funcion)


estado 332

  126 bloque_subprograma: declaracion_tipos declaracion_constantes declaracion_variables bloque_instrucciones .

    $default  reduce usando la regla 126 (bloque_subprograma)


estado 333

   81 declaracion_clase_mod: CLASE FINAL '(' ')' '{' declaraciones_publicas . declaraciones_semi declaraciones_privadas '}'

    SEMIPUBLICO  desplazar e ir al estado 339

    $default  reduce usando la regla 87 (declaraciones_semi)

    declaraciones_semi  ir al estado 367


estado 334

   82 declaracion_clase_mod: CLASE FINAL '(' nombres_comas ')' '{' . declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    CONSTANTE      desplazar e ir al estado 293
    CONSTRUCTOR    desplazar e ir al estado 87
    DESTRUCTOR     desplazar e ir al estado 88
    FUNCION        desplazar e ir al estado 89
    PROCEDIMIENTO  desplazar e ir al estado 90
    PUBLICO        desplazar e ir al estado 294
    TIPO           desplazar e ir al estado 295

    $default  reduce usando la regla 5 (id_op)

    nombre                          ir al estado 52
    id_op                           ir al estado 7
    nombres_comas                   ir al estado 296
    declaraciones_publicas          ir al estado 368
    declaracion_componente_unoomas  ir al estado 298
    declaracion_componente          ir al estado 299
    declaracion_tipo_anidado        ir al estado 300
    declaracion_constante_anidada   ir al estado 301
    declaracion_atributos           ir al estado 302
    cabecera_subprograma            ir al estado 303
    cabecera_funcion                ir al estado 93
    cabecera_procedimiento          ir al estado 94
    cabecera_constructor            ir al estado 95
    cabecera_destructor             ir al estado 96


estado 335

   99 declaracion_constante_anidada: CONSTANTE declaracion_constante .

    $default  reduce usando la regla 99 (declaracion_constante_anidada)


estado 336

   85 declaraciones_publicas: PUBLICO declaracion_componente_unoomas .
   92 declaracion_componente_unoomas: declaracion_componente_unoomas . declaracion_componente

    CONSTANTE      desplazar e ir al estado 293
    CONSTRUCTOR    desplazar e ir al estado 87
    DESTRUCTOR     desplazar e ir al estado 88
    FUNCION        desplazar e ir al estado 89
    PROCEDIMIENTO  desplazar e ir al estado 90
    TIPO           desplazar e ir al estado 295

    IDENTIFICADOR  reduce usando la regla 5 (id_op)
    $default       reduce usando la regla 85 (declaraciones_publicas)

    nombre                         ir al estado 52
    id_op                          ir al estado 7
    nombres_comas                  ir al estado 296
    declaracion_componente         ir al estado 341
    declaracion_tipo_anidado       ir al estado 300
    declaracion_constante_anidada  ir al estado 301
    declaracion_atributos          ir al estado 302
    cabecera_subprograma           ir al estado 303
    cabecera_funcion               ir al estado 93
    cabecera_procedimiento         ir al estado 94
    cabecera_constructor           ir al estado 95
    cabecera_destructor            ir al estado 96


estado 337

   98 declaracion_tipo_anidado: TIPO declaracion_tipo .

    $default  reduce usando la regla 98 (declaracion_tipo_anidado)


estado 338

  100 declaracion_atributos: nombres_comas ':' . tipo_no_estructurado_o_nombre_tipo ';'

    BOOLEANO  desplazar e ir al estado 55
    CADENA    desplazar e ir al estado 56
    CARACTER  desplazar e ir al estado 57
    CONJUNTO  desplazar e ir al estado 59
    ENTERO    desplazar e ir al estado 60
    FICHERO   desplazar e ir al estado 61
    LISTA     desplazar e ir al estado 62
    REAL      desplazar e ir al estado 63
    '('       desplazar e ir al estado 65

    $default  reduce usando la regla 5 (id_op)

    nombre                              ir al estado 66
    id_op                               ir al estado 7
    tipo_no_estructurado_o_nombre_tipo  ir al estado 369
    tipo_escalar                        ir al estado 69
    tipo_fichero                        ir al estado 70
    tipo_enumerado                      ir al estado 71
    tipo_lista                          ir al estado 72
    tipo_lista_asociativa               ir al estado 73
    tipo_conjunto                       ir al estado 74


estado 339

   88 declaraciones_semi: SEMIPUBLICO . declaracion_componente_unoomas

    CONSTANTE      desplazar e ir al estado 293
    CONSTRUCTOR    desplazar e ir al estado 87
    DESTRUCTOR     desplazar e ir al estado 88
    FUNCION        desplazar e ir al estado 89
    PROCEDIMIENTO  desplazar e ir al estado 90
    TIPO           desplazar e ir al estado 295

    $default  reduce usando la regla 5 (id_op)

    nombre                          ir al estado 52
    id_op                           ir al estado 7
    nombres_comas                   ir al estado 296
    declaracion_componente_unoomas  ir al estado 370
    declaracion_componente          ir al estado 299
    declaracion_tipo_anidado        ir al estado 300
    declaracion_constante_anidada   ir al estado 301
    declaracion_atributos           ir al estado 302
    cabecera_subprograma            ir al estado 303
    cabecera_funcion                ir al estado 93
    cabecera_procedimiento          ir al estado 94
    cabecera_constructor            ir al estado 95
    cabecera_destructor             ir al estado 96


estado 340

   84 declaracion_clase_nomod: CLASE '(' ')' '{' declaraciones_publicas declaraciones_semi . declaraciones_privadas '}'

    PRIVADO  desplazar e ir al estado 371

    $default  reduce usando la regla 89 (declaraciones_privadas)

    declaraciones_privadas  ir al estado 372


estado 341

   92 declaracion_componente_unoomas: declaracion_componente_unoomas declaracion_componente .

    $default  reduce usando la regla 92 (declaracion_componente_unoomas)


estado 342

   96 declaracion_componente: cabecera_subprograma ';' . modificadores ';'
   97                       | cabecera_subprograma ';' .

    ABSTRACTO   desplazar e ir al estado 373
    ESPECIFICO  desplazar e ir al estado 374
    FINAL       desplazar e ir al estado 375
    GENERICO    desplazar e ir al estado 376

    $default  reduce usando la regla 97 (declaracion_componente)

    modificadores      ir al estado 377
    modificador_comas  ir al estado 378
    modificador        ir al estado 379


estado 343

   83 declaracion_clase_nomod: CLASE '(' nombres_comas ')' '{' declaraciones_publicas . declaraciones_semi declaraciones_privadas '}'

    SEMIPUBLICO  desplazar e ir al estado 339

    $default  reduce usando la regla 87 (declaraciones_semi)

    declaraciones_semi  ir al estado 380


estado 344

  144 expresion_comas: expresion_comas ',' expresion .

    $default  reduce usando la regla 144 (expresion_comas)


estado 345

  143 llamada_subprograma: nombre '(' expresion_comas ')' nombre . '(' ')'

    '('  desplazar e ir al estado 381


estado 346

   53 expresion_rango_op: DOS_PTOS expresion .

    $default  reduce usando la regla 53 (expresion_rango_op)


estado 347

   58 declaracion_campo: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo ';' .

    $default  reduce usando la regla 58 (declaracion_campo)


estado 348

   57 declaracion_campo: declaracion_campo nombres_comas ':' tipo_no_estructurado_o_nombre_tipo . ';'

    ';'  desplazar e ir al estado 382


estado 349

   71 clave_valor: CTC_CADENA FLECHA_DOBLE . valor_constante

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '['           desplazar e ir al estado 271
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    valor_constante       ir al estado 383
    llamada_subprograma   ir al estado 115
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 129
    expresion_or_logico   ir al estado 130
    expresion             ir al estado 273


estado 350

   73 campo_valor: nombre FLECHA_DOBLE . valor_constante

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '['           desplazar e ir al estado 271
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    valor_constante       ir al estado 384
    llamada_subprograma   ir al estado 115
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 129
    expresion_or_logico   ir al estado 130
    expresion             ir al estado 273


estado 351

   68 valor_constante_comas: valor_constante_comas ',' . valor_constante

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '['           desplazar e ir al estado 271
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    valor_constante       ir al estado 385
    llamada_subprograma   ir al estado 115
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 129
    expresion_or_logico   ir al estado 130
    expresion             ir al estado 273


estado 352

   65 valor_constante: '[' valor_constante_comas ']' .

    $default  reduce usando la regla 65 (valor_constante)


estado 353

   70 clave_valor: clave_valor ',' . CTC_CADENA FLECHA_DOBLE valor_constante

    CTC_CADENA  desplazar e ir al estado 386


estado 354

   66 valor_constante: '[' clave_valor ']' .

    $default  reduce usando la regla 66 (valor_constante)


estado 355

   72 campo_valor: campo_valor ',' . nombre FLECHA_DOBLE valor_constante

    $default  reduce usando la regla 5 (id_op)

    nombre  ir al estado 387
    id_op   ir al estado 7


estado 356

   67 valor_constante: '[' campo_valor ']' .

    $default  reduce usando la regla 67 (valor_constante)


estado 357

   76 declaracion_variable: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo '=' valor_constante ';' .

    $default  reduce usando la regla 76 (declaracion_variable)


estado 358

  148 instruccion_casos: EN CASO expresion SEA caso . ';'
  149 caso: caso . entradas FLECHA_DOBLE bloque_instrucciones

    ';'  desplazar e ir al estado 388

    $default  reduce usando la regla 152 (entradas_op)

    entradas     ir al estado 389
    entradas_op  ir al estado 360


estado 359

  150 caso: entradas . FLECHA_DOBLE bloque_instrucciones

    FLECHA_DOBLE  desplazar e ir al estado 390


estado 360

  151 entradas: entradas_op . entrada
  153 entradas_op: entradas_op . entrada '|'

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    OTRO          desplazar e ir al estado 391
    '('           desplazar e ir al estado 109
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    rango                 ir al estado 392
    llamada_subprograma   ir al estado 115
    entrada               ir al estado 393
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 129
    expresion_or_logico   ir al estado 130
    expresion             ir al estado 394


estado 361

  165 clausula_excepcion: CUANDO nombre . EJECUTA bloque_instrucciones

    EJECUTA  desplazar e ir al estado 395


estado 362

  163 instruccion_probar_excepto: PROBAR bloque_instrucciones EXCEPTO clausula_excepcion FINALMENTE . bloque_instrucciones

    '{'  desplazar e ir al estado 83

    bloque_instrucciones  ir al estado 396


estado 363

  159 clausula_iteracion: REPITE ELEMENTO nombre EN rango . DESCENDENTE
  160                   | REPITE ELEMENTO nombre EN rango .

    DESCENDENTE  desplazar e ir al estado 397

    $default  reduce usando la regla 160 (clausula_iteracion)


estado 364

  146 instruccion_si: SI expresion ENTONCES bloque_instrucciones SINO . bloque_instrucciones

    '{'  desplazar e ir al estado 83

    bloque_instrucciones  ir al estado 398


estado 365

  124 parametros_formales: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo . MODIFICABLE
  125                    | nombres_comas ':' tipo_no_estructurado_o_nombre_tipo .

    MODIFICABLE  desplazar e ir al estado 399

    $default  reduce usando la regla 125 (parametros_formales)


estado 366

  123 lista_parametros_formales: lista_parametros_formales ';' parametros_formales .

    $default  reduce usando la regla 123 (lista_parametros_formales)


estado 367

   81 declaracion_clase_mod: CLASE FINAL '(' ')' '{' declaraciones_publicas declaraciones_semi . declaraciones_privadas '}'

    PRIVADO  desplazar e ir al estado 371

    $default  reduce usando la regla 89 (declaraciones_privadas)

    declaraciones_privadas  ir al estado 400


estado 368

   82 declaracion_clase_mod: CLASE FINAL '(' nombres_comas ')' '{' declaraciones_publicas . declaraciones_semi declaraciones_privadas '}'

    SEMIPUBLICO  desplazar e ir al estado 339

    $default  reduce usando la regla 87 (declaraciones_semi)

    declaraciones_semi  ir al estado 401


estado 369

  100 declaracion_atributos: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo . ';'

    ';'  desplazar e ir al estado 402


estado 370

   88 declaraciones_semi: SEMIPUBLICO declaracion_componente_unoomas .
   92 declaracion_componente_unoomas: declaracion_componente_unoomas . declaracion_componente

    CONSTANTE      desplazar e ir al estado 293
    CONSTRUCTOR    desplazar e ir al estado 87
    DESTRUCTOR     desplazar e ir al estado 88
    FUNCION        desplazar e ir al estado 89
    PROCEDIMIENTO  desplazar e ir al estado 90
    TIPO           desplazar e ir al estado 295

    IDENTIFICADOR  reduce usando la regla 5 (id_op)
    $default       reduce usando la regla 88 (declaraciones_semi)

    nombre                         ir al estado 52
    id_op                          ir al estado 7
    nombres_comas                  ir al estado 296
    declaracion_componente         ir al estado 341
    declaracion_tipo_anidado       ir al estado 300
    declaracion_constante_anidada  ir al estado 301
    declaracion_atributos          ir al estado 302
    cabecera_subprograma           ir al estado 303
    cabecera_funcion               ir al estado 93
    cabecera_procedimiento         ir al estado 94
    cabecera_constructor           ir al estado 95
    cabecera_destructor            ir al estado 96


estado 371

   90 declaraciones_privadas: PRIVADO . declaracion_componente_unoomas

    CONSTANTE      desplazar e ir al estado 293
    CONSTRUCTOR    desplazar e ir al estado 87
    DESTRUCTOR     desplazar e ir al estado 88
    FUNCION        desplazar e ir al estado 89
    PROCEDIMIENTO  desplazar e ir al estado 90
    TIPO           desplazar e ir al estado 295

    $default  reduce usando la regla 5 (id_op)

    nombre                          ir al estado 52
    id_op                           ir al estado 7
    nombres_comas                   ir al estado 296
    declaracion_componente_unoomas  ir al estado 403
    declaracion_componente          ir al estado 299
    declaracion_tipo_anidado        ir al estado 300
    declaracion_constante_anidada   ir al estado 301
    declaracion_atributos           ir al estado 302
    cabecera_subprograma            ir al estado 303
    cabecera_funcion                ir al estado 93
    cabecera_procedimiento          ir al estado 94
    cabecera_constructor            ir al estado 95
    cabecera_destructor             ir al estado 96


estado 372

   84 declaracion_clase_nomod: CLASE '(' ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas . '}'

    '}'  desplazar e ir al estado 404


estado 373

  105 modificador: ABSTRACTO .

    $default  reduce usando la regla 105 (modificador)


estado 374

  106 modificador: ESPECIFICO .

    $default  reduce usando la regla 106 (modificador)


estado 375

  107 modificador: FINAL .

    $default  reduce usando la regla 107 (modificador)


estado 376

  104 modificador: GENERICO .

    $default  reduce usando la regla 104 (modificador)


estado 377

   96 declaracion_componente: cabecera_subprograma ';' modificadores . ';'

    ';'  desplazar e ir al estado 405


estado 378

  101 modificadores: modificador_comas .
  102 modificador_comas: modificador_comas . ',' modificador

    ','  desplazar e ir al estado 406

    $default  reduce usando la regla 101 (modificadores)


estado 379

  103 modificador_comas: modificador .

    $default  reduce usando la regla 103 (modificador_comas)


estado 380

   83 declaracion_clase_nomod: CLASE '(' nombres_comas ')' '{' declaraciones_publicas declaraciones_semi . declaraciones_privadas '}'

    PRIVADO  desplazar e ir al estado 371

    $default  reduce usando la regla 89 (declaraciones_privadas)

    declaraciones_privadas  ir al estado 407


estado 381

  143 llamada_subprograma: nombre '(' expresion_comas ')' nombre '(' . ')'

    ')'  desplazar e ir al estado 408


estado 382

   57 declaracion_campo: declaracion_campo nombres_comas ':' tipo_no_estructurado_o_nombre_tipo ';' .

    $default  reduce usando la regla 57 (declaracion_campo)


estado 383

   71 clave_valor: CTC_CADENA FLECHA_DOBLE valor_constante .

    $default  reduce usando la regla 71 (clave_valor)


estado 384

   73 campo_valor: nombre FLECHA_DOBLE valor_constante .

    $default  reduce usando la regla 73 (campo_valor)


estado 385

   68 valor_constante_comas: valor_constante_comas ',' valor_constante .

    $default  reduce usando la regla 68 (valor_constante_comas)


estado 386

   70 clave_valor: clave_valor ',' CTC_CADENA . FLECHA_DOBLE valor_constante

    FLECHA_DOBLE  desplazar e ir al estado 409


estado 387

   72 campo_valor: campo_valor ',' nombre . FLECHA_DOBLE valor_constante

    FLECHA_DOBLE  desplazar e ir al estado 410


estado 388

  148 instruccion_casos: EN CASO expresion SEA caso ';' .

    $default  reduce usando la regla 148 (instruccion_casos)


estado 389

  149 caso: caso entradas . FLECHA_DOBLE bloque_instrucciones

    FLECHA_DOBLE  desplazar e ir al estado 411


estado 390

  150 caso: entradas FLECHA_DOBLE . bloque_instrucciones

    '{'  desplazar e ir al estado 83

    bloque_instrucciones  ir al estado 412


estado 391

  156 entrada: OTRO .

    $default  reduce usando la regla 156 (entrada)


estado 392

  155 entrada: rango .

    $default  reduce usando la regla 155 (entrada)


estado 393

  151 entradas: entradas_op entrada .
  153 entradas_op: entradas_op entrada . '|'

    '|'  desplazar e ir al estado 413

    $default  reduce usando la regla 151 (entradas)


estado 394

   51 rango: expresion . DOS_PTOS expresion expresion_rango_op
  154 entrada: expresion .

    DOS_PTOS  desplazar e ir al estado 204

    $default  reduce usando la regla 154 (entrada)


estado 395

  165 clausula_excepcion: CUANDO nombre EJECUTA . bloque_instrucciones

    '{'  desplazar e ir al estado 83

    bloque_instrucciones  ir al estado 414


estado 396

  163 instruccion_probar_excepto: PROBAR bloque_instrucciones EXCEPTO clausula_excepcion FINALMENTE bloque_instrucciones .

    $default  reduce usando la regla 163 (instruccion_probar_excepto)


estado 397

  159 clausula_iteracion: REPITE ELEMENTO nombre EN rango DESCENDENTE .

    $default  reduce usando la regla 159 (clausula_iteracion)


estado 398

  146 instruccion_si: SI expresion ENTONCES bloque_instrucciones SINO bloque_instrucciones .

    $default  reduce usando la regla 146 (instruccion_si)


estado 399

  124 parametros_formales: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo MODIFICABLE .

    $default  reduce usando la regla 124 (parametros_formales)


estado 400

   81 declaracion_clase_mod: CLASE FINAL '(' ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas . '}'

    '}'  desplazar e ir al estado 415


estado 401

   82 declaracion_clase_mod: CLASE FINAL '(' nombres_comas ')' '{' declaraciones_publicas declaraciones_semi . declaraciones_privadas '}'

    PRIVADO  desplazar e ir al estado 371

    $default  reduce usando la regla 89 (declaraciones_privadas)

    declaraciones_privadas  ir al estado 416


estado 402

  100 declaracion_atributos: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo ';' .

    $default  reduce usando la regla 100 (declaracion_atributos)


estado 403

   90 declaraciones_privadas: PRIVADO declaracion_componente_unoomas .
   92 declaracion_componente_unoomas: declaracion_componente_unoomas . declaracion_componente

    CONSTANTE      desplazar e ir al estado 293
    CONSTRUCTOR    desplazar e ir al estado 87
    DESTRUCTOR     desplazar e ir al estado 88
    FUNCION        desplazar e ir al estado 89
    PROCEDIMIENTO  desplazar e ir al estado 90
    TIPO           desplazar e ir al estado 295

    '}'       reduce usando la regla 90 (declaraciones_privadas)
    $default  reduce usando la regla 5 (id_op)

    nombre                         ir al estado 52
    id_op                          ir al estado 7
    nombres_comas                  ir al estado 296
    declaracion_componente         ir al estado 341
    declaracion_tipo_anidado       ir al estado 300
    declaracion_constante_anidada  ir al estado 301
    declaracion_atributos          ir al estado 302
    cabecera_subprograma           ir al estado 303
    cabecera_funcion               ir al estado 93
    cabecera_procedimiento         ir al estado 94
    cabecera_constructor           ir al estado 95
    cabecera_destructor            ir al estado 96


estado 404

   84 declaracion_clase_nomod: CLASE '(' ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}' .

    $default  reduce usando la regla 84 (declaracion_clase_nomod)


estado 405

   96 declaracion_componente: cabecera_subprograma ';' modificadores ';' .

    $default  reduce usando la regla 96 (declaracion_componente)


estado 406

  102 modificador_comas: modificador_comas ',' . modificador

    ABSTRACTO   desplazar e ir al estado 373
    ESPECIFICO  desplazar e ir al estado 374
    FINAL       desplazar e ir al estado 375
    GENERICO    desplazar e ir al estado 376

    modificador  ir al estado 417


estado 407

   83 declaracion_clase_nomod: CLASE '(' nombres_comas ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas . '}'

    '}'  desplazar e ir al estado 418


estado 408

  143 llamada_subprograma: nombre '(' expresion_comas ')' nombre '(' ')' .

    $default  reduce usando la regla 143 (llamada_subprograma)


estado 409

   70 clave_valor: clave_valor ',' CTC_CADENA FLECHA_DOBLE . valor_constante

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '['           desplazar e ir al estado 271
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    valor_constante       ir al estado 419
    llamada_subprograma   ir al estado 115
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 129
    expresion_or_logico   ir al estado 130
    expresion             ir al estado 273


estado 410

   72 campo_valor: campo_valor ',' nombre FLECHA_DOBLE . valor_constante

    CTC_BOOLEANA  desplazar e ir al estado 104
    CTC_CADENA    desplazar e ir al estado 105
    CTC_CARACTER  desplazar e ir al estado 106
    CTC_ENTERA    desplazar e ir al estado 107
    CTC_REAL      desplazar e ir al estado 108
    '('           desplazar e ir al estado 109
    '['           desplazar e ir al estado 271
    '-'           desplazar e ir al estado 110
    '!'           desplazar e ir al estado 111

    $default  reduce usando la regla 5 (id_op)

    nombre                ir al estado 112
    id_op                 ir al estado 7
    valor_constante       ir al estado 420
    llamada_subprograma   ir al estado 115
    objeto                ir al estado 116
    expresion_constante   ir al estado 117
    expresion_primaria    ir al estado 118
    expresion_unitaria    ir al estado 119
    expresion_potencia    ir al estado 120
    expresion_prod        ir al estado 121
    expresion_sum         ir al estado 122
    expresion_desplz      ir al estado 123
    expresion_and_bin     ir al estado 124
    expresion_or_bin      ir al estado 125
    expresion_xor_bin     ir al estado 126
    expresion_comparar    ir al estado 127
    expresion_negacion    ir al estado 128
    expresion_and_logico  ir al estado 129
    expresion_or_logico   ir al estado 130
    expresion             ir al estado 273


estado 411

  149 caso: caso entradas FLECHA_DOBLE . bloque_instrucciones

    '{'  desplazar e ir al estado 83

    bloque_instrucciones  ir al estado 421


estado 412

  150 caso: entradas FLECHA_DOBLE bloque_instrucciones .

    $default  reduce usando la regla 150 (caso)


estado 413

  153 entradas_op: entradas_op entrada '|' .

    $default  reduce usando la regla 153 (entradas_op)


estado 414

  165 clausula_excepcion: CUANDO nombre EJECUTA bloque_instrucciones .

    $default  reduce usando la regla 165 (clausula_excepcion)


estado 415

   81 declaracion_clase_mod: CLASE FINAL '(' ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}' .

    $default  reduce usando la regla 81 (declaracion_clase_mod)


estado 416

   82 declaracion_clase_mod: CLASE FINAL '(' nombres_comas ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas . '}'

    '}'  desplazar e ir al estado 422


estado 417

  102 modificador_comas: modificador_comas ',' modificador .

    $default  reduce usando la regla 102 (modificador_comas)


estado 418

   83 declaracion_clase_nomod: CLASE '(' nombres_comas ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}' .

    $default  reduce usando la regla 83 (declaracion_clase_nomod)


estado 419

   70 clave_valor: clave_valor ',' CTC_CADENA FLECHA_DOBLE valor_constante .

    $default  reduce usando la regla 70 (clave_valor)


estado 420

   72 campo_valor: campo_valor ',' nombre FLECHA_DOBLE valor_constante .

    $default  reduce usando la regla 72 (campo_valor)


estado 421

  149 caso: caso entradas FLECHA_DOBLE bloque_instrucciones .

    $default  reduce usando la regla 149 (caso)


estado 422

   82 declaracion_clase_mod: CLASE FINAL '(' nombres_comas ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}' .

    $default  reduce usando la regla 82 (declaracion_clase_mod)
