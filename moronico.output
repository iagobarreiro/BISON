Gramática

    0 $accept: programa $end

    1 programa: definicion_programa
    2         | definicion_paquete

    3 definicion_programa: PROGRAMA nombre ';' bloque_programa
    4                    | error ';'

    5 nombre: id_op IDENTIFICADOR

    6 id_op: /* vacío */
    7      | id_op IDENTIFICADOR CUATRO_PTOS

    8 bloque_programa: declaracion_cargas declaracion_tipos declaracion_constantes declaracion_variables bloque_instrucciones
    9                | error ';'

   10 bloque_instrucciones: '{' instruccion_unoomas '}'
   11                     | '{' error '}'

   12 instruccion_unoomas: instruccion_unoomas instruccion
   13                    | instruccion

   14 definicion_paquete: PAQUETE nombre ';' seccion_cabecera seccion_cuerpo

   15 seccion_cabecera: CABECERA declaracion_cargas declaracion_tipos declaracion_constantes declaracion_variables declaracion_interfaces

   16 seccion_cuerpo: CUERPO declaracion_tipos declaracion_constantes declaracion_variables declaracion_subprograma

   17 declaracion_cargas: /* vacío */
   18                   | CARGA declaracion_carga ';'

   19 declaracion_carga: nombre en_path_op nombres_op
   20                  | declaracion_carga ',' nombre en_path_op nombres_op

   21 en_path_op: /* vacío */
   22           | EN PATH

   23 nombres_op: /* vacío */
   24           | '(' nombres_comas ')'
   25           | '(' error ')'

   26 nombres_comas: nombres_comas ',' nombre
   27              | nombre

   28 declaracion_tipos: /* vacío */
   29                  | TIPO declaracion_tipo_unoomas

   30 declaracion_tipo_unoomas: declaracion_tipo_unoomas declaracion_tipo
   31                         | declaracion_tipo

   32 declaracion_tipo: nombre '=' tipo_no_estructurado_o_nombre_tipo ';'
   33                 | nombre '=' tipo_estructurado

   34 tipo_no_estructurado_o_nombre_tipo: nombre
   35                                   | tipo_escalar
   36                                   | tipo_fichero
   37                                   | tipo_enumerado
   38                                   | tipo_lista
   39                                   | tipo_lista_asociativa
   40                                   | tipo_conjunto

   41 tipo_estructurado: tipo_registro
   42                  | declaracion_clase

   43 tipo_escalar: ENTERO
   44             | REAL
   45             | BOOLEANO
   46             | CARACTER
   47             | CADENA

   48 tipo_fichero: FICHERO

   49 tipo_enumerado: '(' expresion_constante_unoomas ')'
   50               | '(' error ')'

   51 expresion_constante_unoomas: expresion_constante
   52                            | expresion_constante_unoomas ',' expresion_constante

   53 tipo_lista: LISTA rango_lista_op DE tipo_no_estructurado_o_nombre_tipo

   54 rango_lista_op: /* vacío */
   55               | '[' rango_lista ']'

   56 rango_lista: rango_lista ',' rango
   57            | rango

   58 rango: expresion DOS_PTOS expresion
   59      | expresion DOS_PTOS expresion DOS_PTOS expresion

   60 tipo_lista_asociativa: LISTA ASOCIATIVA DE tipo_no_estructurado_o_nombre_tipo

   61 tipo_conjunto: CONJUNTO DE tipo_no_estructurado_o_nombre_tipo

   62 tipo_registro: REGISTRO '{' declaracion_campo '}'
   63              | '{' error '}'

   64 declaracion_campo: declaracion_campo nombres_comas ':' tipo_no_estructurado_o_nombre_tipo ';'
   65                  | nombres_comas ':' tipo_no_estructurado_o_nombre_tipo ';'

   66 declaracion_constantes: /* vacío */
   67                       | CONSTANTE declaracion_constante_unoomas

   68 declaracion_constante_unoomas: declaracion_constante_unoomas declaracion_constante
   69                              | declaracion_constante

   70 declaracion_constante: nombre ':' tipo_no_estructurado_o_nombre_tipo '=' valor_constante ';'

   71 valor_constante: expresion
   72                | '[' valor_constante_comas ']'
   73                | '[' clave_valor ']'
   74                | '[' campo_valor ']'
   75                | '[' error ']'

   76 valor_constante_comas: valor_constante_comas ',' valor_constante
   77                      | valor_constante

   78 clave_valor: clave_valor ',' CTC_CADENA FLECHA_DOBLE valor_constante
   79            | CTC_CADENA FLECHA_DOBLE valor_constante

   80 campo_valor: campo_valor ',' nombre FLECHA_DOBLE valor_constante
   81            | nombre FLECHA_DOBLE valor_constante

   82 declaracion_variables: /* vacío */
   83                      | VARIABLE declaracion_variable

   84 declaracion_variable: declaracion_variable nombres_comas ':' tipo_no_estructurado_o_nombre_tipo '=' valor_constante ';'
   85                     | declaracion_variable nombres_comas ':' tipo_no_estructurado_o_nombre_tipo ';'
   86                     | nombres_comas ':' tipo_no_estructurado_o_nombre_tipo '=' valor_constante ';'
   87                     | nombres_comas ':' tipo_no_estructurado_o_nombre_tipo ';'
   88                     | nombres_comas ':' error '=' valor_constante ';'
   89                     | nombres_comas ':' error ';'

   90 declaracion_interfaces: INTERFAZ cabecera_subprograma_unoomas_ptocoma

   91 declaracion_clase: declaracion_clase_mod
   92                  | declaracion_clase_nomod

   93 declaracion_clase_mod: CLASE FINAL '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'
   94                      | CLASE FINAL '(' nombres_comas ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

   95 declaracion_clase_nomod: CLASE '(' nombres_comas ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'
   96                        | CLASE '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

   97 declaraciones_publicas: PUBLICO declaracion_componente_unoomas
   98                       | declaracion_componente_unoomas

   99 declaraciones_semi: /* vacío */
  100                   | SEMIPUBLICO declaracion_componente_unoomas

  101 declaraciones_privadas: /* vacío */
  102                       | PRIVADO declaracion_componente_unoomas

  103 declaracion_componente_unoomas: declaracion_componente
  104                               | declaracion_componente_unoomas declaracion_componente

  105 declaracion_componente: declaracion_tipo_anidado
  106                       | declaracion_constante_anidada
  107                       | declaracion_atributos
  108                       | cabecera_subprograma ';' modificadores ';'
  109                       | cabecera_subprograma ';'

  110 declaracion_tipo_anidado: TIPO declaracion_tipo

  111 declaracion_constante_anidada: CONSTANTE declaracion_constante

  112 declaracion_atributos: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo ';'

  113 modificadores: modificador_comas

  114 modificador_comas: modificador_comas ',' modificador
  115                  | modificador

  116 modificador: GENERICO
  117            | ABSTRACTO
  118            | ESPECIFICO
  119            | FINAL

  120 declaracion_subprograma: declaracion_subprograma cabecera_subprograma bloque_subprograma
  121                        | cabecera_subprograma bloque_subprograma

  122 cabecera_subprograma: cabecera_funcion
  123                     | cabecera_procedimiento
  124                     | cabecera_constructor
  125                     | cabecera_destructor

  126 cabecera_subprograma_unoomas_ptocoma: cabecera_subprograma_unoomas_ptocoma cabecera_subprograma ';'
  127                                     | cabecera_subprograma ';'

  128 cabecera_funcion: FUNCION nombre declaracion_parametros FLECHA_DOBLE tipo_no_estructurado_o_nombre_tipo

  129 cabecera_procedimiento: PROCEDIMIENTO nombre declaracion_parametros

  130 cabecera_constructor: CONSTRUCTOR nombre declaracion_parametros

  131 cabecera_destructor: DESTRUCTOR nombre

  132 declaracion_parametros: /* vacío */
  133                       | '(' lista_parametros_formales ')'

  134 lista_parametros_formales: parametros_formales
  135                          | lista_parametros_formales ';' parametros_formales

  136 parametros_formales: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo MODIFICABLE
  137                    | nombres_comas ':' tipo_no_estructurado_o_nombre_tipo

  138 bloque_subprograma: declaracion_tipos declaracion_constantes declaracion_variables bloque_instrucciones

  139 instruccion: ';'
  140            | instruccion_asignacion
  141            | instruccion_salir
  142            | instruccion_devolver
  143            | instruccion_llamada
  144            | instruccion_si
  145            | instruccion_casos
  146            | instruccion_bucle
  147            | instruccion_probar_excepto
  148            | instruccion_lanzar

  149 instruccion_asignacion: objeto '=' expresion ';'

  150 instruccion_salir: SALIR SI expresion ';'
  151                  | SALIR ';'

  152 instruccion_devolver: DEVOLVER expresion ';'
  153                     | DEVOLVER ';'

  154 instruccion_llamada: llamada_subprograma ';'

  155 llamada_subprograma: nombre '(' expresion_comas ')' nombre '(' ')'

  156 expresion_comas: expresion_comas ',' expresion
  157                | expresion

  158 instruccion_si: SI expresion ENTONCES bloque_instrucciones SINO bloque_instrucciones
  159               | SI expresion ENTONCES bloque_instrucciones

  160 instruccion_casos: EN CASO expresion SEA caso ';'

  161 caso: caso entradas FLECHA_DOBLE bloque_instrucciones
  162     | entradas FLECHA_DOBLE bloque_instrucciones

  163 entradas: entrada_op entrada

  164 entrada_op: /* vacío */
  165           | entrada_op entrada '|'

  166 entrada: expresion
  167        | rango
  168        | OTRO

  169 instruccion_bucle: clausula_iteracion bloque_instrucciones

  170 clausula_iteracion: PARA nombre EN objeto
  171                   | REPITE ELEMENTO nombre EN rango DESCENDENTE
  172                   | REPITE ELEMENTO nombre EN rango
  173                   | MIENTRAS expresion
  174                   | REPITE HASTA expresion

  175 instruccion_probar_excepto: PROBAR bloque_instrucciones EXCEPTO clausula_excepcion FINALMENTE bloque_instrucciones
  176                           | PROBAR bloque_instrucciones EXCEPTO clausula_excepcion

  177 clausula_excepcion: clausula_excepcion CUANDO nombre EJECUTA bloque_instrucciones
  178                   | CUANDO nombre EJECUTA bloque_instrucciones

  179 instruccion_lanzar: LANZAR nombre ';'

  180 objeto: nombre
  181       | objeto '[' expresion_comas ']'
  182       | objeto '.' IDENTIFICADOR

  183 expresion_constante: CTC_ENTERA
  184                    | CTC_REAL
  185                    | CTC_CADENA
  186                    | CTC_CARACTER
  187                    | CTC_BOOLEANA

  188 expresion_primaria: expresion_constante
  189                   | objeto
  190                   | llamada_subprograma
  191                   | '(' expresion ')'

  192 expresion_unitaria: '-' expresion_primaria
  193                   | expresion_primaria

  194 expresion_potencia: expresion_unitaria POTENCIA expresion_potencia
  195                   | expresion_unitaria

  196 expresion_prod: expresion_prod '*' expresion_potencia
  197               | expresion_prod '/' expresion_potencia
  198               | expresion_prod '%' expresion_potencia
  199               | expresion_potencia

  200 expresion_sum: expresion_sum '+' expresion_prod
  201              | expresion_sum '-' expresion_prod
  202              | expresion_prod

  203 expresion_desplz: expresion_desplz DESPI expresion_sum
  204                 | expresion_desplz DESPD expresion_sum
  205                 | expresion_sum

  206 expresion_and_bin: expresion_and_bin '&' expresion_desplz
  207                  | expresion_desplz

  208 expresion_or_bin: expresion_or_bin '^' expresion_and_bin
  209                 | expresion_and_bin

  210 expresion_xor_bin: expresion_xor_bin '@' expresion_desplz
  211                  | expresion_or_bin

  212 expresion_comparar: expresion_comparar '<' expresion_xor_bin
  213                   | expresion_comparar '>' expresion_xor_bin
  214                   | expresion_comparar LEQ expresion_xor_bin
  215                   | expresion_comparar GEQ expresion_xor_bin
  216                   | expresion_comparar EQ expresion_xor_bin
  217                   | expresion_comparar NEQ expresion_xor_bin
  218                   | expresion_xor_bin

  219 expresion_negacion: '!' expresion_negacion
  220                   | expresion_comparar

  221 expresion_and_logico: expresion_and_logico AND expresion_negacion
  222                     | expresion_negacion

  223 expresion_or_logico: expresion_or_logico OR expresion_and_logico
  224                    | expresion_and_logico

  225 expresion: expresion_or_logico


Terminales con las reglas donde aparecen

$end (0) 0
'!' (33) 219
'%' (37) 198
'&' (38) 206
'(' (40) 24 25 49 50 94 95 133 155 191
')' (41) 24 25 49 50 94 95 133 155 191
'*' (42) 196
'+' (43) 200
',' (44) 20 26 52 56 76 78 80 114 156
'-' (45) 192 201
'.' (46) 182
'/' (47) 197
':' (58) 64 65 70 84 85 86 87 88 89 112 136 137
';' (59) 3 4 9 14 18 32 64 65 70 84 85 86 87 88 89 108 109 112 126
    127 135 139 149 150 151 152 153 154 160 179
'<' (60) 212
'=' (61) 32 33 70 84 86 88 149
'>' (62) 213
'@' (64) 210
'[' (91) 55 72 73 74 75 181
']' (93) 55 72 73 74 75 181
'^' (94) 208
'{' (123) 10 11 62 63 93 94 95 96
'|' (124) 165
'}' (125) 10 11 62 63 93 94 95 96
error (256) 4 9 11 25 50 63 75 88 89
ABSTRACTO (258) 117
AND (259) 221
ASOCIATIVA (260) 60
BOOLEANO (261) 45
CABECERA (262) 15
CADENA (263) 47
CASO (264) 160
CARACTER (265) 46
CARGA (266) 18
CLASE (267) 93 94 95 96
CONJUNTO (268) 61
CONSTANTE (269) 67 111
CUERPO (270) 16
CTC_BOOLEANA (271) 187
CTC_CADENA (272) 78 79 185
CTC_CARACTER (273) 186
CTC_ENTERA (274) 183
CTC_REAL (275) 184
CONSTRUCTOR (276) 130
CUANDO (277) 177 178
CUATRO_PTOS (278) 7
DESCENDENTE (279) 171
DESPD (280) 204
DESPI (281) 203
DESTRUCTOR (282) 131
DE (283) 53 60 61
DEVOLVER (284) 152 153
DOS_PTOS (285) 58 59
EJECUTA (286) 177 178
ELEMENTO (287) 171 172
EN (288) 22 160 170 171 172
ENTERO (289) 43
ENTONCES (290) 158 159
EQ (291) 216
ESPECIFICO (292) 118
EXCEPTO (293) 175 176
FICHERO (294) 48
FINAL (295) 93 94 119
FINALMENTE (296) 175
FLECHA_DOBLE (297) 78 79 80 81 128 161 162
FUNCION (298) 128
GEQ (299) 215
GENERICO (300) 116
HASTA (301) 174
IDENTIFICADOR (302) 5 7 182
INTERFAZ (303) 90
LANZAR (304) 179
LEQ (305) 214
LISTA (306) 53 60
MIENTRAS (307) 173
MODIFICABLE (308) 136
NEQ (309) 217
OTRO (310) 168
OR (311) 223
PAQUETE (312) 14
PARA (313) 170
PATH (314) 22
POTENCIA (315) 194
PRIVADO (316) 102
PROBAR (317) 175 176
PROCEDIMIENTO (318) 129
PROGRAMA (319) 3
PUBLICO (320) 97
REAL (321) 44
REGISTRO (322) 62
REPITE (323) 171 172 174
SEA (324) 160
SALIR (325) 150 151
SEMIPUBLICO (326) 100
SI (327) 150 158 159
SINO (328) 158
TIPO (329) 29 110
VARIABLE (330) 83


No terminales con las reglas donde aparecen

$accept (99)
    en la izquierda: 0
programa (100)
    en la izquierda: 1 2, en la derecha: 0
definicion_programa (101)
    en la izquierda: 3 4, en la derecha: 1
nombre (102)
    en la izquierda: 5, en la derecha: 3 14 19 20 26 27 32 33 34 70
    80 81 128 129 130 131 155 170 171 172 177 178 179 180
id_op (103)
    en la izquierda: 6 7, en la derecha: 5 7
bloque_programa (104)
    en la izquierda: 8 9, en la derecha: 3
bloque_instrucciones (105)
    en la izquierda: 10 11, en la derecha: 8 138 158 159 161 162 169
    175 176 177 178
instruccion_unoomas (106)
    en la izquierda: 12 13, en la derecha: 10 12
definicion_paquete (107)
    en la izquierda: 14, en la derecha: 2
seccion_cabecera (108)
    en la izquierda: 15, en la derecha: 14
seccion_cuerpo (109)
    en la izquierda: 16, en la derecha: 14
declaracion_cargas (110)
    en la izquierda: 17 18, en la derecha: 8 15
declaracion_carga (111)
    en la izquierda: 19 20, en la derecha: 18 20
en_path_op (112)
    en la izquierda: 21 22, en la derecha: 19 20
nombres_op (113)
    en la izquierda: 23 24 25, en la derecha: 19 20
nombres_comas (114)
    en la izquierda: 26 27, en la derecha: 24 26 64 65 84 85 86 87
    88 89 94 95 112 136 137
declaracion_tipos (115)
    en la izquierda: 28 29, en la derecha: 8 15 16 138
declaracion_tipo_unoomas (116)
    en la izquierda: 30 31, en la derecha: 29 30
declaracion_tipo (117)
    en la izquierda: 32 33, en la derecha: 30 31 110
tipo_no_estructurado_o_nombre_tipo (118)
    en la izquierda: 34 35 36 37 38 39 40, en la derecha: 32 53 60
    61 64 65 70 84 85 86 87 112 128 136 137
tipo_estructurado (119)
    en la izquierda: 41 42, en la derecha: 33
tipo_escalar (120)
    en la izquierda: 43 44 45 46 47, en la derecha: 35
tipo_fichero (121)
    en la izquierda: 48, en la derecha: 36
tipo_enumerado (122)
    en la izquierda: 49 50, en la derecha: 37
expresion_constante_unoomas (123)
    en la izquierda: 51 52, en la derecha: 49 52
tipo_lista (124)
    en la izquierda: 53, en la derecha: 38
rango_lista_op (125)
    en la izquierda: 54 55, en la derecha: 53
rango_lista (126)
    en la izquierda: 56 57, en la derecha: 55 56
rango (127)
    en la izquierda: 58 59, en la derecha: 56 57 167 171 172
tipo_lista_asociativa (128)
    en la izquierda: 60, en la derecha: 39
tipo_conjunto (129)
    en la izquierda: 61, en la derecha: 40
tipo_registro (130)
    en la izquierda: 62 63, en la derecha: 41
declaracion_campo (131)
    en la izquierda: 64 65, en la derecha: 62 64
declaracion_constantes (132)
    en la izquierda: 66 67, en la derecha: 8 15 16 138
declaracion_constante_unoomas (133)
    en la izquierda: 68 69, en la derecha: 67 68
declaracion_constante (134)
    en la izquierda: 70, en la derecha: 68 69 111
valor_constante (135)
    en la izquierda: 71 72 73 74 75, en la derecha: 70 76 77 78 79
    80 81 84 86 88
valor_constante_comas (136)
    en la izquierda: 76 77, en la derecha: 72 76
clave_valor (137)
    en la izquierda: 78 79, en la derecha: 73 78
campo_valor (138)
    en la izquierda: 80 81, en la derecha: 74 80
declaracion_variables (139)
    en la izquierda: 82 83, en la derecha: 8 15 16 138
declaracion_variable (140)
    en la izquierda: 84 85 86 87 88 89, en la derecha: 83 84 85
declaracion_interfaces (141)
    en la izquierda: 90, en la derecha: 15
declaracion_clase (142)
    en la izquierda: 91 92, en la derecha: 42
declaracion_clase_mod (143)
    en la izquierda: 93 94, en la derecha: 91
declaracion_clase_nomod (144)
    en la izquierda: 95 96, en la derecha: 92
declaraciones_publicas (145)
    en la izquierda: 97 98, en la derecha: 93 94 95 96
declaraciones_semi (146)
    en la izquierda: 99 100, en la derecha: 93 94 95 96
declaraciones_privadas (147)
    en la izquierda: 101 102, en la derecha: 93 94 95 96
declaracion_componente_unoomas (148)
    en la izquierda: 103 104, en la derecha: 97 98 100 102 104
declaracion_componente (149)
    en la izquierda: 105 106 107 108 109, en la derecha: 103 104
declaracion_tipo_anidado (150)
    en la izquierda: 110, en la derecha: 105
declaracion_constante_anidada (151)
    en la izquierda: 111, en la derecha: 106
declaracion_atributos (152)
    en la izquierda: 112, en la derecha: 107
modificadores (153)
    en la izquierda: 113, en la derecha: 108
modificador_comas (154)
    en la izquierda: 114 115, en la derecha: 113 114
modificador (155)
    en la izquierda: 116 117 118 119, en la derecha: 114 115
declaracion_subprograma (156)
    en la izquierda: 120 121, en la derecha: 16 120
cabecera_subprograma (157)
    en la izquierda: 122 123 124 125, en la derecha: 108 109 120 121
    126 127
cabecera_subprograma_unoomas_ptocoma (158)
    en la izquierda: 126 127, en la derecha: 90 126
cabecera_funcion (159)
    en la izquierda: 128, en la derecha: 122
cabecera_procedimiento (160)
    en la izquierda: 129, en la derecha: 123
cabecera_constructor (161)
    en la izquierda: 130, en la derecha: 124
cabecera_destructor (162)
    en la izquierda: 131, en la derecha: 125
declaracion_parametros (163)
    en la izquierda: 132 133, en la derecha: 128 129 130
lista_parametros_formales (164)
    en la izquierda: 134 135, en la derecha: 133 135
parametros_formales (165)
    en la izquierda: 136 137, en la derecha: 134 135
bloque_subprograma (166)
    en la izquierda: 138, en la derecha: 120 121
instruccion (167)
    en la izquierda: 139 140 141 142 143 144 145 146 147 148, en la derecha:
    12 13
instruccion_asignacion (168)
    en la izquierda: 149, en la derecha: 140
instruccion_salir (169)
    en la izquierda: 150 151, en la derecha: 141
instruccion_devolver (170)
    en la izquierda: 152 153, en la derecha: 142
instruccion_llamada (171)
    en la izquierda: 154, en la derecha: 143
llamada_subprograma (172)
    en la izquierda: 155, en la derecha: 154 190
expresion_comas (173)
    en la izquierda: 156 157, en la derecha: 155 156 181
instruccion_si (174)
    en la izquierda: 158 159, en la derecha: 144
instruccion_casos (175)
    en la izquierda: 160, en la derecha: 145
caso (176)
    en la izquierda: 161 162, en la derecha: 160 161
entradas (177)
    en la izquierda: 163, en la derecha: 161 162
entrada_op (178)
    en la izquierda: 164 165, en la derecha: 163 165
entrada (179)
    en la izquierda: 166 167 168, en la derecha: 163 165
instruccion_bucle (180)
    en la izquierda: 169, en la derecha: 146
clausula_iteracion (181)
    en la izquierda: 170 171 172 173 174, en la derecha: 169
instruccion_probar_excepto (182)
    en la izquierda: 175 176, en la derecha: 147
clausula_excepcion (183)
    en la izquierda: 177 178, en la derecha: 175 176 177
instruccion_lanzar (184)
    en la izquierda: 179, en la derecha: 148
objeto (185)
    en la izquierda: 180 181 182, en la derecha: 149 170 181 182 189
expresion_constante (186)
    en la izquierda: 183 184 185 186 187, en la derecha: 51 52 188
expresion_primaria (187)
    en la izquierda: 188 189 190 191, en la derecha: 192 193
expresion_unitaria (188)
    en la izquierda: 192 193, en la derecha: 194 195
expresion_potencia (189)
    en la izquierda: 194 195, en la derecha: 194 196 197 198 199
expresion_prod (190)
    en la izquierda: 196 197 198 199, en la derecha: 196 197 198 200
    201 202
expresion_sum (191)
    en la izquierda: 200 201 202, en la derecha: 200 201 203 204 205
expresion_desplz (192)
    en la izquierda: 203 204 205, en la derecha: 203 204 206 207 210
expresion_and_bin (193)
    en la izquierda: 206 207, en la derecha: 206 208 209
expresion_or_bin (194)
    en la izquierda: 208 209, en la derecha: 208 211
expresion_xor_bin (195)
    en la izquierda: 210 211, en la derecha: 210 212 213 214 215 216
    217 218
expresion_comparar (196)
    en la izquierda: 212 213 214 215 216 217 218, en la derecha: 212
    213 214 215 216 217 220
expresion_negacion (197)
    en la izquierda: 219 220, en la derecha: 219 221 222
expresion_and_logico (198)
    en la izquierda: 221 222, en la derecha: 221 223 224
expresion_or_logico (199)
    en la izquierda: 223 224, en la derecha: 223 225
expresion (200)
    en la izquierda: 225, en la derecha: 58 59 71 149 150 152 156 157
    158 159 160 166 173 174 191


estado 0

    0 $accept: . programa $end

    error     desplazar e ir al estado 1
    PAQUETE   desplazar e ir al estado 2
    PROGRAMA  desplazar e ir al estado 3

    programa             ir al estado 4
    definicion_programa  ir al estado 5
    definicion_paquete   ir al estado 6


estado 1

    4 definicion_programa: error . ';'

    ';'  desplazar e ir al estado 7


estado 2

   14 definicion_paquete: PAQUETE . nombre ';' seccion_cabecera seccion_cuerpo

    $default  reduce usando la regla 6 (id_op)

    nombre  ir al estado 8
    id_op   ir al estado 9


estado 3

    3 definicion_programa: PROGRAMA . nombre ';' bloque_programa

    $default  reduce usando la regla 6 (id_op)

    nombre  ir al estado 10
    id_op   ir al estado 9


estado 4

    0 $accept: programa . $end

    $end  desplazar e ir al estado 11


estado 5

    1 programa: definicion_programa .

    $default  reduce usando la regla 1 (programa)


estado 6

    2 programa: definicion_paquete .

    $default  reduce usando la regla 2 (programa)


estado 7

    4 definicion_programa: error ';' .

    $default  reduce usando la regla 4 (definicion_programa)


estado 8

   14 definicion_paquete: PAQUETE nombre . ';' seccion_cabecera seccion_cuerpo

    ';'  desplazar e ir al estado 12


estado 9

    5 nombre: id_op . IDENTIFICADOR
    7 id_op: id_op . IDENTIFICADOR CUATRO_PTOS

    IDENTIFICADOR  desplazar e ir al estado 13


estado 10

    3 definicion_programa: PROGRAMA nombre . ';' bloque_programa

    ';'  desplazar e ir al estado 14


estado 11

    0 $accept: programa $end .

    $default  aceptar


estado 12

   14 definicion_paquete: PAQUETE nombre ';' . seccion_cabecera seccion_cuerpo

    CABECERA  desplazar e ir al estado 15

    seccion_cabecera  ir al estado 16


estado 13

    5 nombre: id_op IDENTIFICADOR .
    7 id_op: id_op IDENTIFICADOR . CUATRO_PTOS

    CUATRO_PTOS  desplazar e ir al estado 17

    $default  reduce usando la regla 5 (nombre)


estado 14

    3 definicion_programa: PROGRAMA nombre ';' . bloque_programa

    error  desplazar e ir al estado 18
    CARGA  desplazar e ir al estado 19

    CONSTANTE  reduce usando la regla 17 (declaracion_cargas)
    TIPO       reduce usando la regla 17 (declaracion_cargas)
    VARIABLE   reduce usando la regla 17 (declaracion_cargas)
    '{'        reduce usando la regla 17 (declaracion_cargas)

    bloque_programa     ir al estado 20
    declaracion_cargas  ir al estado 21


estado 15

   15 seccion_cabecera: CABECERA . declaracion_cargas declaracion_tipos declaracion_constantes declaracion_variables declaracion_interfaces

    CARGA  desplazar e ir al estado 19

    $default  reduce usando la regla 17 (declaracion_cargas)

    declaracion_cargas  ir al estado 22


estado 16

   14 definicion_paquete: PAQUETE nombre ';' seccion_cabecera . seccion_cuerpo

    CUERPO  desplazar e ir al estado 23

    seccion_cuerpo  ir al estado 24


estado 17

    7 id_op: id_op IDENTIFICADOR CUATRO_PTOS .

    $default  reduce usando la regla 7 (id_op)


estado 18

    9 bloque_programa: error . ';'

    ';'  desplazar e ir al estado 25


estado 19

   18 declaracion_cargas: CARGA . declaracion_carga ';'

    $default  reduce usando la regla 6 (id_op)

    nombre             ir al estado 26
    id_op              ir al estado 9
    declaracion_carga  ir al estado 27


estado 20

    3 definicion_programa: PROGRAMA nombre ';' bloque_programa .

    $default  reduce usando la regla 3 (definicion_programa)


estado 21

    8 bloque_programa: declaracion_cargas . declaracion_tipos declaracion_constantes declaracion_variables bloque_instrucciones

    TIPO  desplazar e ir al estado 28

    $default  reduce usando la regla 28 (declaracion_tipos)

    declaracion_tipos  ir al estado 29


estado 22

   15 seccion_cabecera: CABECERA declaracion_cargas . declaracion_tipos declaracion_constantes declaracion_variables declaracion_interfaces

    TIPO  desplazar e ir al estado 28

    $default  reduce usando la regla 28 (declaracion_tipos)

    declaracion_tipos  ir al estado 30


estado 23

   16 seccion_cuerpo: CUERPO . declaracion_tipos declaracion_constantes declaracion_variables declaracion_subprograma

    TIPO  desplazar e ir al estado 28

    $default  reduce usando la regla 28 (declaracion_tipos)

    declaracion_tipos  ir al estado 31


estado 24

   14 definicion_paquete: PAQUETE nombre ';' seccion_cabecera seccion_cuerpo .

    $default  reduce usando la regla 14 (definicion_paquete)


estado 25

    9 bloque_programa: error ';' .

    $default  reduce usando la regla 9 (bloque_programa)


estado 26

   19 declaracion_carga: nombre . en_path_op nombres_op

    EN  desplazar e ir al estado 32

    $default  reduce usando la regla 21 (en_path_op)

    en_path_op  ir al estado 33


estado 27

   18 declaracion_cargas: CARGA declaracion_carga . ';'
   20 declaracion_carga: declaracion_carga . ',' nombre en_path_op nombres_op

    ';'  desplazar e ir al estado 34
    ','  desplazar e ir al estado 35


estado 28

   29 declaracion_tipos: TIPO . declaracion_tipo_unoomas

    $default  reduce usando la regla 6 (id_op)

    nombre                    ir al estado 36
    id_op                     ir al estado 9
    declaracion_tipo_unoomas  ir al estado 37
    declaracion_tipo          ir al estado 38


estado 29

    8 bloque_programa: declaracion_cargas declaracion_tipos . declaracion_constantes declaracion_variables bloque_instrucciones

    CONSTANTE  desplazar e ir al estado 39

    $default  reduce usando la regla 66 (declaracion_constantes)

    declaracion_constantes  ir al estado 40


estado 30

   15 seccion_cabecera: CABECERA declaracion_cargas declaracion_tipos . declaracion_constantes declaracion_variables declaracion_interfaces

    CONSTANTE  desplazar e ir al estado 39

    $default  reduce usando la regla 66 (declaracion_constantes)

    declaracion_constantes  ir al estado 41


estado 31

   16 seccion_cuerpo: CUERPO declaracion_tipos . declaracion_constantes declaracion_variables declaracion_subprograma

    CONSTANTE  desplazar e ir al estado 39

    $default  reduce usando la regla 66 (declaracion_constantes)

    declaracion_constantes  ir al estado 42


estado 32

   22 en_path_op: EN . PATH

    PATH  desplazar e ir al estado 43


estado 33

   19 declaracion_carga: nombre en_path_op . nombres_op

    '('  desplazar e ir al estado 44

    $default  reduce usando la regla 23 (nombres_op)

    nombres_op  ir al estado 45


estado 34

   18 declaracion_cargas: CARGA declaracion_carga ';' .

    $default  reduce usando la regla 18 (declaracion_cargas)


estado 35

   20 declaracion_carga: declaracion_carga ',' . nombre en_path_op nombres_op

    $default  reduce usando la regla 6 (id_op)

    nombre  ir al estado 46
    id_op   ir al estado 9


estado 36

   32 declaracion_tipo: nombre . '=' tipo_no_estructurado_o_nombre_tipo ';'
   33                 | nombre . '=' tipo_estructurado

    '='  desplazar e ir al estado 47


estado 37

   29 declaracion_tipos: TIPO declaracion_tipo_unoomas .
   30 declaracion_tipo_unoomas: declaracion_tipo_unoomas . declaracion_tipo

    IDENTIFICADOR  reduce usando la regla 6 (id_op)
    $default       reduce usando la regla 29 (declaracion_tipos)

    nombre            ir al estado 36
    id_op             ir al estado 9
    declaracion_tipo  ir al estado 48


estado 38

   31 declaracion_tipo_unoomas: declaracion_tipo .

    $default  reduce usando la regla 31 (declaracion_tipo_unoomas)


estado 39

   67 declaracion_constantes: CONSTANTE . declaracion_constante_unoomas

    $default  reduce usando la regla 6 (id_op)

    nombre                         ir al estado 49
    id_op                          ir al estado 9
    declaracion_constante_unoomas  ir al estado 50
    declaracion_constante          ir al estado 51


estado 40

    8 bloque_programa: declaracion_cargas declaracion_tipos declaracion_constantes . declaracion_variables bloque_instrucciones

    VARIABLE  desplazar e ir al estado 52

    $default  reduce usando la regla 82 (declaracion_variables)

    declaracion_variables  ir al estado 53


estado 41

   15 seccion_cabecera: CABECERA declaracion_cargas declaracion_tipos declaracion_constantes . declaracion_variables declaracion_interfaces

    VARIABLE  desplazar e ir al estado 52

    $default  reduce usando la regla 82 (declaracion_variables)

    declaracion_variables  ir al estado 54


estado 42

   16 seccion_cuerpo: CUERPO declaracion_tipos declaracion_constantes . declaracion_variables declaracion_subprograma

    VARIABLE  desplazar e ir al estado 52

    $default  reduce usando la regla 82 (declaracion_variables)

    declaracion_variables  ir al estado 55


estado 43

   22 en_path_op: EN PATH .

    $default  reduce usando la regla 22 (en_path_op)


estado 44

   24 nombres_op: '(' . nombres_comas ')'
   25           | '(' . error ')'

    error  desplazar e ir al estado 56

    IDENTIFICADOR  reduce usando la regla 6 (id_op)

    nombre         ir al estado 57
    id_op          ir al estado 9
    nombres_comas  ir al estado 58


estado 45

   19 declaracion_carga: nombre en_path_op nombres_op .

    $default  reduce usando la regla 19 (declaracion_carga)


estado 46

   20 declaracion_carga: declaracion_carga ',' nombre . en_path_op nombres_op

    EN  desplazar e ir al estado 32

    $default  reduce usando la regla 21 (en_path_op)

    en_path_op  ir al estado 59


estado 47

   32 declaracion_tipo: nombre '=' . tipo_no_estructurado_o_nombre_tipo ';'
   33                 | nombre '=' . tipo_estructurado

    BOOLEANO  desplazar e ir al estado 60
    CADENA    desplazar e ir al estado 61
    CARACTER  desplazar e ir al estado 62
    CLASE     desplazar e ir al estado 63
    CONJUNTO  desplazar e ir al estado 64
    ENTERO    desplazar e ir al estado 65
    FICHERO   desplazar e ir al estado 66
    LISTA     desplazar e ir al estado 67
    REAL      desplazar e ir al estado 68
    REGISTRO  desplazar e ir al estado 69
    '{'       desplazar e ir al estado 70
    '('       desplazar e ir al estado 71

    $default  reduce usando la regla 6 (id_op)

    nombre                              ir al estado 72
    id_op                               ir al estado 9
    tipo_no_estructurado_o_nombre_tipo  ir al estado 73
    tipo_estructurado                   ir al estado 74
    tipo_escalar                        ir al estado 75
    tipo_fichero                        ir al estado 76
    tipo_enumerado                      ir al estado 77
    tipo_lista                          ir al estado 78
    tipo_lista_asociativa               ir al estado 79
    tipo_conjunto                       ir al estado 80
    tipo_registro                       ir al estado 81
    declaracion_clase                   ir al estado 82
    declaracion_clase_mod               ir al estado 83
    declaracion_clase_nomod             ir al estado 84


estado 48

   30 declaracion_tipo_unoomas: declaracion_tipo_unoomas declaracion_tipo .

    $default  reduce usando la regla 30 (declaracion_tipo_unoomas)


estado 49

   70 declaracion_constante: nombre . ':' tipo_no_estructurado_o_nombre_tipo '=' valor_constante ';'

    ':'  desplazar e ir al estado 85


estado 50

   67 declaracion_constantes: CONSTANTE declaracion_constante_unoomas .
   68 declaracion_constante_unoomas: declaracion_constante_unoomas . declaracion_constante

    IDENTIFICADOR  reduce usando la regla 6 (id_op)
    $default       reduce usando la regla 67 (declaracion_constantes)

    nombre                 ir al estado 49
    id_op                  ir al estado 9
    declaracion_constante  ir al estado 86


estado 51

   69 declaracion_constante_unoomas: declaracion_constante .

    $default  reduce usando la regla 69 (declaracion_constante_unoomas)


estado 52

   83 declaracion_variables: VARIABLE . declaracion_variable

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 57
    id_op                 ir al estado 9
    nombres_comas         ir al estado 87
    declaracion_variable  ir al estado 88


estado 53

    8 bloque_programa: declaracion_cargas declaracion_tipos declaracion_constantes declaracion_variables . bloque_instrucciones

    '{'  desplazar e ir al estado 89

    bloque_instrucciones  ir al estado 90


estado 54

   15 seccion_cabecera: CABECERA declaracion_cargas declaracion_tipos declaracion_constantes declaracion_variables . declaracion_interfaces

    INTERFAZ  desplazar e ir al estado 91

    declaracion_interfaces  ir al estado 92


estado 55

   16 seccion_cuerpo: CUERPO declaracion_tipos declaracion_constantes declaracion_variables . declaracion_subprograma

    CONSTRUCTOR    desplazar e ir al estado 93
    DESTRUCTOR     desplazar e ir al estado 94
    FUNCION        desplazar e ir al estado 95
    PROCEDIMIENTO  desplazar e ir al estado 96

    declaracion_subprograma  ir al estado 97
    cabecera_subprograma     ir al estado 98
    cabecera_funcion         ir al estado 99
    cabecera_procedimiento   ir al estado 100
    cabecera_constructor     ir al estado 101
    cabecera_destructor      ir al estado 102


estado 56

   25 nombres_op: '(' error . ')'

    ')'  desplazar e ir al estado 103


estado 57

   27 nombres_comas: nombre .

    $default  reduce usando la regla 27 (nombres_comas)


estado 58

   24 nombres_op: '(' nombres_comas . ')'
   26 nombres_comas: nombres_comas . ',' nombre

    ','  desplazar e ir al estado 104
    ')'  desplazar e ir al estado 105


estado 59

   20 declaracion_carga: declaracion_carga ',' nombre en_path_op . nombres_op

    '('  desplazar e ir al estado 44

    $default  reduce usando la regla 23 (nombres_op)

    nombres_op  ir al estado 106


estado 60

   45 tipo_escalar: BOOLEANO .

    $default  reduce usando la regla 45 (tipo_escalar)


estado 61

   47 tipo_escalar: CADENA .

    $default  reduce usando la regla 47 (tipo_escalar)


estado 62

   46 tipo_escalar: CARACTER .

    $default  reduce usando la regla 46 (tipo_escalar)


estado 63

   93 declaracion_clase_mod: CLASE . FINAL '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'
   94                      | CLASE . FINAL '(' nombres_comas ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'
   95 declaracion_clase_nomod: CLASE . '(' nombres_comas ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'
   96                        | CLASE . '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    FINAL  desplazar e ir al estado 107
    '{'    desplazar e ir al estado 108
    '('    desplazar e ir al estado 109


estado 64

   61 tipo_conjunto: CONJUNTO . DE tipo_no_estructurado_o_nombre_tipo

    DE  desplazar e ir al estado 110


estado 65

   43 tipo_escalar: ENTERO .

    $default  reduce usando la regla 43 (tipo_escalar)


estado 66

   48 tipo_fichero: FICHERO .

    $default  reduce usando la regla 48 (tipo_fichero)


estado 67

   53 tipo_lista: LISTA . rango_lista_op DE tipo_no_estructurado_o_nombre_tipo
   60 tipo_lista_asociativa: LISTA . ASOCIATIVA DE tipo_no_estructurado_o_nombre_tipo

    ASOCIATIVA  desplazar e ir al estado 111
    '['         desplazar e ir al estado 112

    $default  reduce usando la regla 54 (rango_lista_op)

    rango_lista_op  ir al estado 113


estado 68

   44 tipo_escalar: REAL .

    $default  reduce usando la regla 44 (tipo_escalar)


estado 69

   62 tipo_registro: REGISTRO . '{' declaracion_campo '}'

    '{'  desplazar e ir al estado 114


estado 70

   63 tipo_registro: '{' . error '}'

    error  desplazar e ir al estado 115


estado 71

   49 tipo_enumerado: '(' . expresion_constante_unoomas ')'
   50               | '(' . error ')'

    error         desplazar e ir al estado 116
    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121

    expresion_constante_unoomas  ir al estado 122
    expresion_constante          ir al estado 123


estado 72

   34 tipo_no_estructurado_o_nombre_tipo: nombre .

    $default  reduce usando la regla 34 (tipo_no_estructurado_o_nombre_tipo)


estado 73

   32 declaracion_tipo: nombre '=' tipo_no_estructurado_o_nombre_tipo . ';'

    ';'  desplazar e ir al estado 124


estado 74

   33 declaracion_tipo: nombre '=' tipo_estructurado .

    $default  reduce usando la regla 33 (declaracion_tipo)


estado 75

   35 tipo_no_estructurado_o_nombre_tipo: tipo_escalar .

    $default  reduce usando la regla 35 (tipo_no_estructurado_o_nombre_tipo)


estado 76

   36 tipo_no_estructurado_o_nombre_tipo: tipo_fichero .

    $default  reduce usando la regla 36 (tipo_no_estructurado_o_nombre_tipo)


estado 77

   37 tipo_no_estructurado_o_nombre_tipo: tipo_enumerado .

    $default  reduce usando la regla 37 (tipo_no_estructurado_o_nombre_tipo)


estado 78

   38 tipo_no_estructurado_o_nombre_tipo: tipo_lista .

    $default  reduce usando la regla 38 (tipo_no_estructurado_o_nombre_tipo)


estado 79

   39 tipo_no_estructurado_o_nombre_tipo: tipo_lista_asociativa .

    $default  reduce usando la regla 39 (tipo_no_estructurado_o_nombre_tipo)


estado 80

   40 tipo_no_estructurado_o_nombre_tipo: tipo_conjunto .

    $default  reduce usando la regla 40 (tipo_no_estructurado_o_nombre_tipo)


estado 81

   41 tipo_estructurado: tipo_registro .

    $default  reduce usando la regla 41 (tipo_estructurado)


estado 82

   42 tipo_estructurado: declaracion_clase .

    $default  reduce usando la regla 42 (tipo_estructurado)


estado 83

   91 declaracion_clase: declaracion_clase_mod .

    $default  reduce usando la regla 91 (declaracion_clase)


estado 84

   92 declaracion_clase: declaracion_clase_nomod .

    $default  reduce usando la regla 92 (declaracion_clase)


estado 85

   70 declaracion_constante: nombre ':' . tipo_no_estructurado_o_nombre_tipo '=' valor_constante ';'

    BOOLEANO  desplazar e ir al estado 60
    CADENA    desplazar e ir al estado 61
    CARACTER  desplazar e ir al estado 62
    CONJUNTO  desplazar e ir al estado 64
    ENTERO    desplazar e ir al estado 65
    FICHERO   desplazar e ir al estado 66
    LISTA     desplazar e ir al estado 67
    REAL      desplazar e ir al estado 68
    '('       desplazar e ir al estado 71

    $default  reduce usando la regla 6 (id_op)

    nombre                              ir al estado 72
    id_op                               ir al estado 9
    tipo_no_estructurado_o_nombre_tipo  ir al estado 125
    tipo_escalar                        ir al estado 75
    tipo_fichero                        ir al estado 76
    tipo_enumerado                      ir al estado 77
    tipo_lista                          ir al estado 78
    tipo_lista_asociativa               ir al estado 79
    tipo_conjunto                       ir al estado 80


estado 86

   68 declaracion_constante_unoomas: declaracion_constante_unoomas declaracion_constante .

    $default  reduce usando la regla 68 (declaracion_constante_unoomas)


estado 87

   26 nombres_comas: nombres_comas . ',' nombre
   86 declaracion_variable: nombres_comas . ':' tipo_no_estructurado_o_nombre_tipo '=' valor_constante ';'
   87                     | nombres_comas . ':' tipo_no_estructurado_o_nombre_tipo ';'
   88                     | nombres_comas . ':' error '=' valor_constante ';'
   89                     | nombres_comas . ':' error ';'

    ','  desplazar e ir al estado 104
    ':'  desplazar e ir al estado 126


estado 88

   83 declaracion_variables: VARIABLE declaracion_variable .
   84 declaracion_variable: declaracion_variable . nombres_comas ':' tipo_no_estructurado_o_nombre_tipo '=' valor_constante ';'
   85                     | declaracion_variable . nombres_comas ':' tipo_no_estructurado_o_nombre_tipo ';'

    IDENTIFICADOR  reduce usando la regla 6 (id_op)
    $default       reduce usando la regla 83 (declaracion_variables)

    nombre         ir al estado 57
    id_op          ir al estado 9
    nombres_comas  ir al estado 127


estado 89

   10 bloque_instrucciones: '{' . instruccion_unoomas '}'
   11                     | '{' . error '}'

    error     desplazar e ir al estado 128
    DEVOLVER  desplazar e ir al estado 129
    EN        desplazar e ir al estado 130
    LANZAR    desplazar e ir al estado 131
    MIENTRAS  desplazar e ir al estado 132
    PARA      desplazar e ir al estado 133
    PROBAR    desplazar e ir al estado 134
    REPITE    desplazar e ir al estado 135
    SALIR     desplazar e ir al estado 136
    SI        desplazar e ir al estado 137
    ';'       desplazar e ir al estado 138

    IDENTIFICADOR  reduce usando la regla 6 (id_op)

    nombre                      ir al estado 139
    id_op                       ir al estado 9
    instruccion_unoomas         ir al estado 140
    instruccion                 ir al estado 141
    instruccion_asignacion      ir al estado 142
    instruccion_salir           ir al estado 143
    instruccion_devolver        ir al estado 144
    instruccion_llamada         ir al estado 145
    llamada_subprograma         ir al estado 146
    instruccion_si              ir al estado 147
    instruccion_casos           ir al estado 148
    instruccion_bucle           ir al estado 149
    clausula_iteracion          ir al estado 150
    instruccion_probar_excepto  ir al estado 151
    instruccion_lanzar          ir al estado 152
    objeto                      ir al estado 153


estado 90

    8 bloque_programa: declaracion_cargas declaracion_tipos declaracion_constantes declaracion_variables bloque_instrucciones .

    $default  reduce usando la regla 8 (bloque_programa)


estado 91

   90 declaracion_interfaces: INTERFAZ . cabecera_subprograma_unoomas_ptocoma

    CONSTRUCTOR    desplazar e ir al estado 93
    DESTRUCTOR     desplazar e ir al estado 94
    FUNCION        desplazar e ir al estado 95
    PROCEDIMIENTO  desplazar e ir al estado 96

    cabecera_subprograma                  ir al estado 154
    cabecera_subprograma_unoomas_ptocoma  ir al estado 155
    cabecera_funcion                      ir al estado 99
    cabecera_procedimiento                ir al estado 100
    cabecera_constructor                  ir al estado 101
    cabecera_destructor                   ir al estado 102


estado 92

   15 seccion_cabecera: CABECERA declaracion_cargas declaracion_tipos declaracion_constantes declaracion_variables declaracion_interfaces .

    $default  reduce usando la regla 15 (seccion_cabecera)


estado 93

  130 cabecera_constructor: CONSTRUCTOR . nombre declaracion_parametros

    $default  reduce usando la regla 6 (id_op)

    nombre  ir al estado 156
    id_op   ir al estado 9


estado 94

  131 cabecera_destructor: DESTRUCTOR . nombre

    $default  reduce usando la regla 6 (id_op)

    nombre  ir al estado 157
    id_op   ir al estado 9


estado 95

  128 cabecera_funcion: FUNCION . nombre declaracion_parametros FLECHA_DOBLE tipo_no_estructurado_o_nombre_tipo

    $default  reduce usando la regla 6 (id_op)

    nombre  ir al estado 158
    id_op   ir al estado 9


estado 96

  129 cabecera_procedimiento: PROCEDIMIENTO . nombre declaracion_parametros

    $default  reduce usando la regla 6 (id_op)

    nombre  ir al estado 159
    id_op   ir al estado 9


estado 97

   16 seccion_cuerpo: CUERPO declaracion_tipos declaracion_constantes declaracion_variables declaracion_subprograma .
  120 declaracion_subprograma: declaracion_subprograma . cabecera_subprograma bloque_subprograma

    CONSTRUCTOR    desplazar e ir al estado 93
    DESTRUCTOR     desplazar e ir al estado 94
    FUNCION        desplazar e ir al estado 95
    PROCEDIMIENTO  desplazar e ir al estado 96

    $default  reduce usando la regla 16 (seccion_cuerpo)

    cabecera_subprograma    ir al estado 160
    cabecera_funcion        ir al estado 99
    cabecera_procedimiento  ir al estado 100
    cabecera_constructor    ir al estado 101
    cabecera_destructor     ir al estado 102


estado 98

  121 declaracion_subprograma: cabecera_subprograma . bloque_subprograma

    TIPO  desplazar e ir al estado 28

    $default  reduce usando la regla 28 (declaracion_tipos)

    declaracion_tipos   ir al estado 161
    bloque_subprograma  ir al estado 162


estado 99

  122 cabecera_subprograma: cabecera_funcion .

    $default  reduce usando la regla 122 (cabecera_subprograma)


estado 100

  123 cabecera_subprograma: cabecera_procedimiento .

    $default  reduce usando la regla 123 (cabecera_subprograma)


estado 101

  124 cabecera_subprograma: cabecera_constructor .

    $default  reduce usando la regla 124 (cabecera_subprograma)


estado 102

  125 cabecera_subprograma: cabecera_destructor .

    $default  reduce usando la regla 125 (cabecera_subprograma)


estado 103

   25 nombres_op: '(' error ')' .

    $default  reduce usando la regla 25 (nombres_op)


estado 104

   26 nombres_comas: nombres_comas ',' . nombre

    $default  reduce usando la regla 6 (id_op)

    nombre  ir al estado 163
    id_op   ir al estado 9


estado 105

   24 nombres_op: '(' nombres_comas ')' .

    $default  reduce usando la regla 24 (nombres_op)


estado 106

   20 declaracion_carga: declaracion_carga ',' nombre en_path_op nombres_op .

    $default  reduce usando la regla 20 (declaracion_carga)


estado 107

   93 declaracion_clase_mod: CLASE FINAL . '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'
   94                      | CLASE FINAL . '(' nombres_comas ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    '{'  desplazar e ir al estado 164
    '('  desplazar e ir al estado 165


estado 108

   96 declaracion_clase_nomod: CLASE '{' . declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    CONSTANTE      desplazar e ir al estado 166
    CONSTRUCTOR    desplazar e ir al estado 93
    DESTRUCTOR     desplazar e ir al estado 94
    FUNCION        desplazar e ir al estado 95
    PROCEDIMIENTO  desplazar e ir al estado 96
    PUBLICO        desplazar e ir al estado 167
    TIPO           desplazar e ir al estado 168

    $default  reduce usando la regla 6 (id_op)

    nombre                          ir al estado 57
    id_op                           ir al estado 9
    nombres_comas                   ir al estado 169
    declaraciones_publicas          ir al estado 170
    declaracion_componente_unoomas  ir al estado 171
    declaracion_componente          ir al estado 172
    declaracion_tipo_anidado        ir al estado 173
    declaracion_constante_anidada   ir al estado 174
    declaracion_atributos           ir al estado 175
    cabecera_subprograma            ir al estado 176
    cabecera_funcion                ir al estado 99
    cabecera_procedimiento          ir al estado 100
    cabecera_constructor            ir al estado 101
    cabecera_destructor             ir al estado 102


estado 109

   95 declaracion_clase_nomod: CLASE '(' . nombres_comas ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    $default  reduce usando la regla 6 (id_op)

    nombre         ir al estado 57
    id_op          ir al estado 9
    nombres_comas  ir al estado 177


estado 110

   61 tipo_conjunto: CONJUNTO DE . tipo_no_estructurado_o_nombre_tipo

    BOOLEANO  desplazar e ir al estado 60
    CADENA    desplazar e ir al estado 61
    CARACTER  desplazar e ir al estado 62
    CONJUNTO  desplazar e ir al estado 64
    ENTERO    desplazar e ir al estado 65
    FICHERO   desplazar e ir al estado 66
    LISTA     desplazar e ir al estado 67
    REAL      desplazar e ir al estado 68
    '('       desplazar e ir al estado 71

    $default  reduce usando la regla 6 (id_op)

    nombre                              ir al estado 72
    id_op                               ir al estado 9
    tipo_no_estructurado_o_nombre_tipo  ir al estado 178
    tipo_escalar                        ir al estado 75
    tipo_fichero                        ir al estado 76
    tipo_enumerado                      ir al estado 77
    tipo_lista                          ir al estado 78
    tipo_lista_asociativa               ir al estado 79
    tipo_conjunto                       ir al estado 80


estado 111

   60 tipo_lista_asociativa: LISTA ASOCIATIVA . DE tipo_no_estructurado_o_nombre_tipo

    DE  desplazar e ir al estado 179


estado 112

   55 rango_lista_op: '[' . rango_lista ']'

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    rango_lista           ir al estado 183
    rango                 ir al estado 184
    llamada_subprograma   ir al estado 185
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 201


estado 113

   53 tipo_lista: LISTA rango_lista_op . DE tipo_no_estructurado_o_nombre_tipo

    DE  desplazar e ir al estado 202


estado 114

   62 tipo_registro: REGISTRO '{' . declaracion_campo '}'

    $default  reduce usando la regla 6 (id_op)

    nombre             ir al estado 57
    id_op              ir al estado 9
    nombres_comas      ir al estado 203
    declaracion_campo  ir al estado 204


estado 115

   63 tipo_registro: '{' error . '}'

    '}'  desplazar e ir al estado 205


estado 116

   50 tipo_enumerado: '(' error . ')'

    ')'  desplazar e ir al estado 206


estado 117

  187 expresion_constante: CTC_BOOLEANA .

    $default  reduce usando la regla 187 (expresion_constante)


estado 118

  185 expresion_constante: CTC_CADENA .

    $default  reduce usando la regla 185 (expresion_constante)


estado 119

  186 expresion_constante: CTC_CARACTER .

    $default  reduce usando la regla 186 (expresion_constante)


estado 120

  183 expresion_constante: CTC_ENTERA .

    $default  reduce usando la regla 183 (expresion_constante)


estado 121

  184 expresion_constante: CTC_REAL .

    $default  reduce usando la regla 184 (expresion_constante)


estado 122

   49 tipo_enumerado: '(' expresion_constante_unoomas . ')'
   52 expresion_constante_unoomas: expresion_constante_unoomas . ',' expresion_constante

    ','  desplazar e ir al estado 207
    ')'  desplazar e ir al estado 208


estado 123

   51 expresion_constante_unoomas: expresion_constante .

    $default  reduce usando la regla 51 (expresion_constante_unoomas)


estado 124

   32 declaracion_tipo: nombre '=' tipo_no_estructurado_o_nombre_tipo ';' .

    $default  reduce usando la regla 32 (declaracion_tipo)


estado 125

   70 declaracion_constante: nombre ':' tipo_no_estructurado_o_nombre_tipo . '=' valor_constante ';'

    '='  desplazar e ir al estado 209


estado 126

   86 declaracion_variable: nombres_comas ':' . tipo_no_estructurado_o_nombre_tipo '=' valor_constante ';'
   87                     | nombres_comas ':' . tipo_no_estructurado_o_nombre_tipo ';'
   88                     | nombres_comas ':' . error '=' valor_constante ';'
   89                     | nombres_comas ':' . error ';'

    error     desplazar e ir al estado 210
    BOOLEANO  desplazar e ir al estado 60
    CADENA    desplazar e ir al estado 61
    CARACTER  desplazar e ir al estado 62
    CONJUNTO  desplazar e ir al estado 64
    ENTERO    desplazar e ir al estado 65
    FICHERO   desplazar e ir al estado 66
    LISTA     desplazar e ir al estado 67
    REAL      desplazar e ir al estado 68
    '('       desplazar e ir al estado 71

    IDENTIFICADOR  reduce usando la regla 6 (id_op)

    nombre                              ir al estado 72
    id_op                               ir al estado 9
    tipo_no_estructurado_o_nombre_tipo  ir al estado 211
    tipo_escalar                        ir al estado 75
    tipo_fichero                        ir al estado 76
    tipo_enumerado                      ir al estado 77
    tipo_lista                          ir al estado 78
    tipo_lista_asociativa               ir al estado 79
    tipo_conjunto                       ir al estado 80


estado 127

   26 nombres_comas: nombres_comas . ',' nombre
   84 declaracion_variable: declaracion_variable nombres_comas . ':' tipo_no_estructurado_o_nombre_tipo '=' valor_constante ';'
   85                     | declaracion_variable nombres_comas . ':' tipo_no_estructurado_o_nombre_tipo ';'

    ','  desplazar e ir al estado 104
    ':'  desplazar e ir al estado 212


estado 128

   11 bloque_instrucciones: '{' error . '}'

    '}'  desplazar e ir al estado 213


estado 129

  152 instruccion_devolver: DEVOLVER . expresion ';'
  153                     | DEVOLVER . ';'

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    ';'           desplazar e ir al estado 214
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    llamada_subprograma   ir al estado 185
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 215


estado 130

  160 instruccion_casos: EN . CASO expresion SEA caso ';'

    CASO  desplazar e ir al estado 216


estado 131

  179 instruccion_lanzar: LANZAR . nombre ';'

    $default  reduce usando la regla 6 (id_op)

    nombre  ir al estado 217
    id_op   ir al estado 9


estado 132

  173 clausula_iteracion: MIENTRAS . expresion

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    llamada_subprograma   ir al estado 185
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 218


estado 133

  170 clausula_iteracion: PARA . nombre EN objeto

    $default  reduce usando la regla 6 (id_op)

    nombre  ir al estado 219
    id_op   ir al estado 9


estado 134

  175 instruccion_probar_excepto: PROBAR . bloque_instrucciones EXCEPTO clausula_excepcion FINALMENTE bloque_instrucciones
  176                           | PROBAR . bloque_instrucciones EXCEPTO clausula_excepcion

    '{'  desplazar e ir al estado 89

    bloque_instrucciones  ir al estado 220


estado 135

  171 clausula_iteracion: REPITE . ELEMENTO nombre EN rango DESCENDENTE
  172                   | REPITE . ELEMENTO nombre EN rango
  174                   | REPITE . HASTA expresion

    ELEMENTO  desplazar e ir al estado 221
    HASTA     desplazar e ir al estado 222


estado 136

  150 instruccion_salir: SALIR . SI expresion ';'
  151                  | SALIR . ';'

    SI   desplazar e ir al estado 223
    ';'  desplazar e ir al estado 224


estado 137

  158 instruccion_si: SI . expresion ENTONCES bloque_instrucciones SINO bloque_instrucciones
  159               | SI . expresion ENTONCES bloque_instrucciones

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    llamada_subprograma   ir al estado 185
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 225


estado 138

  139 instruccion: ';' .

    $default  reduce usando la regla 139 (instruccion)


estado 139

  155 llamada_subprograma: nombre . '(' expresion_comas ')' nombre '(' ')'
  180 objeto: nombre .

    '('  desplazar e ir al estado 226

    $default  reduce usando la regla 180 (objeto)


estado 140

   10 bloque_instrucciones: '{' instruccion_unoomas . '}'
   12 instruccion_unoomas: instruccion_unoomas . instruccion

    DEVOLVER  desplazar e ir al estado 129
    EN        desplazar e ir al estado 130
    LANZAR    desplazar e ir al estado 131
    MIENTRAS  desplazar e ir al estado 132
    PARA      desplazar e ir al estado 133
    PROBAR    desplazar e ir al estado 134
    REPITE    desplazar e ir al estado 135
    SALIR     desplazar e ir al estado 136
    SI        desplazar e ir al estado 137
    ';'       desplazar e ir al estado 138
    '}'       desplazar e ir al estado 227

    $default  reduce usando la regla 6 (id_op)

    nombre                      ir al estado 139
    id_op                       ir al estado 9
    instruccion                 ir al estado 228
    instruccion_asignacion      ir al estado 142
    instruccion_salir           ir al estado 143
    instruccion_devolver        ir al estado 144
    instruccion_llamada         ir al estado 145
    llamada_subprograma         ir al estado 146
    instruccion_si              ir al estado 147
    instruccion_casos           ir al estado 148
    instruccion_bucle           ir al estado 149
    clausula_iteracion          ir al estado 150
    instruccion_probar_excepto  ir al estado 151
    instruccion_lanzar          ir al estado 152
    objeto                      ir al estado 153


estado 141

   13 instruccion_unoomas: instruccion .

    $default  reduce usando la regla 13 (instruccion_unoomas)


estado 142

  140 instruccion: instruccion_asignacion .

    $default  reduce usando la regla 140 (instruccion)


estado 143

  141 instruccion: instruccion_salir .

    $default  reduce usando la regla 141 (instruccion)


estado 144

  142 instruccion: instruccion_devolver .

    $default  reduce usando la regla 142 (instruccion)


estado 145

  143 instruccion: instruccion_llamada .

    $default  reduce usando la regla 143 (instruccion)


estado 146

  154 instruccion_llamada: llamada_subprograma . ';'

    ';'  desplazar e ir al estado 229


estado 147

  144 instruccion: instruccion_si .

    $default  reduce usando la regla 144 (instruccion)


estado 148

  145 instruccion: instruccion_casos .

    $default  reduce usando la regla 145 (instruccion)


estado 149

  146 instruccion: instruccion_bucle .

    $default  reduce usando la regla 146 (instruccion)


estado 150

  169 instruccion_bucle: clausula_iteracion . bloque_instrucciones

    '{'  desplazar e ir al estado 89

    bloque_instrucciones  ir al estado 230


estado 151

  147 instruccion: instruccion_probar_excepto .

    $default  reduce usando la regla 147 (instruccion)


estado 152

  148 instruccion: instruccion_lanzar .

    $default  reduce usando la regla 148 (instruccion)


estado 153

  149 instruccion_asignacion: objeto . '=' expresion ';'
  181 objeto: objeto . '[' expresion_comas ']'
  182       | objeto . '.' IDENTIFICADOR

    '='  desplazar e ir al estado 231
    '['  desplazar e ir al estado 232
    '.'  desplazar e ir al estado 233


estado 154

  127 cabecera_subprograma_unoomas_ptocoma: cabecera_subprograma . ';'

    ';'  desplazar e ir al estado 234


estado 155

   90 declaracion_interfaces: INTERFAZ cabecera_subprograma_unoomas_ptocoma .
  126 cabecera_subprograma_unoomas_ptocoma: cabecera_subprograma_unoomas_ptocoma . cabecera_subprograma ';'

    CONSTRUCTOR    desplazar e ir al estado 93
    DESTRUCTOR     desplazar e ir al estado 94
    FUNCION        desplazar e ir al estado 95
    PROCEDIMIENTO  desplazar e ir al estado 96

    $default  reduce usando la regla 90 (declaracion_interfaces)

    cabecera_subprograma    ir al estado 235
    cabecera_funcion        ir al estado 99
    cabecera_procedimiento  ir al estado 100
    cabecera_constructor    ir al estado 101
    cabecera_destructor     ir al estado 102


estado 156

  130 cabecera_constructor: CONSTRUCTOR nombre . declaracion_parametros

    '('  desplazar e ir al estado 236

    $default  reduce usando la regla 132 (declaracion_parametros)

    declaracion_parametros  ir al estado 237


estado 157

  131 cabecera_destructor: DESTRUCTOR nombre .

    $default  reduce usando la regla 131 (cabecera_destructor)


estado 158

  128 cabecera_funcion: FUNCION nombre . declaracion_parametros FLECHA_DOBLE tipo_no_estructurado_o_nombre_tipo

    '('  desplazar e ir al estado 236

    $default  reduce usando la regla 132 (declaracion_parametros)

    declaracion_parametros  ir al estado 238


estado 159

  129 cabecera_procedimiento: PROCEDIMIENTO nombre . declaracion_parametros

    '('  desplazar e ir al estado 236

    $default  reduce usando la regla 132 (declaracion_parametros)

    declaracion_parametros  ir al estado 239


estado 160

  120 declaracion_subprograma: declaracion_subprograma cabecera_subprograma . bloque_subprograma

    TIPO  desplazar e ir al estado 28

    $default  reduce usando la regla 28 (declaracion_tipos)

    declaracion_tipos   ir al estado 161
    bloque_subprograma  ir al estado 240


estado 161

  138 bloque_subprograma: declaracion_tipos . declaracion_constantes declaracion_variables bloque_instrucciones

    CONSTANTE  desplazar e ir al estado 39

    $default  reduce usando la regla 66 (declaracion_constantes)

    declaracion_constantes  ir al estado 241


estado 162

  121 declaracion_subprograma: cabecera_subprograma bloque_subprograma .

    $default  reduce usando la regla 121 (declaracion_subprograma)


estado 163

   26 nombres_comas: nombres_comas ',' nombre .

    $default  reduce usando la regla 26 (nombres_comas)


estado 164

   93 declaracion_clase_mod: CLASE FINAL '{' . declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    CONSTANTE      desplazar e ir al estado 166
    CONSTRUCTOR    desplazar e ir al estado 93
    DESTRUCTOR     desplazar e ir al estado 94
    FUNCION        desplazar e ir al estado 95
    PROCEDIMIENTO  desplazar e ir al estado 96
    PUBLICO        desplazar e ir al estado 167
    TIPO           desplazar e ir al estado 168

    $default  reduce usando la regla 6 (id_op)

    nombre                          ir al estado 57
    id_op                           ir al estado 9
    nombres_comas                   ir al estado 169
    declaraciones_publicas          ir al estado 242
    declaracion_componente_unoomas  ir al estado 171
    declaracion_componente          ir al estado 172
    declaracion_tipo_anidado        ir al estado 173
    declaracion_constante_anidada   ir al estado 174
    declaracion_atributos           ir al estado 175
    cabecera_subprograma            ir al estado 176
    cabecera_funcion                ir al estado 99
    cabecera_procedimiento          ir al estado 100
    cabecera_constructor            ir al estado 101
    cabecera_destructor             ir al estado 102


estado 165

   94 declaracion_clase_mod: CLASE FINAL '(' . nombres_comas ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    $default  reduce usando la regla 6 (id_op)

    nombre         ir al estado 57
    id_op          ir al estado 9
    nombres_comas  ir al estado 243


estado 166

  111 declaracion_constante_anidada: CONSTANTE . declaracion_constante

    $default  reduce usando la regla 6 (id_op)

    nombre                 ir al estado 49
    id_op                  ir al estado 9
    declaracion_constante  ir al estado 244


estado 167

   97 declaraciones_publicas: PUBLICO . declaracion_componente_unoomas

    CONSTANTE      desplazar e ir al estado 166
    CONSTRUCTOR    desplazar e ir al estado 93
    DESTRUCTOR     desplazar e ir al estado 94
    FUNCION        desplazar e ir al estado 95
    PROCEDIMIENTO  desplazar e ir al estado 96
    TIPO           desplazar e ir al estado 168

    $default  reduce usando la regla 6 (id_op)

    nombre                          ir al estado 57
    id_op                           ir al estado 9
    nombres_comas                   ir al estado 169
    declaracion_componente_unoomas  ir al estado 245
    declaracion_componente          ir al estado 172
    declaracion_tipo_anidado        ir al estado 173
    declaracion_constante_anidada   ir al estado 174
    declaracion_atributos           ir al estado 175
    cabecera_subprograma            ir al estado 176
    cabecera_funcion                ir al estado 99
    cabecera_procedimiento          ir al estado 100
    cabecera_constructor            ir al estado 101
    cabecera_destructor             ir al estado 102


estado 168

  110 declaracion_tipo_anidado: TIPO . declaracion_tipo

    $default  reduce usando la regla 6 (id_op)

    nombre            ir al estado 36
    id_op             ir al estado 9
    declaracion_tipo  ir al estado 246


estado 169

   26 nombres_comas: nombres_comas . ',' nombre
  112 declaracion_atributos: nombres_comas . ':' tipo_no_estructurado_o_nombre_tipo ';'

    ','  desplazar e ir al estado 104
    ':'  desplazar e ir al estado 247


estado 170

   96 declaracion_clase_nomod: CLASE '{' declaraciones_publicas . declaraciones_semi declaraciones_privadas '}'

    SEMIPUBLICO  desplazar e ir al estado 248

    $default  reduce usando la regla 99 (declaraciones_semi)

    declaraciones_semi  ir al estado 249


estado 171

   98 declaraciones_publicas: declaracion_componente_unoomas .
  104 declaracion_componente_unoomas: declaracion_componente_unoomas . declaracion_componente

    CONSTANTE      desplazar e ir al estado 166
    CONSTRUCTOR    desplazar e ir al estado 93
    DESTRUCTOR     desplazar e ir al estado 94
    FUNCION        desplazar e ir al estado 95
    PROCEDIMIENTO  desplazar e ir al estado 96
    TIPO           desplazar e ir al estado 168

    IDENTIFICADOR  reduce usando la regla 6 (id_op)
    $default       reduce usando la regla 98 (declaraciones_publicas)

    nombre                         ir al estado 57
    id_op                          ir al estado 9
    nombres_comas                  ir al estado 169
    declaracion_componente         ir al estado 250
    declaracion_tipo_anidado       ir al estado 173
    declaracion_constante_anidada  ir al estado 174
    declaracion_atributos          ir al estado 175
    cabecera_subprograma           ir al estado 176
    cabecera_funcion               ir al estado 99
    cabecera_procedimiento         ir al estado 100
    cabecera_constructor           ir al estado 101
    cabecera_destructor            ir al estado 102


estado 172

  103 declaracion_componente_unoomas: declaracion_componente .

    $default  reduce usando la regla 103 (declaracion_componente_unoomas)


estado 173

  105 declaracion_componente: declaracion_tipo_anidado .

    $default  reduce usando la regla 105 (declaracion_componente)


estado 174

  106 declaracion_componente: declaracion_constante_anidada .

    $default  reduce usando la regla 106 (declaracion_componente)


estado 175

  107 declaracion_componente: declaracion_atributos .

    $default  reduce usando la regla 107 (declaracion_componente)


estado 176

  108 declaracion_componente: cabecera_subprograma . ';' modificadores ';'
  109                       | cabecera_subprograma . ';'

    ';'  desplazar e ir al estado 251


estado 177

   26 nombres_comas: nombres_comas . ',' nombre
   95 declaracion_clase_nomod: CLASE '(' nombres_comas . ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    ','  desplazar e ir al estado 104
    ')'  desplazar e ir al estado 252


estado 178

   61 tipo_conjunto: CONJUNTO DE tipo_no_estructurado_o_nombre_tipo .

    $default  reduce usando la regla 61 (tipo_conjunto)


estado 179

   60 tipo_lista_asociativa: LISTA ASOCIATIVA DE . tipo_no_estructurado_o_nombre_tipo

    BOOLEANO  desplazar e ir al estado 60
    CADENA    desplazar e ir al estado 61
    CARACTER  desplazar e ir al estado 62
    CONJUNTO  desplazar e ir al estado 64
    ENTERO    desplazar e ir al estado 65
    FICHERO   desplazar e ir al estado 66
    LISTA     desplazar e ir al estado 67
    REAL      desplazar e ir al estado 68
    '('       desplazar e ir al estado 71

    $default  reduce usando la regla 6 (id_op)

    nombre                              ir al estado 72
    id_op                               ir al estado 9
    tipo_no_estructurado_o_nombre_tipo  ir al estado 253
    tipo_escalar                        ir al estado 75
    tipo_fichero                        ir al estado 76
    tipo_enumerado                      ir al estado 77
    tipo_lista                          ir al estado 78
    tipo_lista_asociativa               ir al estado 79
    tipo_conjunto                       ir al estado 80


estado 180

  191 expresion_primaria: '(' . expresion ')'

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    llamada_subprograma   ir al estado 185
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 254


estado 181

  192 expresion_unitaria: '-' . expresion_primaria

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180

    $default  reduce usando la regla 6 (id_op)

    nombre               ir al estado 139
    id_op                ir al estado 9
    llamada_subprograma  ir al estado 185
    objeto               ir al estado 186
    expresion_constante  ir al estado 187
    expresion_primaria   ir al estado 255


estado 182

  219 expresion_negacion: '!' . expresion_negacion

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre               ir al estado 139
    id_op                ir al estado 9
    llamada_subprograma  ir al estado 185
    objeto               ir al estado 186
    expresion_constante  ir al estado 187
    expresion_primaria   ir al estado 188
    expresion_unitaria   ir al estado 189
    expresion_potencia   ir al estado 190
    expresion_prod       ir al estado 191
    expresion_sum        ir al estado 192
    expresion_desplz     ir al estado 193
    expresion_and_bin    ir al estado 194
    expresion_or_bin     ir al estado 195
    expresion_xor_bin    ir al estado 196
    expresion_comparar   ir al estado 197
    expresion_negacion   ir al estado 256


estado 183

   55 rango_lista_op: '[' rango_lista . ']'
   56 rango_lista: rango_lista . ',' rango

    ','  desplazar e ir al estado 257
    ']'  desplazar e ir al estado 258


estado 184

   57 rango_lista: rango .

    $default  reduce usando la regla 57 (rango_lista)


estado 185

  190 expresion_primaria: llamada_subprograma .

    $default  reduce usando la regla 190 (expresion_primaria)


estado 186

  181 objeto: objeto . '[' expresion_comas ']'
  182       | objeto . '.' IDENTIFICADOR
  189 expresion_primaria: objeto .

    '['  desplazar e ir al estado 232
    '.'  desplazar e ir al estado 233

    $default  reduce usando la regla 189 (expresion_primaria)


estado 187

  188 expresion_primaria: expresion_constante .

    $default  reduce usando la regla 188 (expresion_primaria)


estado 188

  193 expresion_unitaria: expresion_primaria .

    $default  reduce usando la regla 193 (expresion_unitaria)


estado 189

  194 expresion_potencia: expresion_unitaria . POTENCIA expresion_potencia
  195                   | expresion_unitaria .

    POTENCIA  desplazar e ir al estado 259

    $default  reduce usando la regla 195 (expresion_potencia)


estado 190

  199 expresion_prod: expresion_potencia .

    $default  reduce usando la regla 199 (expresion_prod)


estado 191

  196 expresion_prod: expresion_prod . '*' expresion_potencia
  197               | expresion_prod . '/' expresion_potencia
  198               | expresion_prod . '%' expresion_potencia
  202 expresion_sum: expresion_prod .

    '*'  desplazar e ir al estado 260
    '/'  desplazar e ir al estado 261
    '%'  desplazar e ir al estado 262

    $default  reduce usando la regla 202 (expresion_sum)


estado 192

  200 expresion_sum: expresion_sum . '+' expresion_prod
  201              | expresion_sum . '-' expresion_prod
  205 expresion_desplz: expresion_sum .

    '-'  desplazar e ir al estado 263
    '+'  desplazar e ir al estado 264

    $default  reduce usando la regla 205 (expresion_desplz)


estado 193

  203 expresion_desplz: expresion_desplz . DESPI expresion_sum
  204                 | expresion_desplz . DESPD expresion_sum
  207 expresion_and_bin: expresion_desplz .

    DESPD  desplazar e ir al estado 265
    DESPI  desplazar e ir al estado 266

    $default  reduce usando la regla 207 (expresion_and_bin)


estado 194

  206 expresion_and_bin: expresion_and_bin . '&' expresion_desplz
  209 expresion_or_bin: expresion_and_bin .

    '&'  desplazar e ir al estado 267

    $default  reduce usando la regla 209 (expresion_or_bin)


estado 195

  208 expresion_or_bin: expresion_or_bin . '^' expresion_and_bin
  211 expresion_xor_bin: expresion_or_bin .

    '^'  desplazar e ir al estado 268

    $default  reduce usando la regla 211 (expresion_xor_bin)


estado 196

  210 expresion_xor_bin: expresion_xor_bin . '@' expresion_desplz
  218 expresion_comparar: expresion_xor_bin .

    '@'  desplazar e ir al estado 269

    $default  reduce usando la regla 218 (expresion_comparar)


estado 197

  212 expresion_comparar: expresion_comparar . '<' expresion_xor_bin
  213                   | expresion_comparar . '>' expresion_xor_bin
  214                   | expresion_comparar . LEQ expresion_xor_bin
  215                   | expresion_comparar . GEQ expresion_xor_bin
  216                   | expresion_comparar . EQ expresion_xor_bin
  217                   | expresion_comparar . NEQ expresion_xor_bin
  220 expresion_negacion: expresion_comparar .

    EQ   desplazar e ir al estado 270
    GEQ  desplazar e ir al estado 271
    LEQ  desplazar e ir al estado 272
    NEQ  desplazar e ir al estado 273
    '<'  desplazar e ir al estado 274
    '>'  desplazar e ir al estado 275

    $default  reduce usando la regla 220 (expresion_negacion)


estado 198

  222 expresion_and_logico: expresion_negacion .

    $default  reduce usando la regla 222 (expresion_and_logico)


estado 199

  221 expresion_and_logico: expresion_and_logico . AND expresion_negacion
  224 expresion_or_logico: expresion_and_logico .

    AND  desplazar e ir al estado 276

    $default  reduce usando la regla 224 (expresion_or_logico)


estado 200

  223 expresion_or_logico: expresion_or_logico . OR expresion_and_logico
  225 expresion: expresion_or_logico .

    OR  desplazar e ir al estado 277

    $default  reduce usando la regla 225 (expresion)


estado 201

   58 rango: expresion . DOS_PTOS expresion
   59      | expresion . DOS_PTOS expresion DOS_PTOS expresion

    DOS_PTOS  desplazar e ir al estado 278


estado 202

   53 tipo_lista: LISTA rango_lista_op DE . tipo_no_estructurado_o_nombre_tipo

    BOOLEANO  desplazar e ir al estado 60
    CADENA    desplazar e ir al estado 61
    CARACTER  desplazar e ir al estado 62
    CONJUNTO  desplazar e ir al estado 64
    ENTERO    desplazar e ir al estado 65
    FICHERO   desplazar e ir al estado 66
    LISTA     desplazar e ir al estado 67
    REAL      desplazar e ir al estado 68
    '('       desplazar e ir al estado 71

    $default  reduce usando la regla 6 (id_op)

    nombre                              ir al estado 72
    id_op                               ir al estado 9
    tipo_no_estructurado_o_nombre_tipo  ir al estado 279
    tipo_escalar                        ir al estado 75
    tipo_fichero                        ir al estado 76
    tipo_enumerado                      ir al estado 77
    tipo_lista                          ir al estado 78
    tipo_lista_asociativa               ir al estado 79
    tipo_conjunto                       ir al estado 80


estado 203

   26 nombres_comas: nombres_comas . ',' nombre
   65 declaracion_campo: nombres_comas . ':' tipo_no_estructurado_o_nombre_tipo ';'

    ','  desplazar e ir al estado 104
    ':'  desplazar e ir al estado 280


estado 204

   62 tipo_registro: REGISTRO '{' declaracion_campo . '}'
   64 declaracion_campo: declaracion_campo . nombres_comas ':' tipo_no_estructurado_o_nombre_tipo ';'

    '}'  desplazar e ir al estado 281

    $default  reduce usando la regla 6 (id_op)

    nombre         ir al estado 57
    id_op          ir al estado 9
    nombres_comas  ir al estado 282


estado 205

   63 tipo_registro: '{' error '}' .

    $default  reduce usando la regla 63 (tipo_registro)


estado 206

   50 tipo_enumerado: '(' error ')' .

    $default  reduce usando la regla 50 (tipo_enumerado)


estado 207

   52 expresion_constante_unoomas: expresion_constante_unoomas ',' . expresion_constante

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121

    expresion_constante  ir al estado 283


estado 208

   49 tipo_enumerado: '(' expresion_constante_unoomas ')' .

    $default  reduce usando la regla 49 (tipo_enumerado)


estado 209

   70 declaracion_constante: nombre ':' tipo_no_estructurado_o_nombre_tipo '=' . valor_constante ';'

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '['           desplazar e ir al estado 284
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    valor_constante       ir al estado 285
    llamada_subprograma   ir al estado 185
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 286


estado 210

   88 declaracion_variable: nombres_comas ':' error . '=' valor_constante ';'
   89                     | nombres_comas ':' error . ';'

    ';'  desplazar e ir al estado 287
    '='  desplazar e ir al estado 288


estado 211

   86 declaracion_variable: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo . '=' valor_constante ';'
   87                     | nombres_comas ':' tipo_no_estructurado_o_nombre_tipo . ';'

    ';'  desplazar e ir al estado 289
    '='  desplazar e ir al estado 290


estado 212

   84 declaracion_variable: declaracion_variable nombres_comas ':' . tipo_no_estructurado_o_nombre_tipo '=' valor_constante ';'
   85                     | declaracion_variable nombres_comas ':' . tipo_no_estructurado_o_nombre_tipo ';'

    BOOLEANO  desplazar e ir al estado 60
    CADENA    desplazar e ir al estado 61
    CARACTER  desplazar e ir al estado 62
    CONJUNTO  desplazar e ir al estado 64
    ENTERO    desplazar e ir al estado 65
    FICHERO   desplazar e ir al estado 66
    LISTA     desplazar e ir al estado 67
    REAL      desplazar e ir al estado 68
    '('       desplazar e ir al estado 71

    $default  reduce usando la regla 6 (id_op)

    nombre                              ir al estado 72
    id_op                               ir al estado 9
    tipo_no_estructurado_o_nombre_tipo  ir al estado 291
    tipo_escalar                        ir al estado 75
    tipo_fichero                        ir al estado 76
    tipo_enumerado                      ir al estado 77
    tipo_lista                          ir al estado 78
    tipo_lista_asociativa               ir al estado 79
    tipo_conjunto                       ir al estado 80


estado 213

   11 bloque_instrucciones: '{' error '}' .

    $default  reduce usando la regla 11 (bloque_instrucciones)


estado 214

  153 instruccion_devolver: DEVOLVER ';' .

    $default  reduce usando la regla 153 (instruccion_devolver)


estado 215

  152 instruccion_devolver: DEVOLVER expresion . ';'

    ';'  desplazar e ir al estado 292


estado 216

  160 instruccion_casos: EN CASO . expresion SEA caso ';'

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    llamada_subprograma   ir al estado 185
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 293


estado 217

  179 instruccion_lanzar: LANZAR nombre . ';'

    ';'  desplazar e ir al estado 294


estado 218

  173 clausula_iteracion: MIENTRAS expresion .

    $default  reduce usando la regla 173 (clausula_iteracion)


estado 219

  170 clausula_iteracion: PARA nombre . EN objeto

    EN  desplazar e ir al estado 295


estado 220

  175 instruccion_probar_excepto: PROBAR bloque_instrucciones . EXCEPTO clausula_excepcion FINALMENTE bloque_instrucciones
  176                           | PROBAR bloque_instrucciones . EXCEPTO clausula_excepcion

    EXCEPTO  desplazar e ir al estado 296


estado 221

  171 clausula_iteracion: REPITE ELEMENTO . nombre EN rango DESCENDENTE
  172                   | REPITE ELEMENTO . nombre EN rango

    $default  reduce usando la regla 6 (id_op)

    nombre  ir al estado 297
    id_op   ir al estado 9


estado 222

  174 clausula_iteracion: REPITE HASTA . expresion

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    llamada_subprograma   ir al estado 185
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 298


estado 223

  150 instruccion_salir: SALIR SI . expresion ';'

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    llamada_subprograma   ir al estado 185
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 299


estado 224

  151 instruccion_salir: SALIR ';' .

    $default  reduce usando la regla 151 (instruccion_salir)


estado 225

  158 instruccion_si: SI expresion . ENTONCES bloque_instrucciones SINO bloque_instrucciones
  159               | SI expresion . ENTONCES bloque_instrucciones

    ENTONCES  desplazar e ir al estado 300


estado 226

  155 llamada_subprograma: nombre '(' . expresion_comas ')' nombre '(' ')'

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    llamada_subprograma   ir al estado 185
    expresion_comas       ir al estado 301
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 302


estado 227

   10 bloque_instrucciones: '{' instruccion_unoomas '}' .

    $default  reduce usando la regla 10 (bloque_instrucciones)


estado 228

   12 instruccion_unoomas: instruccion_unoomas instruccion .

    $default  reduce usando la regla 12 (instruccion_unoomas)


estado 229

  154 instruccion_llamada: llamada_subprograma ';' .

    $default  reduce usando la regla 154 (instruccion_llamada)


estado 230

  169 instruccion_bucle: clausula_iteracion bloque_instrucciones .

    $default  reduce usando la regla 169 (instruccion_bucle)


estado 231

  149 instruccion_asignacion: objeto '=' . expresion ';'

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    llamada_subprograma   ir al estado 185
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 303


estado 232

  181 objeto: objeto '[' . expresion_comas ']'

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    llamada_subprograma   ir al estado 185
    expresion_comas       ir al estado 304
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 302


estado 233

  182 objeto: objeto '.' . IDENTIFICADOR

    IDENTIFICADOR  desplazar e ir al estado 305


estado 234

  127 cabecera_subprograma_unoomas_ptocoma: cabecera_subprograma ';' .

    $default  reduce usando la regla 127 (cabecera_subprograma_unoomas_ptocoma)


estado 235

  126 cabecera_subprograma_unoomas_ptocoma: cabecera_subprograma_unoomas_ptocoma cabecera_subprograma . ';'

    ';'  desplazar e ir al estado 306


estado 236

  133 declaracion_parametros: '(' . lista_parametros_formales ')'

    $default  reduce usando la regla 6 (id_op)

    nombre                     ir al estado 57
    id_op                      ir al estado 9
    nombres_comas              ir al estado 307
    lista_parametros_formales  ir al estado 308
    parametros_formales        ir al estado 309


estado 237

  130 cabecera_constructor: CONSTRUCTOR nombre declaracion_parametros .

    $default  reduce usando la regla 130 (cabecera_constructor)


estado 238

  128 cabecera_funcion: FUNCION nombre declaracion_parametros . FLECHA_DOBLE tipo_no_estructurado_o_nombre_tipo

    FLECHA_DOBLE  desplazar e ir al estado 310


estado 239

  129 cabecera_procedimiento: PROCEDIMIENTO nombre declaracion_parametros .

    $default  reduce usando la regla 129 (cabecera_procedimiento)


estado 240

  120 declaracion_subprograma: declaracion_subprograma cabecera_subprograma bloque_subprograma .

    $default  reduce usando la regla 120 (declaracion_subprograma)


estado 241

  138 bloque_subprograma: declaracion_tipos declaracion_constantes . declaracion_variables bloque_instrucciones

    VARIABLE  desplazar e ir al estado 52

    $default  reduce usando la regla 82 (declaracion_variables)

    declaracion_variables  ir al estado 311


estado 242

   93 declaracion_clase_mod: CLASE FINAL '{' declaraciones_publicas . declaraciones_semi declaraciones_privadas '}'

    SEMIPUBLICO  desplazar e ir al estado 248

    $default  reduce usando la regla 99 (declaraciones_semi)

    declaraciones_semi  ir al estado 312


estado 243

   26 nombres_comas: nombres_comas . ',' nombre
   94 declaracion_clase_mod: CLASE FINAL '(' nombres_comas . ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    ','  desplazar e ir al estado 104
    ')'  desplazar e ir al estado 313


estado 244

  111 declaracion_constante_anidada: CONSTANTE declaracion_constante .

    $default  reduce usando la regla 111 (declaracion_constante_anidada)


estado 245

   97 declaraciones_publicas: PUBLICO declaracion_componente_unoomas .
  104 declaracion_componente_unoomas: declaracion_componente_unoomas . declaracion_componente

    CONSTANTE      desplazar e ir al estado 166
    CONSTRUCTOR    desplazar e ir al estado 93
    DESTRUCTOR     desplazar e ir al estado 94
    FUNCION        desplazar e ir al estado 95
    PROCEDIMIENTO  desplazar e ir al estado 96
    TIPO           desplazar e ir al estado 168

    IDENTIFICADOR  reduce usando la regla 6 (id_op)
    $default       reduce usando la regla 97 (declaraciones_publicas)

    nombre                         ir al estado 57
    id_op                          ir al estado 9
    nombres_comas                  ir al estado 169
    declaracion_componente         ir al estado 250
    declaracion_tipo_anidado       ir al estado 173
    declaracion_constante_anidada  ir al estado 174
    declaracion_atributos          ir al estado 175
    cabecera_subprograma           ir al estado 176
    cabecera_funcion               ir al estado 99
    cabecera_procedimiento         ir al estado 100
    cabecera_constructor           ir al estado 101
    cabecera_destructor            ir al estado 102


estado 246

  110 declaracion_tipo_anidado: TIPO declaracion_tipo .

    $default  reduce usando la regla 110 (declaracion_tipo_anidado)


estado 247

  112 declaracion_atributos: nombres_comas ':' . tipo_no_estructurado_o_nombre_tipo ';'

    BOOLEANO  desplazar e ir al estado 60
    CADENA    desplazar e ir al estado 61
    CARACTER  desplazar e ir al estado 62
    CONJUNTO  desplazar e ir al estado 64
    ENTERO    desplazar e ir al estado 65
    FICHERO   desplazar e ir al estado 66
    LISTA     desplazar e ir al estado 67
    REAL      desplazar e ir al estado 68
    '('       desplazar e ir al estado 71

    $default  reduce usando la regla 6 (id_op)

    nombre                              ir al estado 72
    id_op                               ir al estado 9
    tipo_no_estructurado_o_nombre_tipo  ir al estado 314
    tipo_escalar                        ir al estado 75
    tipo_fichero                        ir al estado 76
    tipo_enumerado                      ir al estado 77
    tipo_lista                          ir al estado 78
    tipo_lista_asociativa               ir al estado 79
    tipo_conjunto                       ir al estado 80


estado 248

  100 declaraciones_semi: SEMIPUBLICO . declaracion_componente_unoomas

    CONSTANTE      desplazar e ir al estado 166
    CONSTRUCTOR    desplazar e ir al estado 93
    DESTRUCTOR     desplazar e ir al estado 94
    FUNCION        desplazar e ir al estado 95
    PROCEDIMIENTO  desplazar e ir al estado 96
    TIPO           desplazar e ir al estado 168

    $default  reduce usando la regla 6 (id_op)

    nombre                          ir al estado 57
    id_op                           ir al estado 9
    nombres_comas                   ir al estado 169
    declaracion_componente_unoomas  ir al estado 315
    declaracion_componente          ir al estado 172
    declaracion_tipo_anidado        ir al estado 173
    declaracion_constante_anidada   ir al estado 174
    declaracion_atributos           ir al estado 175
    cabecera_subprograma            ir al estado 176
    cabecera_funcion                ir al estado 99
    cabecera_procedimiento          ir al estado 100
    cabecera_constructor            ir al estado 101
    cabecera_destructor             ir al estado 102


estado 249

   96 declaracion_clase_nomod: CLASE '{' declaraciones_publicas declaraciones_semi . declaraciones_privadas '}'

    PRIVADO  desplazar e ir al estado 316

    $default  reduce usando la regla 101 (declaraciones_privadas)

    declaraciones_privadas  ir al estado 317


estado 250

  104 declaracion_componente_unoomas: declaracion_componente_unoomas declaracion_componente .

    $default  reduce usando la regla 104 (declaracion_componente_unoomas)


estado 251

  108 declaracion_componente: cabecera_subprograma ';' . modificadores ';'
  109                       | cabecera_subprograma ';' .

    ABSTRACTO   desplazar e ir al estado 318
    ESPECIFICO  desplazar e ir al estado 319
    FINAL       desplazar e ir al estado 320
    GENERICO    desplazar e ir al estado 321

    $default  reduce usando la regla 109 (declaracion_componente)

    modificadores      ir al estado 322
    modificador_comas  ir al estado 323
    modificador        ir al estado 324


estado 252

   95 declaracion_clase_nomod: CLASE '(' nombres_comas ')' . '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    '{'  desplazar e ir al estado 325


estado 253

   60 tipo_lista_asociativa: LISTA ASOCIATIVA DE tipo_no_estructurado_o_nombre_tipo .

    $default  reduce usando la regla 60 (tipo_lista_asociativa)


estado 254

  191 expresion_primaria: '(' expresion . ')'

    ')'  desplazar e ir al estado 326


estado 255

  192 expresion_unitaria: '-' expresion_primaria .

    $default  reduce usando la regla 192 (expresion_unitaria)


estado 256

  219 expresion_negacion: '!' expresion_negacion .

    $default  reduce usando la regla 219 (expresion_negacion)


estado 257

   56 rango_lista: rango_lista ',' . rango

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    rango                 ir al estado 327
    llamada_subprograma   ir al estado 185
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 201


estado 258

   55 rango_lista_op: '[' rango_lista ']' .

    $default  reduce usando la regla 55 (rango_lista_op)


estado 259

  194 expresion_potencia: expresion_unitaria POTENCIA . expresion_potencia

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181

    $default  reduce usando la regla 6 (id_op)

    nombre               ir al estado 139
    id_op                ir al estado 9
    llamada_subprograma  ir al estado 185
    objeto               ir al estado 186
    expresion_constante  ir al estado 187
    expresion_primaria   ir al estado 188
    expresion_unitaria   ir al estado 189
    expresion_potencia   ir al estado 328


estado 260

  196 expresion_prod: expresion_prod '*' . expresion_potencia

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181

    $default  reduce usando la regla 6 (id_op)

    nombre               ir al estado 139
    id_op                ir al estado 9
    llamada_subprograma  ir al estado 185
    objeto               ir al estado 186
    expresion_constante  ir al estado 187
    expresion_primaria   ir al estado 188
    expresion_unitaria   ir al estado 189
    expresion_potencia   ir al estado 329


estado 261

  197 expresion_prod: expresion_prod '/' . expresion_potencia

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181

    $default  reduce usando la regla 6 (id_op)

    nombre               ir al estado 139
    id_op                ir al estado 9
    llamada_subprograma  ir al estado 185
    objeto               ir al estado 186
    expresion_constante  ir al estado 187
    expresion_primaria   ir al estado 188
    expresion_unitaria   ir al estado 189
    expresion_potencia   ir al estado 330


estado 262

  198 expresion_prod: expresion_prod '%' . expresion_potencia

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181

    $default  reduce usando la regla 6 (id_op)

    nombre               ir al estado 139
    id_op                ir al estado 9
    llamada_subprograma  ir al estado 185
    objeto               ir al estado 186
    expresion_constante  ir al estado 187
    expresion_primaria   ir al estado 188
    expresion_unitaria   ir al estado 189
    expresion_potencia   ir al estado 331


estado 263

  201 expresion_sum: expresion_sum '-' . expresion_prod

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181

    $default  reduce usando la regla 6 (id_op)

    nombre               ir al estado 139
    id_op                ir al estado 9
    llamada_subprograma  ir al estado 185
    objeto               ir al estado 186
    expresion_constante  ir al estado 187
    expresion_primaria   ir al estado 188
    expresion_unitaria   ir al estado 189
    expresion_potencia   ir al estado 190
    expresion_prod       ir al estado 332


estado 264

  200 expresion_sum: expresion_sum '+' . expresion_prod

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181

    $default  reduce usando la regla 6 (id_op)

    nombre               ir al estado 139
    id_op                ir al estado 9
    llamada_subprograma  ir al estado 185
    objeto               ir al estado 186
    expresion_constante  ir al estado 187
    expresion_primaria   ir al estado 188
    expresion_unitaria   ir al estado 189
    expresion_potencia   ir al estado 190
    expresion_prod       ir al estado 333


estado 265

  204 expresion_desplz: expresion_desplz DESPD . expresion_sum

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181

    $default  reduce usando la regla 6 (id_op)

    nombre               ir al estado 139
    id_op                ir al estado 9
    llamada_subprograma  ir al estado 185
    objeto               ir al estado 186
    expresion_constante  ir al estado 187
    expresion_primaria   ir al estado 188
    expresion_unitaria   ir al estado 189
    expresion_potencia   ir al estado 190
    expresion_prod       ir al estado 191
    expresion_sum        ir al estado 334


estado 266

  203 expresion_desplz: expresion_desplz DESPI . expresion_sum

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181

    $default  reduce usando la regla 6 (id_op)

    nombre               ir al estado 139
    id_op                ir al estado 9
    llamada_subprograma  ir al estado 185
    objeto               ir al estado 186
    expresion_constante  ir al estado 187
    expresion_primaria   ir al estado 188
    expresion_unitaria   ir al estado 189
    expresion_potencia   ir al estado 190
    expresion_prod       ir al estado 191
    expresion_sum        ir al estado 335


estado 267

  206 expresion_and_bin: expresion_and_bin '&' . expresion_desplz

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181

    $default  reduce usando la regla 6 (id_op)

    nombre               ir al estado 139
    id_op                ir al estado 9
    llamada_subprograma  ir al estado 185
    objeto               ir al estado 186
    expresion_constante  ir al estado 187
    expresion_primaria   ir al estado 188
    expresion_unitaria   ir al estado 189
    expresion_potencia   ir al estado 190
    expresion_prod       ir al estado 191
    expresion_sum        ir al estado 192
    expresion_desplz     ir al estado 336


estado 268

  208 expresion_or_bin: expresion_or_bin '^' . expresion_and_bin

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181

    $default  reduce usando la regla 6 (id_op)

    nombre               ir al estado 139
    id_op                ir al estado 9
    llamada_subprograma  ir al estado 185
    objeto               ir al estado 186
    expresion_constante  ir al estado 187
    expresion_primaria   ir al estado 188
    expresion_unitaria   ir al estado 189
    expresion_potencia   ir al estado 190
    expresion_prod       ir al estado 191
    expresion_sum        ir al estado 192
    expresion_desplz     ir al estado 193
    expresion_and_bin    ir al estado 337


estado 269

  210 expresion_xor_bin: expresion_xor_bin '@' . expresion_desplz

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181

    $default  reduce usando la regla 6 (id_op)

    nombre               ir al estado 139
    id_op                ir al estado 9
    llamada_subprograma  ir al estado 185
    objeto               ir al estado 186
    expresion_constante  ir al estado 187
    expresion_primaria   ir al estado 188
    expresion_unitaria   ir al estado 189
    expresion_potencia   ir al estado 190
    expresion_prod       ir al estado 191
    expresion_sum        ir al estado 192
    expresion_desplz     ir al estado 338


estado 270

  216 expresion_comparar: expresion_comparar EQ . expresion_xor_bin

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181

    $default  reduce usando la regla 6 (id_op)

    nombre               ir al estado 139
    id_op                ir al estado 9
    llamada_subprograma  ir al estado 185
    objeto               ir al estado 186
    expresion_constante  ir al estado 187
    expresion_primaria   ir al estado 188
    expresion_unitaria   ir al estado 189
    expresion_potencia   ir al estado 190
    expresion_prod       ir al estado 191
    expresion_sum        ir al estado 192
    expresion_desplz     ir al estado 193
    expresion_and_bin    ir al estado 194
    expresion_or_bin     ir al estado 195
    expresion_xor_bin    ir al estado 339


estado 271

  215 expresion_comparar: expresion_comparar GEQ . expresion_xor_bin

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181

    $default  reduce usando la regla 6 (id_op)

    nombre               ir al estado 139
    id_op                ir al estado 9
    llamada_subprograma  ir al estado 185
    objeto               ir al estado 186
    expresion_constante  ir al estado 187
    expresion_primaria   ir al estado 188
    expresion_unitaria   ir al estado 189
    expresion_potencia   ir al estado 190
    expresion_prod       ir al estado 191
    expresion_sum        ir al estado 192
    expresion_desplz     ir al estado 193
    expresion_and_bin    ir al estado 194
    expresion_or_bin     ir al estado 195
    expresion_xor_bin    ir al estado 340


estado 272

  214 expresion_comparar: expresion_comparar LEQ . expresion_xor_bin

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181

    $default  reduce usando la regla 6 (id_op)

    nombre               ir al estado 139
    id_op                ir al estado 9
    llamada_subprograma  ir al estado 185
    objeto               ir al estado 186
    expresion_constante  ir al estado 187
    expresion_primaria   ir al estado 188
    expresion_unitaria   ir al estado 189
    expresion_potencia   ir al estado 190
    expresion_prod       ir al estado 191
    expresion_sum        ir al estado 192
    expresion_desplz     ir al estado 193
    expresion_and_bin    ir al estado 194
    expresion_or_bin     ir al estado 195
    expresion_xor_bin    ir al estado 341


estado 273

  217 expresion_comparar: expresion_comparar NEQ . expresion_xor_bin

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181

    $default  reduce usando la regla 6 (id_op)

    nombre               ir al estado 139
    id_op                ir al estado 9
    llamada_subprograma  ir al estado 185
    objeto               ir al estado 186
    expresion_constante  ir al estado 187
    expresion_primaria   ir al estado 188
    expresion_unitaria   ir al estado 189
    expresion_potencia   ir al estado 190
    expresion_prod       ir al estado 191
    expresion_sum        ir al estado 192
    expresion_desplz     ir al estado 193
    expresion_and_bin    ir al estado 194
    expresion_or_bin     ir al estado 195
    expresion_xor_bin    ir al estado 342


estado 274

  212 expresion_comparar: expresion_comparar '<' . expresion_xor_bin

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181

    $default  reduce usando la regla 6 (id_op)

    nombre               ir al estado 139
    id_op                ir al estado 9
    llamada_subprograma  ir al estado 185
    objeto               ir al estado 186
    expresion_constante  ir al estado 187
    expresion_primaria   ir al estado 188
    expresion_unitaria   ir al estado 189
    expresion_potencia   ir al estado 190
    expresion_prod       ir al estado 191
    expresion_sum        ir al estado 192
    expresion_desplz     ir al estado 193
    expresion_and_bin    ir al estado 194
    expresion_or_bin     ir al estado 195
    expresion_xor_bin    ir al estado 343


estado 275

  213 expresion_comparar: expresion_comparar '>' . expresion_xor_bin

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181

    $default  reduce usando la regla 6 (id_op)

    nombre               ir al estado 139
    id_op                ir al estado 9
    llamada_subprograma  ir al estado 185
    objeto               ir al estado 186
    expresion_constante  ir al estado 187
    expresion_primaria   ir al estado 188
    expresion_unitaria   ir al estado 189
    expresion_potencia   ir al estado 190
    expresion_prod       ir al estado 191
    expresion_sum        ir al estado 192
    expresion_desplz     ir al estado 193
    expresion_and_bin    ir al estado 194
    expresion_or_bin     ir al estado 195
    expresion_xor_bin    ir al estado 344


estado 276

  221 expresion_and_logico: expresion_and_logico AND . expresion_negacion

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre               ir al estado 139
    id_op                ir al estado 9
    llamada_subprograma  ir al estado 185
    objeto               ir al estado 186
    expresion_constante  ir al estado 187
    expresion_primaria   ir al estado 188
    expresion_unitaria   ir al estado 189
    expresion_potencia   ir al estado 190
    expresion_prod       ir al estado 191
    expresion_sum        ir al estado 192
    expresion_desplz     ir al estado 193
    expresion_and_bin    ir al estado 194
    expresion_or_bin     ir al estado 195
    expresion_xor_bin    ir al estado 196
    expresion_comparar   ir al estado 197
    expresion_negacion   ir al estado 345


estado 277

  223 expresion_or_logico: expresion_or_logico OR . expresion_and_logico

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    llamada_subprograma   ir al estado 185
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 346


estado 278

   58 rango: expresion DOS_PTOS . expresion
   59      | expresion DOS_PTOS . expresion DOS_PTOS expresion

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    llamada_subprograma   ir al estado 185
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 347


estado 279

   53 tipo_lista: LISTA rango_lista_op DE tipo_no_estructurado_o_nombre_tipo .

    $default  reduce usando la regla 53 (tipo_lista)


estado 280

   65 declaracion_campo: nombres_comas ':' . tipo_no_estructurado_o_nombre_tipo ';'

    BOOLEANO  desplazar e ir al estado 60
    CADENA    desplazar e ir al estado 61
    CARACTER  desplazar e ir al estado 62
    CONJUNTO  desplazar e ir al estado 64
    ENTERO    desplazar e ir al estado 65
    FICHERO   desplazar e ir al estado 66
    LISTA     desplazar e ir al estado 67
    REAL      desplazar e ir al estado 68
    '('       desplazar e ir al estado 71

    $default  reduce usando la regla 6 (id_op)

    nombre                              ir al estado 72
    id_op                               ir al estado 9
    tipo_no_estructurado_o_nombre_tipo  ir al estado 348
    tipo_escalar                        ir al estado 75
    tipo_fichero                        ir al estado 76
    tipo_enumerado                      ir al estado 77
    tipo_lista                          ir al estado 78
    tipo_lista_asociativa               ir al estado 79
    tipo_conjunto                       ir al estado 80


estado 281

   62 tipo_registro: REGISTRO '{' declaracion_campo '}' .

    $default  reduce usando la regla 62 (tipo_registro)


estado 282

   26 nombres_comas: nombres_comas . ',' nombre
   64 declaracion_campo: declaracion_campo nombres_comas . ':' tipo_no_estructurado_o_nombre_tipo ';'

    ','  desplazar e ir al estado 104
    ':'  desplazar e ir al estado 349


estado 283

   52 expresion_constante_unoomas: expresion_constante_unoomas ',' expresion_constante .

    $default  reduce usando la regla 52 (expresion_constante_unoomas)


estado 284

   72 valor_constante: '[' . valor_constante_comas ']'
   73                | '[' . clave_valor ']'
   74                | '[' . campo_valor ']'
   75                | '[' . error ']'

    error         desplazar e ir al estado 350
    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 351
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '['           desplazar e ir al estado 284
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    IDENTIFICADOR  reduce usando la regla 6 (id_op)

    nombre                 ir al estado 352
    id_op                  ir al estado 9
    valor_constante        ir al estado 353
    valor_constante_comas  ir al estado 354
    clave_valor            ir al estado 355
    campo_valor            ir al estado 356
    llamada_subprograma    ir al estado 185
    objeto                 ir al estado 186
    expresion_constante    ir al estado 187
    expresion_primaria     ir al estado 188
    expresion_unitaria     ir al estado 189
    expresion_potencia     ir al estado 190
    expresion_prod         ir al estado 191
    expresion_sum          ir al estado 192
    expresion_desplz       ir al estado 193
    expresion_and_bin      ir al estado 194
    expresion_or_bin       ir al estado 195
    expresion_xor_bin      ir al estado 196
    expresion_comparar     ir al estado 197
    expresion_negacion     ir al estado 198
    expresion_and_logico   ir al estado 199
    expresion_or_logico    ir al estado 200
    expresion              ir al estado 286


estado 285

   70 declaracion_constante: nombre ':' tipo_no_estructurado_o_nombre_tipo '=' valor_constante . ';'

    ';'  desplazar e ir al estado 357


estado 286

   71 valor_constante: expresion .

    $default  reduce usando la regla 71 (valor_constante)


estado 287

   89 declaracion_variable: nombres_comas ':' error ';' .

    $default  reduce usando la regla 89 (declaracion_variable)


estado 288

   88 declaracion_variable: nombres_comas ':' error '=' . valor_constante ';'

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '['           desplazar e ir al estado 284
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    valor_constante       ir al estado 358
    llamada_subprograma   ir al estado 185
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 286


estado 289

   87 declaracion_variable: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo ';' .

    $default  reduce usando la regla 87 (declaracion_variable)


estado 290

   86 declaracion_variable: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo '=' . valor_constante ';'

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '['           desplazar e ir al estado 284
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    valor_constante       ir al estado 359
    llamada_subprograma   ir al estado 185
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 286


estado 291

   84 declaracion_variable: declaracion_variable nombres_comas ':' tipo_no_estructurado_o_nombre_tipo . '=' valor_constante ';'
   85                     | declaracion_variable nombres_comas ':' tipo_no_estructurado_o_nombre_tipo . ';'

    ';'  desplazar e ir al estado 360
    '='  desplazar e ir al estado 361


estado 292

  152 instruccion_devolver: DEVOLVER expresion ';' .

    $default  reduce usando la regla 152 (instruccion_devolver)


estado 293

  160 instruccion_casos: EN CASO expresion . SEA caso ';'

    SEA  desplazar e ir al estado 362


estado 294

  179 instruccion_lanzar: LANZAR nombre ';' .

    $default  reduce usando la regla 179 (instruccion_lanzar)


estado 295

  170 clausula_iteracion: PARA nombre EN . objeto

    $default  reduce usando la regla 6 (id_op)

    nombre  ir al estado 363
    id_op   ir al estado 9
    objeto  ir al estado 364


estado 296

  175 instruccion_probar_excepto: PROBAR bloque_instrucciones EXCEPTO . clausula_excepcion FINALMENTE bloque_instrucciones
  176                           | PROBAR bloque_instrucciones EXCEPTO . clausula_excepcion

    CUANDO  desplazar e ir al estado 365

    clausula_excepcion  ir al estado 366


estado 297

  171 clausula_iteracion: REPITE ELEMENTO nombre . EN rango DESCENDENTE
  172                   | REPITE ELEMENTO nombre . EN rango

    EN  desplazar e ir al estado 367


estado 298

  174 clausula_iteracion: REPITE HASTA expresion .

    $default  reduce usando la regla 174 (clausula_iteracion)


estado 299

  150 instruccion_salir: SALIR SI expresion . ';'

    ';'  desplazar e ir al estado 368


estado 300

  158 instruccion_si: SI expresion ENTONCES . bloque_instrucciones SINO bloque_instrucciones
  159               | SI expresion ENTONCES . bloque_instrucciones

    '{'  desplazar e ir al estado 89

    bloque_instrucciones  ir al estado 369


estado 301

  155 llamada_subprograma: nombre '(' expresion_comas . ')' nombre '(' ')'
  156 expresion_comas: expresion_comas . ',' expresion

    ','  desplazar e ir al estado 370
    ')'  desplazar e ir al estado 371


estado 302

  157 expresion_comas: expresion .

    $default  reduce usando la regla 157 (expresion_comas)


estado 303

  149 instruccion_asignacion: objeto '=' expresion . ';'

    ';'  desplazar e ir al estado 372


estado 304

  156 expresion_comas: expresion_comas . ',' expresion
  181 objeto: objeto '[' expresion_comas . ']'

    ','  desplazar e ir al estado 370
    ']'  desplazar e ir al estado 373


estado 305

  182 objeto: objeto '.' IDENTIFICADOR .

    $default  reduce usando la regla 182 (objeto)


estado 306

  126 cabecera_subprograma_unoomas_ptocoma: cabecera_subprograma_unoomas_ptocoma cabecera_subprograma ';' .

    $default  reduce usando la regla 126 (cabecera_subprograma_unoomas_ptocoma)


estado 307

   26 nombres_comas: nombres_comas . ',' nombre
  136 parametros_formales: nombres_comas . ':' tipo_no_estructurado_o_nombre_tipo MODIFICABLE
  137                    | nombres_comas . ':' tipo_no_estructurado_o_nombre_tipo

    ','  desplazar e ir al estado 104
    ':'  desplazar e ir al estado 374


estado 308

  133 declaracion_parametros: '(' lista_parametros_formales . ')'
  135 lista_parametros_formales: lista_parametros_formales . ';' parametros_formales

    ';'  desplazar e ir al estado 375
    ')'  desplazar e ir al estado 376


estado 309

  134 lista_parametros_formales: parametros_formales .

    $default  reduce usando la regla 134 (lista_parametros_formales)


estado 310

  128 cabecera_funcion: FUNCION nombre declaracion_parametros FLECHA_DOBLE . tipo_no_estructurado_o_nombre_tipo

    BOOLEANO  desplazar e ir al estado 60
    CADENA    desplazar e ir al estado 61
    CARACTER  desplazar e ir al estado 62
    CONJUNTO  desplazar e ir al estado 64
    ENTERO    desplazar e ir al estado 65
    FICHERO   desplazar e ir al estado 66
    LISTA     desplazar e ir al estado 67
    REAL      desplazar e ir al estado 68
    '('       desplazar e ir al estado 71

    $default  reduce usando la regla 6 (id_op)

    nombre                              ir al estado 72
    id_op                               ir al estado 9
    tipo_no_estructurado_o_nombre_tipo  ir al estado 377
    tipo_escalar                        ir al estado 75
    tipo_fichero                        ir al estado 76
    tipo_enumerado                      ir al estado 77
    tipo_lista                          ir al estado 78
    tipo_lista_asociativa               ir al estado 79
    tipo_conjunto                       ir al estado 80


estado 311

  138 bloque_subprograma: declaracion_tipos declaracion_constantes declaracion_variables . bloque_instrucciones

    '{'  desplazar e ir al estado 89

    bloque_instrucciones  ir al estado 378


estado 312

   93 declaracion_clase_mod: CLASE FINAL '{' declaraciones_publicas declaraciones_semi . declaraciones_privadas '}'

    PRIVADO  desplazar e ir al estado 316

    $default  reduce usando la regla 101 (declaraciones_privadas)

    declaraciones_privadas  ir al estado 379


estado 313

   94 declaracion_clase_mod: CLASE FINAL '(' nombres_comas ')' . '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    '{'  desplazar e ir al estado 380


estado 314

  112 declaracion_atributos: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo . ';'

    ';'  desplazar e ir al estado 381


estado 315

  100 declaraciones_semi: SEMIPUBLICO declaracion_componente_unoomas .
  104 declaracion_componente_unoomas: declaracion_componente_unoomas . declaracion_componente

    CONSTANTE      desplazar e ir al estado 166
    CONSTRUCTOR    desplazar e ir al estado 93
    DESTRUCTOR     desplazar e ir al estado 94
    FUNCION        desplazar e ir al estado 95
    PROCEDIMIENTO  desplazar e ir al estado 96
    TIPO           desplazar e ir al estado 168

    IDENTIFICADOR  reduce usando la regla 6 (id_op)
    $default       reduce usando la regla 100 (declaraciones_semi)

    nombre                         ir al estado 57
    id_op                          ir al estado 9
    nombres_comas                  ir al estado 169
    declaracion_componente         ir al estado 250
    declaracion_tipo_anidado       ir al estado 173
    declaracion_constante_anidada  ir al estado 174
    declaracion_atributos          ir al estado 175
    cabecera_subprograma           ir al estado 176
    cabecera_funcion               ir al estado 99
    cabecera_procedimiento         ir al estado 100
    cabecera_constructor           ir al estado 101
    cabecera_destructor            ir al estado 102


estado 316

  102 declaraciones_privadas: PRIVADO . declaracion_componente_unoomas

    CONSTANTE      desplazar e ir al estado 166
    CONSTRUCTOR    desplazar e ir al estado 93
    DESTRUCTOR     desplazar e ir al estado 94
    FUNCION        desplazar e ir al estado 95
    PROCEDIMIENTO  desplazar e ir al estado 96
    TIPO           desplazar e ir al estado 168

    $default  reduce usando la regla 6 (id_op)

    nombre                          ir al estado 57
    id_op                           ir al estado 9
    nombres_comas                   ir al estado 169
    declaracion_componente_unoomas  ir al estado 382
    declaracion_componente          ir al estado 172
    declaracion_tipo_anidado        ir al estado 173
    declaracion_constante_anidada   ir al estado 174
    declaracion_atributos           ir al estado 175
    cabecera_subprograma            ir al estado 176
    cabecera_funcion                ir al estado 99
    cabecera_procedimiento          ir al estado 100
    cabecera_constructor            ir al estado 101
    cabecera_destructor             ir al estado 102


estado 317

   96 declaracion_clase_nomod: CLASE '{' declaraciones_publicas declaraciones_semi declaraciones_privadas . '}'

    '}'  desplazar e ir al estado 383


estado 318

  117 modificador: ABSTRACTO .

    $default  reduce usando la regla 117 (modificador)


estado 319

  118 modificador: ESPECIFICO .

    $default  reduce usando la regla 118 (modificador)


estado 320

  119 modificador: FINAL .

    $default  reduce usando la regla 119 (modificador)


estado 321

  116 modificador: GENERICO .

    $default  reduce usando la regla 116 (modificador)


estado 322

  108 declaracion_componente: cabecera_subprograma ';' modificadores . ';'

    ';'  desplazar e ir al estado 384


estado 323

  113 modificadores: modificador_comas .
  114 modificador_comas: modificador_comas . ',' modificador

    ','  desplazar e ir al estado 385

    $default  reduce usando la regla 113 (modificadores)


estado 324

  115 modificador_comas: modificador .

    $default  reduce usando la regla 115 (modificador_comas)


estado 325

   95 declaracion_clase_nomod: CLASE '(' nombres_comas ')' '{' . declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    CONSTANTE      desplazar e ir al estado 166
    CONSTRUCTOR    desplazar e ir al estado 93
    DESTRUCTOR     desplazar e ir al estado 94
    FUNCION        desplazar e ir al estado 95
    PROCEDIMIENTO  desplazar e ir al estado 96
    PUBLICO        desplazar e ir al estado 167
    TIPO           desplazar e ir al estado 168

    $default  reduce usando la regla 6 (id_op)

    nombre                          ir al estado 57
    id_op                           ir al estado 9
    nombres_comas                   ir al estado 169
    declaraciones_publicas          ir al estado 386
    declaracion_componente_unoomas  ir al estado 171
    declaracion_componente          ir al estado 172
    declaracion_tipo_anidado        ir al estado 173
    declaracion_constante_anidada   ir al estado 174
    declaracion_atributos           ir al estado 175
    cabecera_subprograma            ir al estado 176
    cabecera_funcion                ir al estado 99
    cabecera_procedimiento          ir al estado 100
    cabecera_constructor            ir al estado 101
    cabecera_destructor             ir al estado 102


estado 326

  191 expresion_primaria: '(' expresion ')' .

    $default  reduce usando la regla 191 (expresion_primaria)


estado 327

   56 rango_lista: rango_lista ',' rango .

    $default  reduce usando la regla 56 (rango_lista)


estado 328

  194 expresion_potencia: expresion_unitaria POTENCIA expresion_potencia .

    $default  reduce usando la regla 194 (expresion_potencia)


estado 329

  196 expresion_prod: expresion_prod '*' expresion_potencia .

    $default  reduce usando la regla 196 (expresion_prod)


estado 330

  197 expresion_prod: expresion_prod '/' expresion_potencia .

    $default  reduce usando la regla 197 (expresion_prod)


estado 331

  198 expresion_prod: expresion_prod '%' expresion_potencia .

    $default  reduce usando la regla 198 (expresion_prod)


estado 332

  196 expresion_prod: expresion_prod . '*' expresion_potencia
  197               | expresion_prod . '/' expresion_potencia
  198               | expresion_prod . '%' expresion_potencia
  201 expresion_sum: expresion_sum '-' expresion_prod .

    '*'  desplazar e ir al estado 260
    '/'  desplazar e ir al estado 261
    '%'  desplazar e ir al estado 262

    $default  reduce usando la regla 201 (expresion_sum)


estado 333

  196 expresion_prod: expresion_prod . '*' expresion_potencia
  197               | expresion_prod . '/' expresion_potencia
  198               | expresion_prod . '%' expresion_potencia
  200 expresion_sum: expresion_sum '+' expresion_prod .

    '*'  desplazar e ir al estado 260
    '/'  desplazar e ir al estado 261
    '%'  desplazar e ir al estado 262

    $default  reduce usando la regla 200 (expresion_sum)


estado 334

  200 expresion_sum: expresion_sum . '+' expresion_prod
  201              | expresion_sum . '-' expresion_prod
  204 expresion_desplz: expresion_desplz DESPD expresion_sum .

    '-'  desplazar e ir al estado 263
    '+'  desplazar e ir al estado 264

    $default  reduce usando la regla 204 (expresion_desplz)


estado 335

  200 expresion_sum: expresion_sum . '+' expresion_prod
  201              | expresion_sum . '-' expresion_prod
  203 expresion_desplz: expresion_desplz DESPI expresion_sum .

    '-'  desplazar e ir al estado 263
    '+'  desplazar e ir al estado 264

    $default  reduce usando la regla 203 (expresion_desplz)


estado 336

  203 expresion_desplz: expresion_desplz . DESPI expresion_sum
  204                 | expresion_desplz . DESPD expresion_sum
  206 expresion_and_bin: expresion_and_bin '&' expresion_desplz .

    DESPD  desplazar e ir al estado 265
    DESPI  desplazar e ir al estado 266

    $default  reduce usando la regla 206 (expresion_and_bin)


estado 337

  206 expresion_and_bin: expresion_and_bin . '&' expresion_desplz
  208 expresion_or_bin: expresion_or_bin '^' expresion_and_bin .

    '&'  desplazar e ir al estado 267

    $default  reduce usando la regla 208 (expresion_or_bin)


estado 338

  203 expresion_desplz: expresion_desplz . DESPI expresion_sum
  204                 | expresion_desplz . DESPD expresion_sum
  210 expresion_xor_bin: expresion_xor_bin '@' expresion_desplz .

    DESPD  desplazar e ir al estado 265
    DESPI  desplazar e ir al estado 266

    $default  reduce usando la regla 210 (expresion_xor_bin)


estado 339

  210 expresion_xor_bin: expresion_xor_bin . '@' expresion_desplz
  216 expresion_comparar: expresion_comparar EQ expresion_xor_bin .

    '@'  desplazar e ir al estado 269

    $default  reduce usando la regla 216 (expresion_comparar)


estado 340

  210 expresion_xor_bin: expresion_xor_bin . '@' expresion_desplz
  215 expresion_comparar: expresion_comparar GEQ expresion_xor_bin .

    '@'  desplazar e ir al estado 269

    $default  reduce usando la regla 215 (expresion_comparar)


estado 341

  210 expresion_xor_bin: expresion_xor_bin . '@' expresion_desplz
  214 expresion_comparar: expresion_comparar LEQ expresion_xor_bin .

    '@'  desplazar e ir al estado 269

    $default  reduce usando la regla 214 (expresion_comparar)


estado 342

  210 expresion_xor_bin: expresion_xor_bin . '@' expresion_desplz
  217 expresion_comparar: expresion_comparar NEQ expresion_xor_bin .

    '@'  desplazar e ir al estado 269

    $default  reduce usando la regla 217 (expresion_comparar)


estado 343

  210 expresion_xor_bin: expresion_xor_bin . '@' expresion_desplz
  212 expresion_comparar: expresion_comparar '<' expresion_xor_bin .

    '@'  desplazar e ir al estado 269

    $default  reduce usando la regla 212 (expresion_comparar)


estado 344

  210 expresion_xor_bin: expresion_xor_bin . '@' expresion_desplz
  213 expresion_comparar: expresion_comparar '>' expresion_xor_bin .

    '@'  desplazar e ir al estado 269

    $default  reduce usando la regla 213 (expresion_comparar)


estado 345

  221 expresion_and_logico: expresion_and_logico AND expresion_negacion .

    $default  reduce usando la regla 221 (expresion_and_logico)


estado 346

  221 expresion_and_logico: expresion_and_logico . AND expresion_negacion
  223 expresion_or_logico: expresion_or_logico OR expresion_and_logico .

    AND  desplazar e ir al estado 276

    $default  reduce usando la regla 223 (expresion_or_logico)


estado 347

   58 rango: expresion DOS_PTOS expresion .
   59      | expresion DOS_PTOS expresion . DOS_PTOS expresion

    DOS_PTOS  desplazar e ir al estado 387

    $default  reduce usando la regla 58 (rango)


estado 348

   65 declaracion_campo: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo . ';'

    ';'  desplazar e ir al estado 388


estado 349

   64 declaracion_campo: declaracion_campo nombres_comas ':' . tipo_no_estructurado_o_nombre_tipo ';'

    BOOLEANO  desplazar e ir al estado 60
    CADENA    desplazar e ir al estado 61
    CARACTER  desplazar e ir al estado 62
    CONJUNTO  desplazar e ir al estado 64
    ENTERO    desplazar e ir al estado 65
    FICHERO   desplazar e ir al estado 66
    LISTA     desplazar e ir al estado 67
    REAL      desplazar e ir al estado 68
    '('       desplazar e ir al estado 71

    $default  reduce usando la regla 6 (id_op)

    nombre                              ir al estado 72
    id_op                               ir al estado 9
    tipo_no_estructurado_o_nombre_tipo  ir al estado 389
    tipo_escalar                        ir al estado 75
    tipo_fichero                        ir al estado 76
    tipo_enumerado                      ir al estado 77
    tipo_lista                          ir al estado 78
    tipo_lista_asociativa               ir al estado 79
    tipo_conjunto                       ir al estado 80


estado 350

   75 valor_constante: '[' error . ']'

    ']'  desplazar e ir al estado 390


estado 351

   79 clave_valor: CTC_CADENA . FLECHA_DOBLE valor_constante
  185 expresion_constante: CTC_CADENA .

    FLECHA_DOBLE  desplazar e ir al estado 391

    $default  reduce usando la regla 185 (expresion_constante)


estado 352

   81 campo_valor: nombre . FLECHA_DOBLE valor_constante
  155 llamada_subprograma: nombre . '(' expresion_comas ')' nombre '(' ')'
  180 objeto: nombre .

    FLECHA_DOBLE  desplazar e ir al estado 392
    '('           desplazar e ir al estado 226

    $default  reduce usando la regla 180 (objeto)


estado 353

   77 valor_constante_comas: valor_constante .

    $default  reduce usando la regla 77 (valor_constante_comas)


estado 354

   72 valor_constante: '[' valor_constante_comas . ']'
   76 valor_constante_comas: valor_constante_comas . ',' valor_constante

    ','  desplazar e ir al estado 393
    ']'  desplazar e ir al estado 394


estado 355

   73 valor_constante: '[' clave_valor . ']'
   78 clave_valor: clave_valor . ',' CTC_CADENA FLECHA_DOBLE valor_constante

    ','  desplazar e ir al estado 395
    ']'  desplazar e ir al estado 396


estado 356

   74 valor_constante: '[' campo_valor . ']'
   80 campo_valor: campo_valor . ',' nombre FLECHA_DOBLE valor_constante

    ','  desplazar e ir al estado 397
    ']'  desplazar e ir al estado 398


estado 357

   70 declaracion_constante: nombre ':' tipo_no_estructurado_o_nombre_tipo '=' valor_constante ';' .

    $default  reduce usando la regla 70 (declaracion_constante)


estado 358

   88 declaracion_variable: nombres_comas ':' error '=' valor_constante . ';'

    ';'  desplazar e ir al estado 399


estado 359

   86 declaracion_variable: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo '=' valor_constante . ';'

    ';'  desplazar e ir al estado 400


estado 360

   85 declaracion_variable: declaracion_variable nombres_comas ':' tipo_no_estructurado_o_nombre_tipo ';' .

    $default  reduce usando la regla 85 (declaracion_variable)


estado 361

   84 declaracion_variable: declaracion_variable nombres_comas ':' tipo_no_estructurado_o_nombre_tipo '=' . valor_constante ';'

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '['           desplazar e ir al estado 284
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    valor_constante       ir al estado 401
    llamada_subprograma   ir al estado 185
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 286


estado 362

  160 instruccion_casos: EN CASO expresion SEA . caso ';'

    $default  reduce usando la regla 164 (entrada_op)

    caso        ir al estado 402
    entradas    ir al estado 403
    entrada_op  ir al estado 404


estado 363

  180 objeto: nombre .

    $default  reduce usando la regla 180 (objeto)


estado 364

  170 clausula_iteracion: PARA nombre EN objeto .
  181 objeto: objeto . '[' expresion_comas ']'
  182       | objeto . '.' IDENTIFICADOR

    '['  desplazar e ir al estado 232
    '.'  desplazar e ir al estado 233

    $default  reduce usando la regla 170 (clausula_iteracion)


estado 365

  178 clausula_excepcion: CUANDO . nombre EJECUTA bloque_instrucciones

    $default  reduce usando la regla 6 (id_op)

    nombre  ir al estado 405
    id_op   ir al estado 9


estado 366

  175 instruccion_probar_excepto: PROBAR bloque_instrucciones EXCEPTO clausula_excepcion . FINALMENTE bloque_instrucciones
  176                           | PROBAR bloque_instrucciones EXCEPTO clausula_excepcion .
  177 clausula_excepcion: clausula_excepcion . CUANDO nombre EJECUTA bloque_instrucciones

    CUANDO      desplazar e ir al estado 406
    FINALMENTE  desplazar e ir al estado 407

    $default  reduce usando la regla 176 (instruccion_probar_excepto)


estado 367

  171 clausula_iteracion: REPITE ELEMENTO nombre EN . rango DESCENDENTE
  172                   | REPITE ELEMENTO nombre EN . rango

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    rango                 ir al estado 408
    llamada_subprograma   ir al estado 185
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 201


estado 368

  150 instruccion_salir: SALIR SI expresion ';' .

    $default  reduce usando la regla 150 (instruccion_salir)


estado 369

  158 instruccion_si: SI expresion ENTONCES bloque_instrucciones . SINO bloque_instrucciones
  159               | SI expresion ENTONCES bloque_instrucciones .

    SINO  desplazar e ir al estado 409

    $default  reduce usando la regla 159 (instruccion_si)


estado 370

  156 expresion_comas: expresion_comas ',' . expresion

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    llamada_subprograma   ir al estado 185
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 410


estado 371

  155 llamada_subprograma: nombre '(' expresion_comas ')' . nombre '(' ')'

    $default  reduce usando la regla 6 (id_op)

    nombre  ir al estado 411
    id_op   ir al estado 9


estado 372

  149 instruccion_asignacion: objeto '=' expresion ';' .

    $default  reduce usando la regla 149 (instruccion_asignacion)


estado 373

  181 objeto: objeto '[' expresion_comas ']' .

    $default  reduce usando la regla 181 (objeto)


estado 374

  136 parametros_formales: nombres_comas ':' . tipo_no_estructurado_o_nombre_tipo MODIFICABLE
  137                    | nombres_comas ':' . tipo_no_estructurado_o_nombre_tipo

    BOOLEANO  desplazar e ir al estado 60
    CADENA    desplazar e ir al estado 61
    CARACTER  desplazar e ir al estado 62
    CONJUNTO  desplazar e ir al estado 64
    ENTERO    desplazar e ir al estado 65
    FICHERO   desplazar e ir al estado 66
    LISTA     desplazar e ir al estado 67
    REAL      desplazar e ir al estado 68
    '('       desplazar e ir al estado 71

    $default  reduce usando la regla 6 (id_op)

    nombre                              ir al estado 72
    id_op                               ir al estado 9
    tipo_no_estructurado_o_nombre_tipo  ir al estado 412
    tipo_escalar                        ir al estado 75
    tipo_fichero                        ir al estado 76
    tipo_enumerado                      ir al estado 77
    tipo_lista                          ir al estado 78
    tipo_lista_asociativa               ir al estado 79
    tipo_conjunto                       ir al estado 80


estado 375

  135 lista_parametros_formales: lista_parametros_formales ';' . parametros_formales

    $default  reduce usando la regla 6 (id_op)

    nombre               ir al estado 57
    id_op                ir al estado 9
    nombres_comas        ir al estado 307
    parametros_formales  ir al estado 413


estado 376

  133 declaracion_parametros: '(' lista_parametros_formales ')' .

    $default  reduce usando la regla 133 (declaracion_parametros)


estado 377

  128 cabecera_funcion: FUNCION nombre declaracion_parametros FLECHA_DOBLE tipo_no_estructurado_o_nombre_tipo .

    $default  reduce usando la regla 128 (cabecera_funcion)


estado 378

  138 bloque_subprograma: declaracion_tipos declaracion_constantes declaracion_variables bloque_instrucciones .

    $default  reduce usando la regla 138 (bloque_subprograma)


estado 379

   93 declaracion_clase_mod: CLASE FINAL '{' declaraciones_publicas declaraciones_semi declaraciones_privadas . '}'

    '}'  desplazar e ir al estado 414


estado 380

   94 declaracion_clase_mod: CLASE FINAL '(' nombres_comas ')' '{' . declaraciones_publicas declaraciones_semi declaraciones_privadas '}'

    CONSTANTE      desplazar e ir al estado 166
    CONSTRUCTOR    desplazar e ir al estado 93
    DESTRUCTOR     desplazar e ir al estado 94
    FUNCION        desplazar e ir al estado 95
    PROCEDIMIENTO  desplazar e ir al estado 96
    PUBLICO        desplazar e ir al estado 167
    TIPO           desplazar e ir al estado 168

    $default  reduce usando la regla 6 (id_op)

    nombre                          ir al estado 57
    id_op                           ir al estado 9
    nombres_comas                   ir al estado 169
    declaraciones_publicas          ir al estado 415
    declaracion_componente_unoomas  ir al estado 171
    declaracion_componente          ir al estado 172
    declaracion_tipo_anidado        ir al estado 173
    declaracion_constante_anidada   ir al estado 174
    declaracion_atributos           ir al estado 175
    cabecera_subprograma            ir al estado 176
    cabecera_funcion                ir al estado 99
    cabecera_procedimiento          ir al estado 100
    cabecera_constructor            ir al estado 101
    cabecera_destructor             ir al estado 102


estado 381

  112 declaracion_atributos: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo ';' .

    $default  reduce usando la regla 112 (declaracion_atributos)


estado 382

  102 declaraciones_privadas: PRIVADO declaracion_componente_unoomas .
  104 declaracion_componente_unoomas: declaracion_componente_unoomas . declaracion_componente

    CONSTANTE      desplazar e ir al estado 166
    CONSTRUCTOR    desplazar e ir al estado 93
    DESTRUCTOR     desplazar e ir al estado 94
    FUNCION        desplazar e ir al estado 95
    PROCEDIMIENTO  desplazar e ir al estado 96
    TIPO           desplazar e ir al estado 168

    '}'       reduce usando la regla 102 (declaraciones_privadas)
    $default  reduce usando la regla 6 (id_op)

    nombre                         ir al estado 57
    id_op                          ir al estado 9
    nombres_comas                  ir al estado 169
    declaracion_componente         ir al estado 250
    declaracion_tipo_anidado       ir al estado 173
    declaracion_constante_anidada  ir al estado 174
    declaracion_atributos          ir al estado 175
    cabecera_subprograma           ir al estado 176
    cabecera_funcion               ir al estado 99
    cabecera_procedimiento         ir al estado 100
    cabecera_constructor           ir al estado 101
    cabecera_destructor            ir al estado 102


estado 383

   96 declaracion_clase_nomod: CLASE '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}' .

    $default  reduce usando la regla 96 (declaracion_clase_nomod)


estado 384

  108 declaracion_componente: cabecera_subprograma ';' modificadores ';' .

    $default  reduce usando la regla 108 (declaracion_componente)


estado 385

  114 modificador_comas: modificador_comas ',' . modificador

    ABSTRACTO   desplazar e ir al estado 318
    ESPECIFICO  desplazar e ir al estado 319
    FINAL       desplazar e ir al estado 320
    GENERICO    desplazar e ir al estado 321

    modificador  ir al estado 416


estado 386

   95 declaracion_clase_nomod: CLASE '(' nombres_comas ')' '{' declaraciones_publicas . declaraciones_semi declaraciones_privadas '}'

    SEMIPUBLICO  desplazar e ir al estado 248

    $default  reduce usando la regla 99 (declaraciones_semi)

    declaraciones_semi  ir al estado 417


estado 387

   59 rango: expresion DOS_PTOS expresion DOS_PTOS . expresion

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    llamada_subprograma   ir al estado 185
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 418


estado 388

   65 declaracion_campo: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo ';' .

    $default  reduce usando la regla 65 (declaracion_campo)


estado 389

   64 declaracion_campo: declaracion_campo nombres_comas ':' tipo_no_estructurado_o_nombre_tipo . ';'

    ';'  desplazar e ir al estado 419


estado 390

   75 valor_constante: '[' error ']' .

    $default  reduce usando la regla 75 (valor_constante)


estado 391

   79 clave_valor: CTC_CADENA FLECHA_DOBLE . valor_constante

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '['           desplazar e ir al estado 284
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    valor_constante       ir al estado 420
    llamada_subprograma   ir al estado 185
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 286


estado 392

   81 campo_valor: nombre FLECHA_DOBLE . valor_constante

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '['           desplazar e ir al estado 284
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    valor_constante       ir al estado 421
    llamada_subprograma   ir al estado 185
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 286


estado 393

   76 valor_constante_comas: valor_constante_comas ',' . valor_constante

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '['           desplazar e ir al estado 284
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    valor_constante       ir al estado 422
    llamada_subprograma   ir al estado 185
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 286


estado 394

   72 valor_constante: '[' valor_constante_comas ']' .

    $default  reduce usando la regla 72 (valor_constante)


estado 395

   78 clave_valor: clave_valor ',' . CTC_CADENA FLECHA_DOBLE valor_constante

    CTC_CADENA  desplazar e ir al estado 423


estado 396

   73 valor_constante: '[' clave_valor ']' .

    $default  reduce usando la regla 73 (valor_constante)


estado 397

   80 campo_valor: campo_valor ',' . nombre FLECHA_DOBLE valor_constante

    $default  reduce usando la regla 6 (id_op)

    nombre  ir al estado 424
    id_op   ir al estado 9


estado 398

   74 valor_constante: '[' campo_valor ']' .

    $default  reduce usando la regla 74 (valor_constante)


estado 399

   88 declaracion_variable: nombres_comas ':' error '=' valor_constante ';' .

    $default  reduce usando la regla 88 (declaracion_variable)


estado 400

   86 declaracion_variable: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo '=' valor_constante ';' .

    $default  reduce usando la regla 86 (declaracion_variable)


estado 401

   84 declaracion_variable: declaracion_variable nombres_comas ':' tipo_no_estructurado_o_nombre_tipo '=' valor_constante . ';'

    ';'  desplazar e ir al estado 425


estado 402

  160 instruccion_casos: EN CASO expresion SEA caso . ';'
  161 caso: caso . entradas FLECHA_DOBLE bloque_instrucciones

    ';'  desplazar e ir al estado 426

    $default  reduce usando la regla 164 (entrada_op)

    entradas    ir al estado 427
    entrada_op  ir al estado 404


estado 403

  162 caso: entradas . FLECHA_DOBLE bloque_instrucciones

    FLECHA_DOBLE  desplazar e ir al estado 428


estado 404

  163 entradas: entrada_op . entrada
  165 entrada_op: entrada_op . entrada '|'

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    OTRO          desplazar e ir al estado 429
    '('           desplazar e ir al estado 180
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    rango                 ir al estado 430
    llamada_subprograma   ir al estado 185
    entrada               ir al estado 431
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 432


estado 405

  178 clausula_excepcion: CUANDO nombre . EJECUTA bloque_instrucciones

    EJECUTA  desplazar e ir al estado 433


estado 406

  177 clausula_excepcion: clausula_excepcion CUANDO . nombre EJECUTA bloque_instrucciones

    $default  reduce usando la regla 6 (id_op)

    nombre  ir al estado 434
    id_op   ir al estado 9


estado 407

  175 instruccion_probar_excepto: PROBAR bloque_instrucciones EXCEPTO clausula_excepcion FINALMENTE . bloque_instrucciones

    '{'  desplazar e ir al estado 89

    bloque_instrucciones  ir al estado 435


estado 408

  171 clausula_iteracion: REPITE ELEMENTO nombre EN rango . DESCENDENTE
  172                   | REPITE ELEMENTO nombre EN rango .

    DESCENDENTE  desplazar e ir al estado 436

    $default  reduce usando la regla 172 (clausula_iteracion)


estado 409

  158 instruccion_si: SI expresion ENTONCES bloque_instrucciones SINO . bloque_instrucciones

    '{'  desplazar e ir al estado 89

    bloque_instrucciones  ir al estado 437


estado 410

  156 expresion_comas: expresion_comas ',' expresion .

    $default  reduce usando la regla 156 (expresion_comas)


estado 411

  155 llamada_subprograma: nombre '(' expresion_comas ')' nombre . '(' ')'

    '('  desplazar e ir al estado 438


estado 412

  136 parametros_formales: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo . MODIFICABLE
  137                    | nombres_comas ':' tipo_no_estructurado_o_nombre_tipo .

    MODIFICABLE  desplazar e ir al estado 439

    $default  reduce usando la regla 137 (parametros_formales)


estado 413

  135 lista_parametros_formales: lista_parametros_formales ';' parametros_formales .

    $default  reduce usando la regla 135 (lista_parametros_formales)


estado 414

   93 declaracion_clase_mod: CLASE FINAL '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}' .

    $default  reduce usando la regla 93 (declaracion_clase_mod)


estado 415

   94 declaracion_clase_mod: CLASE FINAL '(' nombres_comas ')' '{' declaraciones_publicas . declaraciones_semi declaraciones_privadas '}'

    SEMIPUBLICO  desplazar e ir al estado 248

    $default  reduce usando la regla 99 (declaraciones_semi)

    declaraciones_semi  ir al estado 440


estado 416

  114 modificador_comas: modificador_comas ',' modificador .

    $default  reduce usando la regla 114 (modificador_comas)


estado 417

   95 declaracion_clase_nomod: CLASE '(' nombres_comas ')' '{' declaraciones_publicas declaraciones_semi . declaraciones_privadas '}'

    PRIVADO  desplazar e ir al estado 316

    $default  reduce usando la regla 101 (declaraciones_privadas)

    declaraciones_privadas  ir al estado 441


estado 418

   59 rango: expresion DOS_PTOS expresion DOS_PTOS expresion .

    $default  reduce usando la regla 59 (rango)


estado 419

   64 declaracion_campo: declaracion_campo nombres_comas ':' tipo_no_estructurado_o_nombre_tipo ';' .

    $default  reduce usando la regla 64 (declaracion_campo)


estado 420

   79 clave_valor: CTC_CADENA FLECHA_DOBLE valor_constante .

    $default  reduce usando la regla 79 (clave_valor)


estado 421

   81 campo_valor: nombre FLECHA_DOBLE valor_constante .

    $default  reduce usando la regla 81 (campo_valor)


estado 422

   76 valor_constante_comas: valor_constante_comas ',' valor_constante .

    $default  reduce usando la regla 76 (valor_constante_comas)


estado 423

   78 clave_valor: clave_valor ',' CTC_CADENA . FLECHA_DOBLE valor_constante

    FLECHA_DOBLE  desplazar e ir al estado 442


estado 424

   80 campo_valor: campo_valor ',' nombre . FLECHA_DOBLE valor_constante

    FLECHA_DOBLE  desplazar e ir al estado 443


estado 425

   84 declaracion_variable: declaracion_variable nombres_comas ':' tipo_no_estructurado_o_nombre_tipo '=' valor_constante ';' .

    $default  reduce usando la regla 84 (declaracion_variable)


estado 426

  160 instruccion_casos: EN CASO expresion SEA caso ';' .

    $default  reduce usando la regla 160 (instruccion_casos)


estado 427

  161 caso: caso entradas . FLECHA_DOBLE bloque_instrucciones

    FLECHA_DOBLE  desplazar e ir al estado 444


estado 428

  162 caso: entradas FLECHA_DOBLE . bloque_instrucciones

    '{'  desplazar e ir al estado 89

    bloque_instrucciones  ir al estado 445


estado 429

  168 entrada: OTRO .

    $default  reduce usando la regla 168 (entrada)


estado 430

  167 entrada: rango .

    $default  reduce usando la regla 167 (entrada)


estado 431

  163 entradas: entrada_op entrada .
  165 entrada_op: entrada_op entrada . '|'

    '|'  desplazar e ir al estado 446

    $default  reduce usando la regla 163 (entradas)


estado 432

   58 rango: expresion . DOS_PTOS expresion
   59      | expresion . DOS_PTOS expresion DOS_PTOS expresion
  166 entrada: expresion .

    DOS_PTOS  desplazar e ir al estado 278

    $default  reduce usando la regla 166 (entrada)


estado 433

  178 clausula_excepcion: CUANDO nombre EJECUTA . bloque_instrucciones

    '{'  desplazar e ir al estado 89

    bloque_instrucciones  ir al estado 447


estado 434

  177 clausula_excepcion: clausula_excepcion CUANDO nombre . EJECUTA bloque_instrucciones

    EJECUTA  desplazar e ir al estado 448


estado 435

  175 instruccion_probar_excepto: PROBAR bloque_instrucciones EXCEPTO clausula_excepcion FINALMENTE bloque_instrucciones .

    $default  reduce usando la regla 175 (instruccion_probar_excepto)


estado 436

  171 clausula_iteracion: REPITE ELEMENTO nombre EN rango DESCENDENTE .

    $default  reduce usando la regla 171 (clausula_iteracion)


estado 437

  158 instruccion_si: SI expresion ENTONCES bloque_instrucciones SINO bloque_instrucciones .

    $default  reduce usando la regla 158 (instruccion_si)


estado 438

  155 llamada_subprograma: nombre '(' expresion_comas ')' nombre '(' . ')'

    ')'  desplazar e ir al estado 449


estado 439

  136 parametros_formales: nombres_comas ':' tipo_no_estructurado_o_nombre_tipo MODIFICABLE .

    $default  reduce usando la regla 136 (parametros_formales)


estado 440

   94 declaracion_clase_mod: CLASE FINAL '(' nombres_comas ')' '{' declaraciones_publicas declaraciones_semi . declaraciones_privadas '}'

    PRIVADO  desplazar e ir al estado 316

    $default  reduce usando la regla 101 (declaraciones_privadas)

    declaraciones_privadas  ir al estado 450


estado 441

   95 declaracion_clase_nomod: CLASE '(' nombres_comas ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas . '}'

    '}'  desplazar e ir al estado 451


estado 442

   78 clave_valor: clave_valor ',' CTC_CADENA FLECHA_DOBLE . valor_constante

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '['           desplazar e ir al estado 284
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    valor_constante       ir al estado 452
    llamada_subprograma   ir al estado 185
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 286


estado 443

   80 campo_valor: campo_valor ',' nombre FLECHA_DOBLE . valor_constante

    CTC_BOOLEANA  desplazar e ir al estado 117
    CTC_CADENA    desplazar e ir al estado 118
    CTC_CARACTER  desplazar e ir al estado 119
    CTC_ENTERA    desplazar e ir al estado 120
    CTC_REAL      desplazar e ir al estado 121
    '('           desplazar e ir al estado 180
    '['           desplazar e ir al estado 284
    '-'           desplazar e ir al estado 181
    '!'           desplazar e ir al estado 182

    $default  reduce usando la regla 6 (id_op)

    nombre                ir al estado 139
    id_op                 ir al estado 9
    valor_constante       ir al estado 453
    llamada_subprograma   ir al estado 185
    objeto                ir al estado 186
    expresion_constante   ir al estado 187
    expresion_primaria    ir al estado 188
    expresion_unitaria    ir al estado 189
    expresion_potencia    ir al estado 190
    expresion_prod        ir al estado 191
    expresion_sum         ir al estado 192
    expresion_desplz      ir al estado 193
    expresion_and_bin     ir al estado 194
    expresion_or_bin      ir al estado 195
    expresion_xor_bin     ir al estado 196
    expresion_comparar    ir al estado 197
    expresion_negacion    ir al estado 198
    expresion_and_logico  ir al estado 199
    expresion_or_logico   ir al estado 200
    expresion             ir al estado 286


estado 444

  161 caso: caso entradas FLECHA_DOBLE . bloque_instrucciones

    '{'  desplazar e ir al estado 89

    bloque_instrucciones  ir al estado 454


estado 445

  162 caso: entradas FLECHA_DOBLE bloque_instrucciones .

    $default  reduce usando la regla 162 (caso)


estado 446

  165 entrada_op: entrada_op entrada '|' .

    $default  reduce usando la regla 165 (entrada_op)


estado 447

  178 clausula_excepcion: CUANDO nombre EJECUTA bloque_instrucciones .

    $default  reduce usando la regla 178 (clausula_excepcion)


estado 448

  177 clausula_excepcion: clausula_excepcion CUANDO nombre EJECUTA . bloque_instrucciones

    '{'  desplazar e ir al estado 89

    bloque_instrucciones  ir al estado 455


estado 449

  155 llamada_subprograma: nombre '(' expresion_comas ')' nombre '(' ')' .

    $default  reduce usando la regla 155 (llamada_subprograma)


estado 450

   94 declaracion_clase_mod: CLASE FINAL '(' nombres_comas ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas . '}'

    '}'  desplazar e ir al estado 456


estado 451

   95 declaracion_clase_nomod: CLASE '(' nombres_comas ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}' .

    $default  reduce usando la regla 95 (declaracion_clase_nomod)


estado 452

   78 clave_valor: clave_valor ',' CTC_CADENA FLECHA_DOBLE valor_constante .

    $default  reduce usando la regla 78 (clave_valor)


estado 453

   80 campo_valor: campo_valor ',' nombre FLECHA_DOBLE valor_constante .

    $default  reduce usando la regla 80 (campo_valor)


estado 454

  161 caso: caso entradas FLECHA_DOBLE bloque_instrucciones .

    $default  reduce usando la regla 161 (caso)


estado 455

  177 clausula_excepcion: clausula_excepcion CUANDO nombre EJECUTA bloque_instrucciones .

    $default  reduce usando la regla 177 (clausula_excepcion)


estado 456

   94 declaracion_clase_mod: CLASE FINAL '(' nombres_comas ')' '{' declaraciones_publicas declaraciones_semi declaraciones_privadas '}' .

    $default  reduce usando la regla 94 (declaracion_clase_mod)
